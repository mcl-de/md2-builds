{"version":3,"sources":["ng://angular-md2/lib/core/compatibility/compatibility.ts","ng://angular-md2/lib/core/common-behaviors/common-module.ts","ng://angular-md2/lib/core/line/line.ts","ng://angular-md2/lib/core/rtl/dir.ts","ng://angular-md2/lib/core/observe-content/observe-content.ts","ng://angular-md2/lib/core/ripple/ripple-ref.ts","ng://angular-md2/lib/core/ripple/ripple-renderer.ts","ng://angular-md2/lib/core/platform/platform.ts","ng://angular-md2/lib/core/platform/features.ts","ng://angular-md2/lib/core/platform/index.ts","ng://angular-md2/lib/core/overlay/scroll/scroll-dispatcher.ts","ng://angular-md2/lib/core/overlay/position/viewport-ruler.ts","ng://angular-md2/lib/core/ripple/ripple.ts","ng://angular-md2/lib/core/overlay/scroll/scrollable.ts","ng://angular-md2/lib/core/overlay/scroll/scroll-strategy.ts","ng://angular-md2/lib/core/overlay/scroll/close-scroll-strategy.ts","ng://angular-md2/lib/core/overlay/scroll/noop-scroll-strategy.ts","ng://angular-md2/lib/core/overlay/scroll/block-scroll-strategy.ts","ng://angular-md2/lib/core/overlay/scroll/reposition-scroll-strategy.ts","ng://angular-md2/lib/core/overlay/scroll/scroll-strategy-options.ts","ng://angular-md2/lib/core/overlay/scroll/index.ts","ng://angular-md2/lib/core/ripple/index.ts","node_modules/tslib/tslib.es6.js","ng://angular-md2/lib/core/common-behaviors/color.ts","ng://angular-md2/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","ng://angular-md2/lib/core/selection/index.ts","ng://angular-md2/lib/core/coercion/boolean-property.ts","ng://angular-md2/lib/core/common-behaviors/disabled.ts","ng://angular-md2/lib/core/option/optgroup.ts","ng://angular-md2/lib/core/option/option.ts","ng://angular-md2/lib/core/keyboard/keycodes.ts","ng://angular-md2/lib/core/option/index.ts","ng://angular-md2/lib/core/portal/portal-errors.ts","ng://angular-md2/lib/core/portal/portal.ts","ng://angular-md2/lib/core/portal/portal-directives.ts","ng://angular-md2/lib/core/overlay/overlay-state.ts","ng://angular-md2/lib/core/portal/dom-portal-host.ts","ng://angular-md2/lib/core/overlay/overlay-ref.ts","ng://angular-md2/lib/core/overlay/position/connected-position.ts","ng://angular-md2/lib/core/overlay/position/connected-position-strategy.ts","ng://angular-md2/lib/core/overlay/position/global-position-strategy.ts","ng://angular-md2/lib/core/overlay/position/overlay-position-builder.ts","ng://angular-md2/lib/core/overlay/overlay-container.ts","ng://angular-md2/lib/core/overlay/overlay.ts","ng://angular-md2/lib/core/overlay/overlay-directives.ts","ng://angular-md2/lib/core/a11y/interactivity-checker.ts","ng://angular-md2/lib/core/a11y/focus-trap.ts","ng://angular-md2/lib/core/a11y/live-announcer.ts","ng://angular-md2/lib/core/a11y/index.ts","ng://angular-md2/lib/core/overlay/fullscreen-overlay-container.ts","ng://angular-md2/lib/core/gestures/gesture-config.ts","ng://angular-md2/lib/core/selection/selection.ts","ng://angular-md2/lib/core/coordination/unique-selection-dispatcher.ts","ng://angular-md2/lib/core/style/focus-origin-monitor.ts","ng://angular-md2/lib/core/style/index.ts","ng://angular-md2/lib/core/animation/animation.ts","ng://angular-md2/lib/core/datetime/date-adapter.ts","ng://angular-md2/lib/core/datetime/native-date-adapter.ts","ng://angular-md2/lib/core/datetime/date-formats.ts","ng://angular-md2/lib/core/datetime/native-date-formats.ts","ng://angular-md2/lib/core/datetime/index.ts","ng://angular-md2/lib/core/placeholder/placeholder-options.ts","ng://angular-md2/lib/core/core.ts","ng://angular-md2/lib/accordion/accordion.ts","ng://angular-md2/lib/accordion/accordiontab.ts","ng://angular-md2/lib/accordion/index.ts","ng://angular-md2/lib/autocomplete/autocomplete-pipe.ts","ng://angular-md2/lib/autocomplete/autocomplete.ts","ng://angular-md2/lib/autocomplete/index.ts","ng://angular-md2/lib/chips/chips.ts","ng://angular-md2/lib/collapse/collapse.ts","ng://angular-md2/lib/collapse/index.ts","ng://angular-md2/lib/colorpicker/color-util.ts","ng://angular-md2/lib/colorpicker/colorpicker.ts","ng://angular-md2/lib/colorpicker/index.ts","ng://angular-md2/lib/select/optgroup.ts","ng://angular-md2/lib/select/option.ts","ng://angular-md2/lib/core/a11y/focus-key-manager.ts","ng://angular-md2/lib/core/a11y/list-key-manager.ts","ng://angular-md2/lib/select/select-animations.ts","ng://angular-md2/lib/select/select.ts","ng://angular-md2/lib/select/select-errors.ts","ng://angular-md2/lib/select/select-header.ts","ng://angular-md2/lib/select/index.ts","ng://angular-md2/lib/data-table/data-table.ts","ng://angular-md2/lib/datepicker/date-locale.ts","ng://angular-md2/lib/datepicker/date-util.ts","ng://angular-md2/lib/datepicker/datepicker-animations.ts","ng://angular-md2/lib/datepicker/calendar.ts","ng://angular-md2/lib/datepicker/datepicker.ts","ng://angular-md2/lib/datepicker/datepicker-toggle.ts","ng://angular-md2/lib/datepicker/calendar-body.ts","ng://angular-md2/lib/datepicker/month-view.ts","ng://angular-md2/lib/datepicker/year-view.ts","ng://angular-md2/lib/datepicker/clock.ts","ng://angular-md2/lib/datepicker/index.ts","ng://angular-md2/lib/dialog/dialog.ts","ng://angular-md2/lib/core/util/object-extend.ts","ng://angular-md2/lib/dialog/index.ts","ng://angular-md2/lib/menu/menu-content.ts","ng://angular-md2/lib/menu/menu-item.ts","ng://angular-md2/lib/menu/menu-trigger.ts","ng://angular-md2/lib/menu/menu.ts","ng://angular-md2/lib/tabs/tabs.ts","ng://angular-md2/lib/tags/tags.ts","ng://angular-md2/lib/tags/index.ts","ng://angular-md2/lib/toast/toast.ts","ng://angular-md2/lib/toast/index.ts","ng://angular-md2/lib/tooltip/tooltip.ts","ng://angular-md2/lib/tooltip/index.ts","ng://angular-md2/lib/md.module.ts","ng://angular-md2/lib/core/a11y/fake-mousedown.ts","ng://angular-md2/lib/core/coercion/number-property.ts","ng://angular-md2/lib/core/style/apply-transform.ts"],"names":["MATERIAL_COMPATIBILITY_MODE","InjectionToken","getMdCompatibilityInvalidPrefixError","prefix","nodeName","Error","toLowerCase","MAT_ELEMENTS_SELECTOR","MD_ELEMENTS_SELECTOR","MatPrefixRejector","isCompatibilityMode","elementRef","nativeElement","Directive","args","selector","Optional","type","Inject","ElementRef","MdPrefixRejector","NgModule","declarations","exports","providers","provide","useValue","MATERIAL_SANITY_CHECKS","MdCommonModule","_document","_sanityChecksEnabled","this","_hasDoneGlobalChecks","isDevMode","_checkDoctype","_checkTheme","prototype","doctype","console","warn","getComputedStyle","testElement","createElement","classList","add","body","appendChild","display","removeChild","imports","CompatibilityModule","DOCUMENT","host","class","MdLineSetter","_lines","_renderer","_element","_this","_setLineClass","length","changes","subscribe","count","_resetClasses","_setClass","className","isAdd","addClass","removeClass","MdLine","EventEmitter","Object","defineProperty","Dir","_dir","v","old","dirChange","emit","dir","exportAs","Input","Output","HostBinding","MdMutationObserverFactory","create","callback","MutationObserver","Injectable","ObserveContent","_mutationObserverFactory","_elementRef","Subject","ngAfterContentInit","debounce","_debouncer","pipe","debounceTime","mutations","event","_observer","next","observe","characterData","childList","subtree","ngOnDestroy","disconnect","complete","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","element","config","RippleState","fadeOut","fadeOutRipple","RippleRenderer","_ngZone","_ruler","platform","Map","Set","isBrowser","_containerElement","_triggerEvents","set","onMousedown","bind","onMouseup","onMouseLeave","setTriggerElement","fadeInRipple","pageX","pageY","containerRect","getBoundingClientRect","centered","left","width","top","height","scrollPosition","getViewportScrollPosition","radius","distanceToFurthestCorner","x","y","rect","distX","Math","max","abs","right","distY","bottom","sqrt","duration","speedFactor","offsetX","offsetY","ripple","document","style","backgroundColor","color","transitionDuration","enforceStyleRecalculation","window","getPropertyValue","transform","rippleRef","state","_activeRipples","runTimeoutOutsideZone","persistent","_isMousedown","delete","rippleEl","RIPPLE_FADE_OUT_DURATION","opacity","parentNode","fadeOutAll","forEach","_triggerElement","fn","removeEventListener","runOutsideAngular","addEventListener","rippleDisabled","rippleConfig","delay","setTimeout","supportedInputTypes","hasV8BreakIterator","v8BreakIterator","test","navigator","userAgent","chrome","CSS","EDGE","TRIDENT","BLINK","MSStream","WEBKIT","candidateInputTypes","PlatformModule","Platform","ScrollDispatcher","_platform","register","scrollable","scrollSubscription","elementScrolled","_notify","scrollableReferences","deregister","has","get","unsubscribe","scrolled","auditTimeInMs","Subscription","EMPTY","observable","_scrolled","asObservable","auditTime","_scrolledCount","_globalSubscription","merge","fromEvent","subscription","size","getScrollContainers","scrollingContainers","_subscription","scrollableContainsElement","push","scrollableElement","getElementRef","parentElement","NgZone","SCROLL_DISPATCHER_PROVIDER_FACTORY","parentDispatcher","ngZone","SCROLL_DISPATCHER_PROVIDER","deps","SkipSelf","useFactory","ViewportRuler","scrollDispatcher","_cacheViewportGeometry","getViewportRect","documentRect","_documentRect","innerHeight","innerWidth","scrollTop","scrollY","documentElement","scrollLeft","scrollX","VIEWPORT_RULER_PROVIDER_FACTORY","parentRuler","VIEWPORT_RULER_PROVIDER","MD_RIPPLE_GLOBAL_OPTIONS","MdRipple","ruler","globalOptions","_rippleRenderer","_globalOptions","_updateRippleRenderer","ngOnChanges","trigger","launch","baseSpeedFactor","disabled","[class.mat-ripple-unbounded]","Scrollable","_scroll","ngOnInit","_scrollListener","listen","_elementScrolled","Renderer2","getMdScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","attach","overlayRef","_overlayRef","enable","_scrollSubscription","hasAttached","detach","disable","NoopScrollStrategy","BlockScrollStrategy","_viewportRuler","_canBeEnabled","root","_previousScrollPosition","_previousHTMLStyles","_isEnabled","remove","scroll","contains","viewport","scrollHeight","scrollWidth","RepositionScrollStrategy","_config","throttle","scrollThrottle","updatePosition","ScrollStrategyOptions","ScrollDispatchModule","MdRippleModule","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","__values","o","m","Symbol","iterator","i","call","value","done","__read","n","r","e","ar","error","__spread","arguments","concat","mixinColor","base","defaultColor","_super","class_1","_i","apply","tslib_1.__extends","_color","colorPalette","MdPseudoCheckboxBase","_MdPseudoCheckboxBase","MdPseudoCheckbox","renderer","Component","encapsulation","ViewEncapsulation","None","inputs","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","MdSelectionModule","coerceBooleanProperty","mixinDisabled","_disabled","MdOptgroupBase","_MdOptgroupMixinBase","_uniqueOptgroupIdCounter","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","MdOptionSelectionChange","source","isUserInput","MdOption","group","_isCompatibilityMode","_id","_selected","_active","_getHostElement","textContent","trim","select","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","_handleKeydown","keyCode","_selectViaInteraction","multiple","_getTabIndex","onSelectionChange","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","[class.mat-option]","MdOptgroup","decorators","MdOptionModule","CommonModule","throwPortalAlreadyAttachedError","Portal","throwNullPortalHostError","_attachedHost","throwNoPortalAttachedError","setAttachedHost","ComponentPortal","component","viewContainerRef","injector","TemplatePortal","templateRef","locals","BasePortalHost","_attachedPortal","portal","throwNullPortalError","_isDisposed","throwPortalHostAlreadyDisposedError","attachComponentPortal","attachTemplatePortal","throwUnknownPortalTypeError","_invokeDisposeFn","dispose","setDisposeFn","_disposeFn","TemplatePortalDirective","TemplateRef","ViewContainerRef","PortalHostDirective","_componentFactoryResolver","_viewContainerRef","_portal","componentFactory","resolveComponentFactory","ref","createComponent","parentInjector","destroy","createEmbeddedView","clear","ComponentFactoryResolver","OverlayState","DomPortalHost","_hostDomElement","_appRef","_defaultInjector","componentRef","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","detectChanges","rootNodes","rootNode","index","indexOf","OverlayRef","_portalHost","_pane","_state","_scrollStrategy","attachResult","_updateStackingOrder","updateSize","updateDirection","_togglePointerEvents","hasBackdrop","_attachBackdrop","panelClass","_attachments","detachBackdrop","detachmentResult","_detachments","positionStrategy","_backdropClick","backdropClick","attachments","detachments","getState","setAttribute","direction","formatCssUnit","minWidth","minHeight","enablePointer","pointerEvents","_backdropElement","backdropClass","insertBefore","requestAnimationFrame","nextSibling","backdropToDetach","finishDetach_1","ConnectionPositionPair","origin","overlay","originX","originY","overlayX","overlayY","ScrollableViewProperties","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","ConnectedPositionStrategy","_connectedTo","_originPos","_overlayPos","_origin","withFallbackPosition","_onPositionChange","_preferredPositions","originRect","overlayRect","viewportRect","fallbackPoint","fallbackPosition","_b","tslib_1.__values","_c","pos","originPoint","_getOriginConnectionPoint","overlayPoint","_getOverlayPoint","fitsInViewport","_setElementPosition","_lastConnectedPosition","getScrollableViewProperties","positionChange","Promise","resolve","visibleArea","recalculateLastPosition","lastPosition","withScrollableContainers","scrollables","originPos","overlayPos","withDirection","withOffsetX","offset","_offsetX","withOffsetY","_offsetY","_getStartX","_isRtl","_getEndX","originStartX","originEndX","overlayStartX","overlayStartY","leftOverflow","rightOverflow","topOverflow","bottomOverflow","_subtractOverflows","originBounds","_getElementBounds","overlayBounds","scrollContainerBounds","map","isOriginClipped","isElementClipped","isOriginOutsideView","isElementOutsideView","isOverlayClipped","isOverlayOutsideView","elementBounds","containersBounds","some","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","clippedAbove","clippedBelow","clippedLeft","clippedRight","horizontalStyleProperty","verticalStyleProperty","clientHeight","clientWidth","boundingClientRect","overflows","reduce","currentValue","currentOverflow","GlobalPositionStrategy","_bottomOffset","_topOffset","_alignItems","_rightOffset","_leftOffset","_justifyContent","_width","_height","centerHorizontally","centerVertically","_wrapper","styles","parentStyles","position","_cssPosition","marginTop","marginLeft","marginBottom","marginRight","justifyContent","alignItems","OverlayPositionBuilder","global","connectedTo","OverlayContainer","_themeClass","getContainerElement","_createContainer","container","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","nextUniqueId","defaultState","Overlay","scrollStrategies","_overlayContainer","_positionBuilder","_injector","_createOverlayRef","_createPaneElement","pane","id","_createPortalHost","scrollStrategy","noop","portalHost","ApplicationRef","Injector","OVERLAY_PROVIDERS","defaultPositionList","OverlayOrigin","ConnectedOverlayDirective","_overlay","reposition","_templatePortal","_position","_hasBackdrop","_destroyOverlay","open","_attachOverlay","_detachOverlay","_createOverlay","positions","_buildConfig","overlayConfig","_createPositionStrategy","strategy","_handlePositionChanges","_positionSubscription","onPositionChange","_initEscapeListener","_backdropSubscription","_escapeListener","PortalModule","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","offsetWidth","offsetHeight","getClientRects","visibility","isTabbable","frameElement","getWindow","node","ownerDocument","defaultView","frameType","getTabIndexValue","tabIndexValue","FIREFOX","IOS","isPotentiallyTabbableIOS","inputType","tabIndex","isFocusable","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","undefined","getAttribute","isNaN","parseInt","FocusTrap","_checker","deferAnchors","attachAnchors","_enabled","val","_startAnchor","_endAnchor","_createAnchor","focusLastTabbableElement","focusFirstTabbableElement","focusInitialElementWhenReady","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","querySelectorAll","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","children","childNodes","tabbableChild","nodeType","Node","ELEMENT_NODE","anchor","isStable","onStable","first","FocusTrapFactory","FocusTrapDeprecatedDirective","_focusTrapFactory","focusTrap","enabled","FocusTrapDirective","LIVE_ANNOUNCER_ELEMENT_TOKEN","LiveAnnouncer","elementToken","_liveElement","_createLiveElement","announce","message","politeness","_removeLiveElement","liveEl","LIVE_ANNOUNCER_PROVIDER_FACTORY","liveElement","LIVE_ANNOUNCER_PROVIDER","A11yModule","FullscreenOverlayContainer","_adjustParentForFullscreenChange","_addFullscreenChangeListener","getFullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","GestureConfig","Hammer","_hammer","buildHammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","item","HammerGestureConfig","SelectionModel","_isMulti","initiallySelectedValues","_emitChanges","_markSelected","_selectedToEmit","from","_selection","values","_emitChangeEvent","_unmarkSelected","toggle","isSelected","_unmarkAll","isEmpty","hasValue","sort","predicate","selected","_deselectedToEmit","eventData","SelectionChange","onChange","added","removed","UniqueSelectionDispatcher","notify","name","_listeners","listener","UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY","UNIQUE_SELECTION_DISPATCHER_PROVIDER","FocusOriginMonitor","WeakMap","_registerDocumentEvents","monitor","checkChildren","of","_elementInfo","info_1","subject","info","unlisten","focusListener","_onFocus","blurListener","_onBlur","stopMonitoring","elementInfo","_setClasses","focusVia","_setOriginForCurrentEventQueue","_lastTouchTarget","_touchTimeout","clearTimeout","target","_windowFocused","toggleClass","shouldSet","_wasCausedByTouch","focusTarget","_lastFocusOrigin","relatedTarget","CdkMonitorFocus","_focusOriginMonitor","cdkFocusChange","FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY","FOCUS_ORIGIN_MONITOR_PROVIDER","StyleModule","DateAdapter","setLocale","locale","compareDate","second","getYear","getMonth","getDate","sameDate","clampDate","date","min","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","long","short","narrow","DEFAULT_DATE_NAMES","range","String","DEFAULT_DAY_OF_WEEK_NAMES","valueFunction","valuesArray","NativeDateAdapter","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf_1","DateTimeFormat","month","_stripDirectionalityCharacters","format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","createDate","result","today","parse","timestamp","displayFormat","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","getISODateString","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","setFullYear","slice","s","replace","MD_DATE_FORMATS","MD_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","ɵ0$1","MD_PLACEHOLDER_GLOBAL_OPTIONS","MdCoreModule","MdLineModule","RtlModule","ObserveContentModule","OverlayModule","Md2Accordion","_multiple","addTab","tab","tabs","Md2AccordionHeader","Md2AccordionTab","_accordion","active","_handleClick","findTabIndex","close","originalEvent","preventDefault","animations","transition","animate","[class.md2-accordion-tab-active]","[class.md2-accordion-tab-disabled]","Md2AccordionModule","HighlightPipe","query","RegExp","_escapeRegexp","queryToEscape","Pipe","Item","textKey","valueKey","text","nextId","MD2_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","Md2Autocomplete","multi","Md2AutocompleteChange","_isInitialized","_readonly","_required","_items","_value","_inputValue","selItm","find","equals","selectedItem","o1","o2","key","keySet","t1","charAt","_inputFocused","noBlur","_list","readonly","updateScroll","_focusedOption","menuContainer","choices","highlighted","offsetTop","_handleKeyup","textChange","_handleMouseLeave","stopPropagation","_onClear","isMenuVisible","_selectOption","updateItems","updateValue","onFocus","_handleFocus","_handleBlur","_onTouched","_handleMouseEnter","minLength","filter","_onChange","change","writeValue","registerOnChange","registerOnTouched","setDisabledState","[attr.aria-label]","[attr.aria-required]","[class.md2-autocomplete-disabled]","Md2AutocompleteModule","FormsModule","Chip","MD2_CHIPS_CONTROL_VALUE_ACCESSOR","Md2Chips","Md2ChipsChange","elements","mainDiv","setValue","chipItemList","isArray","getFocusAutocomplete","changeAutocomplete","addNewChip","splitRegExp","pasteSplitPattern","templateHtmlString","innerHTML","valueupdate","evt","isEmptyAutoComplete","inputChanged","backspaceEvent","isAutoComplete","leftArrowKeyEvents","inputValue","rightArrowKeyEvents","addOnEnter","addOnComma","addOnSpace","autoCompleteFocued","_resetSelected","inputBlurred","inputFocused","inputFocus","inputPaste","pastedString","clipboardData","getData","_resetInput","selectedChip","_isValid","chipString","isExist","chip","allowedPattern","chips","maxChips","autocompleteItemText","autocompleteItemValue","removeSelectedChip","chipIndexToRemove","splice","isRemovable","chipInputForm","controls","c","[tabindex]","[class.chip-input-focus]","ViewChild","HostListener","MD2_CHIPS_DIRECTIVES","Md2Collapse","_collapse","hide","show","_collapsing","expanded","collapsed","[class.in]","[class.collapse]","[class.collapsing]","[attr.aria-expanded]","[attr.aria-hidden]","Md2CollapseModule","COLOR_RGB","COLOR_HSL","Hsva","h","a","Hsla","l","Rgba","g","ColorUtil","hsla2hsva","hsla","hsva2hsla","hsva","rgbaToHsva","rgba","hsvaToRgba","floor","f","q","t","stringToHsva","colorString","stringParsers","re","execResult","parseFloat","parser","match","exec","outputFormat","hslaText","round","denormalizeRGBA","hexText","toString","substr","SliderPosition","SliderDimension","TextDirective","changeInput","rg","newValue","numeric","(input)","ColorpickerSliderDirective","listenerMove","move","listenerStop","stop","setCursor","_getNativeElement","getX","getY","pointX","pointY","start","touches","pageXOffset","pageYOffset","(mousedown)","(touchstart)","Md2ColorChange","Md2Colorpicker","_util","_control","_created","valueAccessor","_placeholder","_innerValue","_container","destroyPanel","background-image","_panelOpen","panelOpen","isInputFocus","_defalutColor","sliderDim","slider","cFormat","update","_isColorpickerVisible","_initialColor","_subscribeToBackdrop","onOpen","setColorFromString","_cleanUpSubscriptions","colorpickerChange","setSaturation","setLightness","setHue","setAlpha","setR","setG","setB","setSaturationAndBrightness","clickOk","isInputValidColor","cancelColor","isValidColor","str","backColor","formatPolicy","hueRgba","alphaColor","_hueSliderColor","rgbaText","fontColor","_isDark","outputColor","clearColor","isDescendant","parent","child","checkInputVal","_createPickerPositionStrategy","[class.md2-colorpicker-disabled]","Renderer","NgControl","Self","Md2ColorpickerModule","Md2OptgroupBase","_Md2OptgroupMixinBase","[class.md2-optgroup-disabled]","Md2OptionSelectionChange","Md2Option","[class.md2-selected]","[class.md2-option-multiple]","[class.md2-active]","[class.md2-option-disabled]","[class.md2-option]","Md2Optgroup","FocusKeyManager","items","setActiveItem","activeItem","ListKeyManager","withWrap","_wrap","_activeItemIndex","_activeItem","toArray","onKeydown","setNextItemActive","setPreviousItemActive","_tabOut","setFirstItemActive","_setActiveItemByIndex","setLastItemActive","_setActiveItemByDelta","updateActiveItemIndex","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","transformPlaceholder","transformPanel","fadeInContent","SELECT_MAX_OPTIONS_DISPLAYED","Md2SelectChange","Md2Select","_changeDetectorRef","_tabIndex","then","_setTriggerWidth","_selectionModel","getMdSelectDynamicMultipleError","_floatPlaceholder","option","_initKeyManager","_changeSubscription","startWith","_resetOptions","_setSelectionByValue","_dropSubscriptions","_tabSubscription","_triggerWidth","_calculateOverlayPosition","_placeholderState","_floatPlaceholderState","_focusHost","selectedOptions","viewValue","reverse","_getTriggerRect","_handleClosedKeydown","_handleArrowKey","_handlePanelKeydown","_keyManager","_onPanelDone","_focusCorrectOption","onClose","_panelDoneAnimating","overlayDir","_onFadeInDone","_onAttached","_calculateOverlayOffsetX","_setScrollTop","overlayElement","_scrollTop","getMdSelectNonArrayValueError","_clearSelection","_selectValue","_sortValues","_setValueWidth","markForCheck","optionsArray","correspondingOption","skip","tabOut","_listenToOptions","_setOptionIds","_setOptionMultiple","_optionSubscription","optionSelectionChanges","_onSelect","wasSelected","_propagateChanges","fallbackValue","valueToEmit","_optionIds","_selectedValueWidth","_getOptionIndex","current","_getItemCount","panelHeight","maxScroll","selectedIndex","_getLabelCountBeforeOption","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","clampValue","SELECT_ITEM_HEIGHT","_getPlaceholderAnimationState","floatPlaceholder","_getPlaceholderOpacity","ariaLabelledby","ariaLabel","placeholder","isRtl","SELECT_PANEL_PADDING_X","optionOffsetFromPanelTop","triggerRect","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","prevActiveItem","currentActiveItem","optionGroups","optionIndex","groups","groupCounter","[attr.aria-invalid]","[attr.aria-owns]","[class.md2-select-disabled]","[class.md2-select]","(blur)","ChangeDetectorRef","Attribute","ContentChildren","descendants","Md2SelectModule","Md2OptionModule","Md2SelectHeader","Md2PaginationChange","Md2DataTable","differs","diff","_data","recalculatePage","isDataChanged","_activePage","_rowsPerPage","setPage","activePage","_sortBy","onSortChange","sortBy","sortOrder","_sortOrder","ngDoCheck","md2Data","fillData","getSort","setSort","sortByChange","sortOrderChange","getPage","rowsPerPage","dataLength","calculateNewActivePage","rowsPerPageChange","onPageChange","activePageChange","previousRowsPerPage","currentRowsPerPage","firstRowOnPage","ceil","lastPage","data","sortInt","caseInsensitiveIteratee","split","IterableDiffers","Md2DataTableSortBy","_md2Table","_isAsc","md2SortBy","_isDesc","_sort","[class.md2-sort-active]","Md2Pagination","_dataTable","_dataLength","_lastPage","md2Table","onPageChangeSubscriber","_setPage","pageNumber","_setRows","MD2_DATA_TABLE_DIRECTIVES","DEFAULT_HOUR_NAMES","DEFAULT_MINUTE_NAMES","range$1","DateLocale","dates","getHourNames","hours","getMinuteNames","minutes","daysOfWeek","firstDayOfWeek","getDateLabel","getHoursLabel","getHours","getMinutesLabel","getMinutes","getMonthLabel","DateUtil","Y","M","_locale","N","H","K","k","S","A","regexp","sub","startsWith","isType","isFunction","isList","isString","isNode","isObject","isNumber","getFindFunc","findFunc","obj","getFindIndex","list","defaultIndex","startIndex","endIndex","parseDate","fmt","indexMap","reIndex","wholeMatch","placeholderChar","placeholderDigits","param","plen","ctorArgs","matchVal","indexEntry","this_1","ctorIndex","mapEntry","parseDateMap","valList","listValue","getSeconds","seconds","addCalendarHours","addCalendarMinutes","getFirstDateOfWeek","getFirstDateOfMonth","getNumberOfDaysInMonth","getDateInNextMonth","getDateInPreviousMonth","isSameYear","d1","d2","isSameMonthAndYear","isSameDay","isSameHour","isSameMinute","isInNextMonth","startDate","endDate","nextMonth","isInPreviousMonth","previousMonth","getDateMidpoint","createDateAtMidnight","getTime","getWeekOfMonth","firstDayOfMonth","getWeekOfYear","UTC","setUTCDate","getUTCDay","yearStart","incrementMinutes","numberOfMinutes","incrementHours","numberOfHours","incrementDays","numberOfDays","incrementMonths","numberOfMonths","dateInTargetMonth","numberOfDaysInMonth","setDate","getMonthDistance","end","getLastDateOfMonth","isValidDate","setDateTimeToMidnight","setHours","isDateWithinRange","minDate","maxDate","dateAtMidnight","minDateAtMidnight","maxDateAtMidnight","isFullDateWithinRange","incrementYears","numberOfYears","getYearDistance","boundDate","getTimestampFromNode","Number","isMonthWithinRange","compareDateAndTime","sameDateAndTime","slideCalendar","keyframes","Md2Calendar","dateFilter","_clampedActiveDate","oldActiveDate","_currentView","calendarState","_activeDate","startAt","startView","_dateSelected","selectedChange","_monthSelected","_clockView","_timeSelected","_onActiveDateChange","_yearClicked","_dateClicked","_hoursClicked","_minutesClicked","_previousClicked","_nextClicked","_previousEnabled","_isSameView","_nextEnabled","_handleCalendarBodyKeydown","_handleCalendarBodyKeydownInMonthView","_handleCalendarBodyKeydownInYearView","_handleCalendarBodyKeydownInClockView","date1","date2","altKey","_dateFilterForViews","_prevMonthInSameCol","_nextMonthInSameCol","increment","_calendarState","_calendarStateDone","[class.md2-calendar]","tabindex","changeDetection","ChangeDetectionStrategy","OnPush","Md2DateChange","datepickerUid","Md2DatepickerContent","datepicker","[class.md2-datepicker-content-touch]","MD2_DATEPICKER_VALUE_ACCESSOR","Md2Datepicker","MD2_DATEPICKER_VALIDATORS","NG_VALIDATORS","control","md2DatepickerMin","actual","md2DatepickerMax","_dateFilter","md2DatepickerFilter","Validators","compose","_minValidator","_maxValidator","_filterValidator","_type","_formatDate","_format","_minDate","_validatorOnChange","_maxDate","coerceDateProperty","_openOnFocus","opened","_popupRef","_dialogRef","_inputSubscription","registerOnValidatorChange","validate","_validator","openOnFocus","el","substring","setMinutes","_getHours12","_selectAndClose","oldValue","_calendarPortal","touchUi","_openAsDialog","_openAsPopup","isAttached","_createDialog","instance","_createPopup","overlayState","_createPopupPositionStrategy","[class.md2-datepicker-disabled]","[class.md2-datepicker-opened]","Md2DatepickerToggle","_open","aria-label","Md2CalendarCell","displayValue","header","Md2CalendarBody","_cellClicked","cell","allowDisabledSelection","selectedValueChange","rows","numCols","_isActiveCell","rowIndex","colIndex","cellNumber","_firstRowOffset","activeCell","Md2MonthView","_dateFormats","narrowWeekdays","weekdays","_weekdays","_init","_selectedDate","_getDateInCurrentMonth","activeDate","_todayDate","firstOfMonth","_firstWeekOffset","_createWeekCells","oldWeek","daysInMonth","dateNames","_weeks","newWeek","Md2YearView","_selectedMonth","_getMonthInCurrentYear","_todayMonth","_yearLabel","monthNames","_months","row","_createCellForMonth","monthName","toLocaleUpperCase","_isMonthEnabled","CLOCK_OUTER_RADIUS","CLOCK_TICK_RADIUS","Md2Clock","mouseMoveListener","_handleMousemove","mouseUpListener","_handleMouseup","_min","_max","_hourView","_selectedHour","_selectedMinute","deg","twelvehour","margin-top","_handleMousedown","setTime","_hours","_minutes","hourNames","minuteNames","radian","PI","cos","sin","fontSize","atan2","unit","interval","z","outer","activeDateChange","Md2DatepickerModule","entryComponents","Md2DialogConfig","Md2DialogPortal","Md2Dialog","_parentDialog","_openDialogs","_openDialogsAtThisLevel","_applyConfigDefaults","dialogConfig","extendObject","dest","sources","TypeError","sources_1","sources_1_1","_boundKeydown","_visibility","topDialog","disableClose","[attr.role]","Md2DialogModule","Md2DialogTitle","Md2DialogContent","Md2DialogActions","Md2MenuContent","Md2MenuItem","Md2MenuTrigger","ngAfterViewInit","listenGlobal","_hasChildMenu","_closeMenu","_toggleMenu","_hasClass","_getParentElement","_openMenu","_getSiblingElements","_closeChildrenMenu","siblingElements","firstChild","_getClosestElement","parentEl","aria-haspopup","Md2Menu","Md2TabChange","Md2Transclude","_md2Transclude","[class]","[class.active]","Md2TabLabel","labelRef","Md2Tab","Md2Tabs","_selectedIndex","adjustOffset","_updateInkBar","selectedIndexChange","_focusIndex","wrapper","canvas","paging","updatePagination","findIndex","_inkBarLeft","offsetLeft","_inkBarWidth","focusNextTab","incrementIndex","focusPreviousTab","_shouldPaginate","_offsetLeft","fixOffset","wheelDelta","nextPage","totalWidth","previousPage","onWindowResize","canPageBack","canPageForward","lastTab","canvasWidth","inc","newIndex","focusIndex","(window:resize)","MD2_TABS_DIRECTIVES","Tag","MD2_TAGS_CONTROL_VALUE_ACCESSOR","Md2Tags","_selectTag","_tags","_onChangeCallback","_focusedTag","_handleInputKeydown","_selectedTag","selectAndFocusTagSafe","removeAndSelectAdjacentTag","_addTag","resetselectedTag","filterMatches","selIndex","getAdjacentTagIndex","removeTag","len","_removeTagAndFocusInput","_onInputFocus","_onInputBlur","_listEnter","_listLeave","tempList","tag","this_2","_onTouchedCallback","[class.focus]","[class.md2-tags-disabled]","Md2TagsModule","Toast","Md2ToastConfig","Md2Toast","toast","_toastInstance","_createToast","_setToastMessage","Md2ToastComponent","_disposeToast","addToast","clearToast","toastId","removeToast","hasToast","clearAllToasts","removeAllToasts","toasts","maxShown","Md2ToastModule","throwMd2TooltipInvalidPositionError","Md2Tooltip","_tooltipInstance","_disposeTooltip","_message","_setTooltipMessage","showDelay","_createTooltip","hideDelay","_isTooltipVisible","Md2TooltipComponent","afterHidden","_getOrigin","_getOverlayPosition","isDirectionLtr","isLtr","_markForCheck","onMicrotaskEmpty","(longpress)","(touchend)","_hideTimeoutId","_closeOnInteraction","_setTransformOrigin","_showTimeoutId","_onHide","_afterVisibilityAnimation","toState","_handleBodyInteraction","[style.zoom]","(body:click)","Md2TooltipModule","MD2_MODULES","Md2ChipsModule","Md2DataTableModule","Md2MenuModule","Md2TabsModule","MdNativeDateModule","isFakeMousedownFromScreenReader","buttons","coerceNumberProperty","getSupportedInputTypes","featureTestInput","applyCssTransform","transformValue","webkitTransform"],"mappings":"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","sourcesContent":["import {NgModule, Directive, Inject, Optional, ElementRef, InjectionToken} from '@angular/core';\n\nexport const MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\n\n/**\n * Returns an exception to be thrown if the consumer has used\n * an invalid Material prefix on a component.\n * @docs-private\n */\nexport function getMdCompatibilityInvalidPrefixError(prefix: string, nodeName: string) {\n  return Error(`The \"${prefix}-\" prefix cannot be used in ng-material v1 compatibility mode. ` +\n                   `It was used on an \"${nodeName.toLowerCase()}\" element.`);\n}\n\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nexport const MAT_ELEMENTS_SELECTOR = `\n  [mat-button],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [matCardSubtitle],\n  [matCardTitle],\n  [matDialogActions],\n  [matDialogClose],\n  [matDialogContent],\n  [matDialogTitle],\n  [matLine],\n  [matTabLabel],\n  [matTabLink],\n  [matTabNav],\n  [matTooltip],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-error,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-hint,\n  mat-icon,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-tab,\n  mat-tab-group,\n  mat-toolbar`;\n\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nexport const MD_ELEMENTS_SELECTOR = `\n  [md-button],\n  [md-fab],\n  [md-icon-button],\n  [md-mini-fab],\n  [md-raised-button],\n  [mdCardSubtitle],\n  [mdCardTitle],\n  [mdDialogActions],\n  [mdDialogClose],\n  [mdDialogContent],\n  [mdDialogTitle],\n  [mdLine],\n  [mdTabLabel],\n  [mdTabLink],\n  [mdTabNav],\n  [mdTooltip],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-error,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-hint,\n  md-icon,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-tab-group,\n  md-toolbar`;\n\n/** Directive that enforces that the `mat-` prefix cannot be used. */\n@Directive({selector: MAT_ELEMENTS_SELECTOR})\nexport class MatPrefixRejector {\n  constructor(\n    @Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (!isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('mat', elementRef.nativeElement.nodeName);\n    }\n  }\n}\n\n/** Directive that enforces that the `md-` prefix cannot be used. */\n@Directive({selector: MD_ELEMENTS_SELECTOR})\nexport class MdPrefixRejector {\n  constructor(\n    @Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('md', elementRef.nativeElement.nodeName);\n    }\n  }\n}\n\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\n@NgModule({\n  declarations: [MatPrefixRejector, MdPrefixRejector],\n  exports: [MatPrefixRejector, MdPrefixRejector],\n})\nexport class CompatibilityModule {}\n\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\n@NgModule({\n  providers: [{\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n  }],\n})\nexport class NoConflictStyleCompatibilityMode {}\n","import {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {CompatibilityModule} from '../compatibility/compatibility';\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\n\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, compatibility mode, etc.\n *\n * This module should be imported to each top-level component module (e.g., MdTabsModule).\n */\n@NgModule({\n  imports: [CompatibilityModule],\n  exports: [CompatibilityModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n})\nexport class MdCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  constructor(\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    @Optional() @Inject(MATERIAL_SANITY_CHECKS) _sanityChecksEnabled: boolean) {\n\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\n      this._checkDoctype();\n      this._checkTheme();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  private _checkDoctype(): void {\n    if (!this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkTheme(): void {\n    if (typeof getComputedStyle === 'function') {\n      const testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      if (getComputedStyle(testElement).display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\n}\n","import {\n  NgModule,\n  Directive,\n  Renderer2,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MdCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[md-line], [mat-line], [mdLine], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MdLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class MdLineSetter {\n  constructor(private _lines: QueryList<MdLine>, private _renderer: Renderer2,\n              private _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n\n  private _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n\n  private _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n\n  private _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, className);\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, className);\n    }\n  }\n\n}\n\n@NgModule({\n  imports: [MdCommonModule],\n  exports: [MdLine, MdCommonModule],\n  declarations: [MdLine],\n})\nexport class MdLineModule { }\n","import {\n  NgModule,\n  Directive,\n  HostBinding,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nexport type LayoutDirection = 'ltr' | 'rtl';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Applications should use this directive instead of the native attribute so that Material\n * components can listen on changes of direction.\n */\n@Directive({\n  selector: '[dir]',\n  // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n  exportAs: '$implicit'\n})\nexport class Dir {\n  /** Layout direction of the element. */\n  @Input('dir') _dir: LayoutDirection = 'ltr';\n\n  /** Event emitted when the direction changes. */\n  @Output() dirChange = new EventEmitter<void>();\n\n  /** @docs-private */\n  @HostBinding('attr.dir')\n  get dir(): LayoutDirection {\n    return this._dir;\n  }\n  set dir(v: LayoutDirection) {\n    let old = this._dir;\n    this._dir = v;\n    if (old != this._dir) {\n      this.dirChange.emit();\n    }\n  }\n\n  /** Current layout direction of the element. */\n  get value(): LayoutDirection { return this.dir; }\n  set value(v: LayoutDirection) { this.dir = v; }\n}\n\n\n@NgModule({\n  exports: [Dir],\n  declarations: [Dir]\n})\nexport class RtlModule {}\n","import {\n  Directive,\n  ElementRef,\n  NgModule,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\n@Injectable()\nexport class MdMutationObserverFactory {\n  create(callback: any): MutationObserver {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\n@Directive({\n  selector: '[cdkObserveContent]'\n})\nexport class ObserveContent implements AfterContentInit, OnDestroy {\n  private _observer: MutationObserver;\n\n  /** Event emitted for each change in the element's content. */\n  @Output('cdkObserveContent') event = new EventEmitter<MutationRecord[]>();\n\n  /** Used for debouncing the emitted values to the observeContent event. */\n  private _debouncer = new Subject<MutationRecord[]>();\n\n  /** Debounce interval for emitting the changes. */\n  @Input() debounce: number;\n\n  constructor(\n    private _mutationObserverFactory: MdMutationObserverFactory,\n    private _elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    if (this.debounce > 0) {\n      this._debouncer\n        .pipe(debounceTime(this.debounce))\n        .subscribe(mutations => this.event.emit(mutations));\n    } else {\n      this._debouncer.subscribe(mutations => this.event.emit(mutations));\n    }\n\n    this._observer = this._mutationObserverFactory.create((mutations: MutationRecord[]) => {\n      this._debouncer.next(mutations);\n    });\n\n    if (this._observer) {\n      this._observer.observe(this._elementRef.nativeElement, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._debouncer.complete();\n      this._debouncer = this._observer = null;\n    }\n  }\n}\n\n\n@NgModule({\n  exports: [ObserveContent],\n  declarations: [ObserveContent],\n  providers: [MdMutationObserverFactory]\n})\nexport class ObserveContentModule {}\n","import {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple reference. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    public element: HTMLElement,\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","import {ElementRef, NgZone} from '@angular/core';\nimport {Platform} from '../platform/platform';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {RippleRef, RippleState} from './ripple-ref';\n\n\n/** Fade-in duration for the ripples. Can be modified with the speedFactor option. */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n\n/** Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor. */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement;\n\n  /** Whether the mouse is currently down or not. */\n  private _isMousedown: boolean = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Ripple config for all ripples created by events. */\n  rippleConfig: RippleConfig = {};\n\n  /** Whether mouse ripples should be created or not. */\n  rippleDisabled: boolean = false;\n\n  constructor(\n      elementRef: ElementRef,\n      private _ngZone: NgZone,\n      private _ruler: ViewportRuler,\n      platform: Platform) {\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n      this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n      this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n\n      // By default use the host element as trigger element.\n      this.setTriggerElement(this._containerElement);\n    }\n  }\n\n  /** Fades in a ripple at the given coordinates. */\n  fadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\n    let containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      let scrollPosition = this._ruler.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    let radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n    let duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n    let offsetX = pageX - containerRect.left;\n    let offsetY = pageY - containerRect.top;\n\n    let ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isMousedown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    let rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets the trigger element and registers the mouse events. */\n  setTriggerElement(element: HTMLElement) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => this._triggerElement.removeEventListener(type, fn));\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n\n  /** Listener being called on mousedown event. */\n  private onMousedown(event: MouseEvent) {\n    if (!this.rippleDisabled) {\n      this._isMousedown = true;\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n    }\n  }\n\n  /** Listener being called on mouseup event. */\n  private onMouseup() {\n    this._isMousedown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Listener being called on mouseleave event. */\n  private onMouseLeave() {\n    if (this._isMousedown) {\n      this.onMouseup();\n    }\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\n// TODO(devversion): Move into global utility function.\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","import {Injectable} from '@angular/core';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nconst hasV8BreakIterator = (typeof(Intl) !== 'undefined' && (Intl as any).v8BreakIterator);\n\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * @docs-private\n */\n@Injectable()\nexport class Platform {\n  isBrowser: boolean = typeof document === 'object' && !!document;\n\n  /** Layout Engines */\n  EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  BLINK = this.isBrowser &&\n      (!!((window as any).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  WEBKIT = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Browsers and Platform Types */\n  IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n}\n","/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes: Set<string>;\n\n/** Types of <input> that *might* be supported. */\nconst candidateInputTypes = [\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n  // first changing it to something else:\n  // The specified value \"\" does not conform to the required format.\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n  'color',\n  'button',\n  'checkbox',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n\n/** @returns The input types supported by this browser. */\nexport function getSupportedInputTypes(): Set<string> {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n\n  return supportedInputTypes;\n}\n","import {NgModule} from '@angular/core';\nimport {Platform} from './platform';\n\n\n@NgModule({\n  providers: [Platform]\n})\nexport class PlatformModule {}\n\n\nexport * from './platform';\nexport * from './features';\n","import {ElementRef, Injectable, NgZone, Optional, SkipSelf} from '@angular/core';\nimport {Platform} from '../../platform/index';\nimport {Scrollable} from './scrollable';\nimport {Subject} from 'rxjs';\nimport {Subscription, merge, fromEvent} from 'rxjs';\nimport {auditTime} from 'rxjs/operators';\n\n\n/** Time in ms to throttle the scrolling events by default. */\nexport const DEFAULT_SCROLL_TIME = 20;\n\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\n@Injectable()\nexport class ScrollDispatcher {\n  constructor(private _ngZone: NgZone, private _platform: Platform) { }\n\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  _scrolled: Subject<void> = new Subject<void>();\n\n  /** Keeps track of the global `scroll` and `resize` subscriptions. */\n  _globalSubscription: Subscription = null;\n\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  private _scrolledCount = 0;\n\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollableReferences: Map<Scrollable, Subscription> = new Map();\n\n  /**\n   * Registers a Scrollable with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event in its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable: Scrollable): void {\n    const scrollSubscription = scrollable.elementScrolled().subscribe(() => this._notify());\n\n    this.scrollableReferences.set(scrollable, scrollSubscription);\n  }\n\n  /**\n   * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable: Scrollable): void {\n    if (this.scrollableReferences.has(scrollable)) {\n      this.scrollableReferences.get(scrollable).unsubscribe();\n      this.scrollableReferences.delete(scrollable);\n    }\n  }\n\n  /**\n   * Subscribes to an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   */\n  scrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME, callback: () => any): Subscription {\n    // Scroll events can only happen on the browser, so do nothing if we're not on the browser.\n    if (!this._platform.isBrowser) {\n      return Subscription.EMPTY;\n    }\n\n    // In the case of a 0ms delay, use an observable without auditTime\n    // since it does add a perceptible delay in processing overhead.\n    let observable = auditTimeInMs > 0 ?\n      this._scrolled.asObservable().pipe(auditTime(auditTimeInMs)) :\n      this._scrolled.asObservable();\n\n    this._scrolledCount++;\n\n    if (!this._globalSubscription) {\n      this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n        return merge(\n          fromEvent(window.document, 'scroll'),\n          fromEvent(window, 'resize')\n        ).subscribe(() => this._notify());\n      });\n    }\n\n    // Note that we need to do the subscribing from here, in order to be able to remove\n    // the global event listeners once there are no more subscriptions.\n    let subscription = observable.subscribe(callback);\n\n    subscription.add(() => {\n      this._scrolledCount--;\n\n      if (this._globalSubscription && !this.scrollableReferences.size && !this._scrolledCount) {\n        this._globalSubscription.unsubscribe();\n        this._globalSubscription = null;\n      }\n    });\n\n    return subscription;\n  }\n\n  /** Returns all registered Scrollables that contain the provided element. */\n  getScrollContainers(elementRef: ElementRef): Scrollable[] {\n    const scrollingContainers: Scrollable[] = [];\n\n    this.scrollableReferences.forEach((_subscription: Subscription, scrollable: Scrollable) => {\n      if (this.scrollableContainsElement(scrollable, elementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n\n    return scrollingContainers;\n  }\n\n  /** Returns true if the element is contained within the provided Scrollable. */\n  scrollableContainsElement(scrollable: Scrollable, elementRef: ElementRef): boolean {\n    let element = elementRef.nativeElement;\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) { return true; }\n    } while (element = element.parentElement);\n  }\n\n  /** Sends a notification that a scroll event has been fired. */\n  _notify() {\n    this._scrolled.next();\n  }\n}\n\nexport function SCROLL_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: ScrollDispatcher, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n\nexport const SCROLL_DISPATCHER_PROVIDER = {\n  // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n  provide: ScrollDispatcher,\n  deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n  useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n","import {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {ScrollDispatcher} from '../scroll/scroll-dispatcher';\n\n\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\n@Injectable()\nexport class ViewportRuler {\n\n  /** Cached document client rectangle. */\n  private _documentRect?: ClientRect;\n\n  constructor(scrollDispatcher: ScrollDispatcher) {\n    // Subscribe to scroll and resize events and update the document rectangle on changes.\n    scrollDispatcher.scrolled(null, () => this._cacheViewportGeometry());\n  }\n\n  /** Gets a ClientRect for the viewport's bounds. */\n  getViewportRect(documentRect = this._documentRect): ClientRect {\n    // Cache the document bounding rect so that we don't recompute it for multiple calls.\n    if (!documentRect) {\n      this._cacheViewportGeometry();\n      documentRect = this._documentRect;\n    }\n\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition(documentRect);\n    const height = window.innerHeight;\n    const width = window.innerWidth;\n\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width,\n    };\n  }\n\n\n  /**\n   * Gets the (top, left) scroll position of the viewport.\n   * @param documentRect\n   */\n  getViewportScrollPosition(documentRect = this._documentRect) {\n    // Cache the document bounding rect so that we don't recompute it for multiple calls.\n    if (!documentRect) {\n      this._cacheViewportGeometry();\n      documentRect = this._documentRect;\n    }\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                  document.documentElement.scrollTop || 0;\n\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                  document.documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /** Caches the latest client rectangle of the document element. */\n  _cacheViewportGeometry() {\n    this._documentRect = document.documentElement.getBoundingClientRect();\n  }\n\n}\n\nexport function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler: ViewportRuler,\n                                                scrollDispatcher: ScrollDispatcher) {\n  return parentRuler || new ViewportRuler(scrollDispatcher);\n}\n\nexport const VIEWPORT_RULER_PROVIDER = {\n  // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n  provide: ViewportRuler,\n  deps: [[new Optional(), new SkipSelf(), ViewportRuler], ScrollDispatcher],\n  useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {Platform} from '../platform/platform';\n\nexport interface RippleGlobalOptions {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MD_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('md-ripple-global-options');\n\n@Directive({\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n  exportAs: 'mdRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MdRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n  @Input('mdRippleTrigger') trigger: HTMLElement|HTMLElement;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('mdRippleCentered') centered: boolean;\n\n  /**\n   * Whether click events will not trigger the ripple. It can still be triggered by manually\n   * calling createRipple()\n   */\n  @Input('mdRippleDisabled') disabled: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('mdRippleRadius') radius: number = 0;\n\n  /**\n   * If set, the normal duration of ripple animations is divided by this value. For example,\n   * setting it to 0.5 will cause the animations to take twice as long.\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\n   */\n  @Input('mdRippleSpeedFactor') speedFactor: number = 1;\n\n  /** Custom color for ripples. */\n  @Input('mdRippleColor') color: string;\n\n  /** Whether foreground ripples should be visible outside the component's bounds. */\n  @Input('mdRippleUnbounded') unbounded: boolean;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  constructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    platform: Platform,\n    @Optional() @Inject(MD_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n\n  ngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n\n  /** Launches a manual ripple at the specified position. */\n  launch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /** Ripple configuration from the directive's input values. */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n\n  /** Updates the ripple renderer with the latest ripple configuration. */\n  private _updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\n}\n","import {Directive, ElementRef, OnInit, OnDestroy, NgZone, Renderer2} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\n@Directive({\n  selector: '[cdk-scrollable], [cdkScrollable]'\n})\nexport class Scrollable implements OnInit, OnDestroy {\n  private _elementScrolled: Subject<Event> = new Subject();\n  private _scrollListener: Function;\n\n  constructor(private _elementRef: ElementRef,\n              private _scroll: ScrollDispatcher,\n              private _ngZone: NgZone,\n              private _renderer: Renderer2) {}\n\n  ngOnInit() {\n    this._scrollListener = this._ngZone.runOutsideAngular(() => {\n      return this._renderer.listen(this.getElementRef().nativeElement, 'scroll', (event: Event) => {\n        this._elementScrolled.next(event);\n      });\n    });\n\n    this._scroll.register(this);\n  }\n\n  ngOnDestroy() {\n    this._scroll.deregister(this);\n\n    if (this._scrollListener) {\n      this._scrollListener();\n      this._scrollListener = null;\n    }\n  }\n\n  /**\n   * Returns observable that emits when a scroll event is fired on the host element.\n   */\n  elementScrolled(): Observable<any> {\n    return this._elementScrolled.asObservable();\n  }\n\n  getElementRef(): ElementRef {\n    return this._elementRef;\n  }\n}\n","import {OverlayRef} from '../overlay-ref';\n\n/**\n * Describes a strategy that will be used by an overlay\n * to handle scroll events while it is open.\n */\nexport interface ScrollStrategy {\n  enable: () => void;\n  disable: () => void;\n  attach: (overlayRef: OverlayRef) => void;\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nexport function getMdScrollStrategyAlreadyAttachedError(): Error {\n  return Error(`Scroll strategy has already been attached.`);\n}\n","import {ScrollStrategy, getMdScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayRef} from '../overlay-ref';\nimport {Subscription} from 'rxjs';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nexport class CloseScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayRef;\n\n  constructor(private _scrollDispatcher: ScrollDispatcher) { }\n\n  attach(overlayRef: OverlayRef) {\n    if (this._overlayRef) {\n      throw getMdScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  enable() {\n    if (!this._scrollSubscription) {\n      this._scrollSubscription = this._scrollDispatcher.scrolled(null, () => {\n        if (this._overlayRef.hasAttached()) {\n          this._overlayRef.detach();\n        }\n\n        this.disable();\n      });\n    }\n  }\n\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n}\n","import {ScrollStrategy} from './scroll-strategy';\n\n/**\n * Scroll strategy that doesn't do anything.\n */\nexport class NoopScrollStrategy implements ScrollStrategy {\n  enable() { }\n  disable() { }\n  attach() { }\n}\n","import {ScrollStrategy} from './scroll-strategy';\nimport {ViewportRuler} from '../position/viewport-ruler';\n\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nexport class BlockScrollStrategy implements ScrollStrategy {\n  private _previousHTMLStyles = { top: '', left: '' };\n  private _previousScrollPosition: { top: number, left: number };\n  private _isEnabled = false;\n\n  constructor(private _viewportRuler: ViewportRuler) { }\n\n  attach() { }\n\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = document.documentElement;\n\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left;\n      this._previousHTMLStyles.top = root.style.top;\n\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = `${-this._previousScrollPosition.left}px`;\n      root.style.top = `${-this._previousScrollPosition.top}px`;\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n\n  disable() {\n    if (this._isEnabled) {\n      this._isEnabled = false;\n      document.documentElement.style.left = this._previousHTMLStyles.left;\n      document.documentElement.style.top = this._previousHTMLStyles.top;\n      document.documentElement.classList.remove('cdk-global-scrollblock');\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n    }\n  }\n\n  private _canBeEnabled(): boolean {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    if (document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n\n    const body = document.body;\n    const viewport = this._viewportRuler.getViewportRect();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n","import {Subscription} from 'rxjs';\nimport {ScrollStrategy, getMdScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayRef} from '../overlay-ref';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\n/**\n * Config options for the RepositionScrollStrategy.\n */\nexport interface RepositionScrollStrategyConfig {\n  scrollThrottle?: number;\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nexport class RepositionScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayRef;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _config: RepositionScrollStrategyConfig) { }\n\n  attach(overlayRef: OverlayRef) {\n    if (this._overlayRef) {\n      throw getMdScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  enable() {\n    if (!this._scrollSubscription) {\n      let throttle = this._config ? this._config.scrollThrottle : 0;\n\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle, () => {\n        this._overlayRef.updatePosition();\n      });\n    }\n  }\n\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ScrollStrategy} from './scroll-strategy';\nimport {CloseScrollStrategy} from './close-scroll-strategy';\nimport {NoopScrollStrategy} from './noop-scroll-strategy';\nimport {BlockScrollStrategy} from './block-scroll-strategy';\nimport {ScrollDispatcher} from './scroll-dispatcher';\nimport {ViewportRuler} from '../position/viewport-ruler';\nimport {\n  RepositionScrollStrategy,\n  RepositionScrollStrategyConfig,\n} from './reposition-scroll-strategy';\n\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\n@Injectable()\nexport class ScrollStrategyOptions {\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler) { }\n\n  /** Do nothing on scroll. */\n  noop = () => new NoopScrollStrategy();\n\n  /** Close the overlay as soon as the user scrolls. */\n  close = () => new CloseScrollStrategy(this._scrollDispatcher);\n\n  /** Block scrolling. */\n  block = () => new BlockScrollStrategy(this._viewportRuler);\n\n  /**\n   * Update the overlay's position on scroll.\n   * @param config Configuration to be used inside the scroll strategy.\n   * Allows debouncing the reposition calls.\n   */\n  reposition = (config?: RepositionScrollStrategyConfig) =>\n      new RepositionScrollStrategy(this._scrollDispatcher, config)\n}\n","import {NgModule} from '@angular/core';\nimport {SCROLL_DISPATCHER_PROVIDER} from './scroll-dispatcher';\nimport {Scrollable} from './scrollable';\nimport {PlatformModule} from '../../platform/index';\nimport {ScrollStrategyOptions} from './scroll-strategy-options';\n\nexport {Scrollable} from './scrollable';\nexport {ScrollDispatcher} from './scroll-dispatcher';\n\n// Export pre-defined scroll strategies and interface to build custom ones.\nexport {ScrollStrategy} from './scroll-strategy';\nexport {ScrollStrategyOptions} from './scroll-strategy-options';\nexport {RepositionScrollStrategy} from './reposition-scroll-strategy';\nexport {CloseScrollStrategy} from './close-scroll-strategy';\nexport {NoopScrollStrategy} from './noop-scroll-strategy';\nexport {BlockScrollStrategy} from './block-scroll-strategy';\n\n@NgModule({\n  imports: [PlatformModule],\n  exports: [Scrollable],\n  declarations: [Scrollable],\n  providers: [SCROLL_DISPATCHER_PROVIDER, ScrollStrategyOptions],\n})\nexport class ScrollDispatchModule { }\n","import {NgModule} from '@angular/core';\nimport {MdRipple} from './ripple';\nimport {MdCommonModule} from '../common-behaviors/common-module';\nimport {VIEWPORT_RULER_PROVIDER} from '../overlay/position/viewport-ruler';\nimport {ScrollDispatchModule} from '../overlay/scroll/index';\nimport {PlatformModule} from '../platform/index';\n\nexport {MdRipple, RippleGlobalOptions, MD_RIPPLE_GLOBAL_OPTIONS} from './ripple';\nexport {RippleRef, RippleState} from './ripple-ref';\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\n\n@NgModule({\n  imports: [MdCommonModule, PlatformModule, ScrollDispatchModule],\n  exports: [MdRipple, MdCommonModule],\n  declarations: [MdRipple],\n  providers: [VIEWPORT_RULER_PROVIDER],\n})\nexport class MdRippleModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Constructor} from './constructor';\nimport {ElementRef, Renderer2} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  color: string;\n}\n\n/** @docs-private */\nexport interface HasRenderer {\n  _renderer: Renderer2;\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values.  */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | null;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasRenderer>>(base: T, defaultColor?: ThemePalette)\n    : Constructor<CanColor> & T {\n  return class extends base {\n    private _color: ThemePalette = null;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._renderer.removeClass(this._elementRef.nativeElement, `mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._renderer.addClass(this._elementRef.nativeElement, `mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","import {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\nimport {CanColor, mixinColor} from '../../common-behaviors/color';\n\nexport type MdPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n\n// Boilerplate for applying mixins to MdChip.\nexport class MdPseudoCheckboxBase {\n  constructor(public _renderer: Renderer2, public _elementRef: ElementRef) {}\n}\nexport const _MdPseudoCheckboxBase = mixinColor(MdPseudoCheckboxBase, 'accent');\n\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  \n  encapsulation: ViewEncapsulation.None,\n  selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.scss'],\n  inputs: ['color'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n})\nexport class MdPseudoCheckbox extends _MdPseudoCheckboxBase implements CanColor {\n  /** Display state of the checkbox. */\n  @Input() state: MdPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(elementRef: ElementRef, renderer: Renderer2) {\n    super(renderer, elementRef);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MdPseudoCheckbox],\n  declarations: [MdPseudoCheckbox]\n})\nexport class MdSelectionModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n","import {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","import {Component, ViewEncapsulation, ContentChildren, QueryList, Input} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n\n// Boilerplate for applying mixins to MdOptgroup.\nexport class MdOptgroupBase { }\nexport const _MdOptgroupMixinBase = mixinDisabled(MdOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `md-option`.\n */\n@Component({\n  \n  selector: 'md-optgroup, mat-optgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MdOptgroup extends _MdOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  NgModule,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ENTER, SPACE} from '../keyboard/keycodes';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../../core/compatibility/compatibility';\nimport {MdOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MdOption when selected or deselected. */\nexport class MdOptionSelectionChange {\n  constructor(public source: MdOption, public isUserInput = false) { }\n}\n\n\n/**\n * Single option inside of a `<md-select>` element.\n */\n@Component({\n  \n  selector: 'md-option, mat-option',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    '[class.mat-option]': 'true',\n  },\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdOption {\n  private _selected: boolean = false;\n  private _active: boolean = false;\n\n  /** Whether the option is disabled.  */\n  private _disabled: boolean = false;\n\n  private _id: string = `md-option-${_uniqueIdCounter++}`;\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  multiple: boolean = false;\n\n  /** The unique ID of the option. */\n  get id() { return this._id; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() onSelectionChange = new EventEmitter<MdOptionSelectionChange>();\n\n  constructor(\n    private _element: ElementRef,\n    @Optional() public readonly group: MdOptgroup,\n    @Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) public _isCompatibilityMode: boolean) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return this._getHostElement().textContent.trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    this._getHostElement().focus();\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    this._active = true;\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    this._active = false;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n    }\n  }\n\n  /**\n   * Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Fetches the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\n  }\n\n}\n","\n// Due to a bug in the ChromeDriver, Angular keyboard events are not triggered by `sendKeys`\n// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,\n// we are temporarily using a single (keydown) handler.\n// See: https://github.com/angular/angular/issues/9419\n\nexport const UP_ARROW = 38;\nexport const DOWN_ARROW = 40;\nexport const RIGHT_ARROW = 39;\nexport const LEFT_ARROW = 37;\n\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\n\nexport const HOME = 36;\nexport const END = 35;\n\nexport const ENTER = 13;\nexport const SPACE = 32;\nexport const TAB = 9;\n\nexport const ESCAPE = 27;\nexport const BACKSPACE = 8;\nexport const DELETE = 46;\n\nexport const COMMA = 188;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdRippleModule} from '../ripple/index';\nimport {MdSelectionModule} from '../selection/index';\nimport {MdOption} from './option';\nimport {MdOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MdRippleModule, CommonModule, MdSelectionModule],\n  exports: [MdOption, MdOptgroup],\n  declarations: [MdOption, MdOptgroup]\n})\nexport class MdOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nexport function throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nexport function throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nexport function throwPortalHostAlreadyDisposedError() {\n  throw Error('This PortalHost has already been disposed');\n}\n\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nexport function throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalHost accepts either' +\n                  'a ComponentPortal or a TemplatePortal.');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nexport function throwNullPortalHostError() {\n  throw Error('Attempting to attach a portal to a null PortalHost');\n}\n\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-privatew\n */\nexport function throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n","import {\n    TemplateRef,\n    ViewContainerRef,\n    ElementRef,\n    ComponentRef,\n    Injector\n} from '@angular/core';\nimport {\n    throwNullPortalHostError,\n    throwPortalAlreadyAttachedError,\n    throwNoPortalAttachedError,\n    throwNullPortalError,\n    throwPortalHostAlreadyDisposedError,\n    throwUnknownPortalTypeError\n} from './portal-errors';\nimport {ComponentType} from '../overlay/generic-component-type';\n\n\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalHost`.\n */\nexport abstract class Portal<T> {\n  private _attachedHost: PortalHost;\n\n  /** Attach this portal to a host. */\n  attach(host: PortalHost): T {\n    if (host == null) {\n      throwNullPortalHostError();\n    }\n\n    if (host.hasAttached()) {\n      throwPortalAlreadyAttachedError();\n    }\n\n    this._attachedHost = host;\n    return <T> host.attach(this);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    let host = this._attachedHost;\n    if (host == null) {\n      throwNoPortalAttachedError();\n    }\n\n    this._attachedHost = null;\n    return host.detach();\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host: PortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin is necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** [Optional] Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(\n      component: ComponentType<T>,\n      viewContainerRef: ViewContainerRef = null,\n      injector: Injector = null) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n  }\n}\n\n\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal extends Portal<Map<string, any>> {\n  /** The embedded template that will be used to instantiate an embedded View in the host. */\n  templateRef: TemplateRef<any>;\n\n  /** Reference to the ViewContainer into which the template will be stamped out. */\n  viewContainerRef: ViewContainerRef;\n\n  /**\n   * Additional locals for the instantiated embedded view.\n   * These locals can be seen as \"exports\" for the template, such as how ngFor has\n   * index / event / odd.\n   * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n   */\n  locals: Map<string, any> = new Map<string, any>();\n\n  constructor(template: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super();\n    this.templateRef = template;\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  get origin(): ElementRef {\n    return this.templateRef.elementRef;\n  }\n\n  attach(host: PortalHost, locals?: Map<string, any>): Map<string, any> {\n    this.locals = locals == null ? new Map<string, any>() : locals;\n    return super.attach(host);\n  }\n\n  detach(): void {\n    this.locals = new Map<string, any>();\n    return super.detach();\n  }\n}\n\n\n/**\n * A `PortalHost` is an space that can contain a single `Portal`.\n */\nexport interface PortalHost {\n  attach(portal: Portal<any>): any;\n\n  detach(): any;\n\n  dispose(): void;\n\n  hasAttached(): boolean;\n}\n\n\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n */\nexport abstract class BasePortalHost implements PortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal: Portal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn: () => void;\n\n  /** Whether this host has already been permanently disposed. */\n  private _isDisposed: boolean = false;\n\n  /** Whether this host has an attached portal. */\n  hasAttached(): boolean {\n    return !!this._attachedPortal;\n  }\n\n  attach(portal: Portal<any>): any {\n    if (!portal) {\n      throwNullPortalError();\n    }\n\n    if (this.hasAttached()) {\n      throwPortalAlreadyAttachedError();\n    }\n\n    if (this._isDisposed) {\n      throwPortalHostAlreadyDisposedError();\n    }\n\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n    }\n\n    throwUnknownPortalTypeError();\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n\n  abstract attachTemplatePortal(portal: TemplatePortal): Map<string, any>;\n\n  detach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n\n    this._invokeDisposeFn();\n  }\n\n  dispose() {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n\n  private _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n","import {\n    NgModule,\n    ComponentRef,\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    OnDestroy,\n    Input,\n} from '@angular/core';\nimport {Portal, TemplatePortal, ComponentPortal, BasePortalHost} from './portal';\n\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n *\n * Usage:\n * <ng-template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </ng-template>\n */\n@Directive({\n  selector: '[cdk-portal], [cdkPortal], [portal]',\n  exportAs: 'cdkPortal',\n})\nexport class TemplatePortalDirective extends TemplatePortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * <ng-template [cdkPortalHost]=\"greeting\"></ng-template>\n */\n@Directive({\n  selector: '[cdkPortalHost], [portalHost]',\n  inputs: ['portal: cdkPortalHost']\n})\nexport class PortalHostDirective extends BasePortalHost implements OnDestroy {\n  /** The attached portal. */\n  private _portal: Portal<any>;\n\n  constructor(\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  /** @deprecated */\n  @Input('portalHost')\n  get _deprecatedPortal() { return this.portal; }\n  set _deprecatedPortal(v) { this.portal = v; }\n\n  /** Portal associated with the Portal host. */\n  get portal(): Portal<any> {\n    return this._portal;\n  }\n\n  set portal(portal: Portal<any>) {\n    if (this.hasAttached()) {\n      super.detach();\n    }\n\n    if (portal) {\n      super.attach(portal);\n    }\n\n    this._portal = portal;\n  }\n\n  ngOnDestroy() {\n    super.dispose();\n    this._portal = null;\n  }\n\n  /**\n   * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\n   *\n   * @param portal Portal to be attached to the portal host.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalHost.\n    let viewContainerRef = portal.viewContainerRef != null ?\n        portal.viewContainerRef :\n        this._viewContainerRef;\n\n    let componentFactory =\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let ref = viewContainerRef.createComponent(\n        componentFactory, viewContainerRef.length,\n        portal.injector || viewContainerRef.parentInjector);\n\n    super.setDisposeFn(() => ref.destroy());\n    this._portal = portal;\n\n    return ref;\n  }\n\n  /**\n   * Attach the given TemplatePortal to this PortlHost as an embedded View.\n   * @param portal Portal to be attached.\n   */\n  attachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    portal.setAttachedHost(this);\n\n    this._viewContainerRef.createEmbeddedView(portal.templateRef);\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n\n    this._portal = portal;\n\n    // TODO(jelbourn): return locals from view\n    return new Map<string, any>();\n  }\n}\n\n\n@NgModule({\n  exports: [TemplatePortalDirective, PortalHostDirective],\n  declarations: [TemplatePortalDirective, PortalHostDirective],\n})\nexport class PortalModule {}\n","import {PositionStrategy} from './position/position-strategy';\nimport {LayoutDirection} from '../rtl/dir';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\n\n\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nexport class OverlayState {\n  /** Strategy with which to position the overlay. */\n  positionStrategy: PositionStrategy;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  scrollStrategy: ScrollStrategy;\n\n  /** Custom class to add to the overlay pane. */\n  panelClass: string = '';\n\n  /** Whether the overlay has a backdrop. */\n  hasBackdrop: boolean = false;\n\n  /** Custom class to add to the backdrop */\n  backdropClass: string = 'cdk-overlay-dark-backdrop';\n\n  /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n  width: number | string;\n\n  /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n  height: number | string;\n\n  /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  minWidth: number | string;\n\n  /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  minHeight: number | string;\n\n  /** The direction of the text in the overlay panel. */\n  direction: LayoutDirection = 'ltr';\n\n  // TODO(jelbourn): configuration still to add\n  // - focus trap\n  // - disable pointer events\n  // - z-index\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport {BasePortalHost, ComponentPortal, TemplatePortal} from './portal';\n\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n      private _hostDomElement: Element,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _appRef: ApplicationRef,\n      private _defaultInjector: Injector) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    let componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(\n          componentFactory,\n          portal.viewContainerRef.length,\n          portal.injector || portal.viewContainerRef.parentInjector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   */\n  attachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n    viewRef.detectChanges();\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalHost the view can be added everywhere in the DOM (e.g Overlay Container)\n    // To move the view to the specified host element. We just re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this._hostDomElement.appendChild(rootNode));\n\n    this.setDisposeFn((() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    }));\n\n    // TODO(jelbourn): Return locals from view.\n    return new Map<string, any>();\n  }\n\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose(): void {\n    super.dispose();\n    if (this._hostDomElement.parentNode != null) {\n      this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n    }\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {PortalHost, Portal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\nimport {Observable, Subject} from 'rxjs';\n\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalHost {\n  private _backdropElement: HTMLElement = null;\n  private _backdropClick: Subject<any> = new Subject();\n  private _attachments = new Subject<void>();\n  private _detachments = new Subject<void>();\n\n  constructor(\n      private _portalHost: PortalHost,\n      private _pane: HTMLElement,\n      private _state: OverlayState,\n      private _scrollStrategy: ScrollStrategy,\n      private _ngZone: NgZone) {\n\n    _scrollStrategy.attach(this);\n  }\n\n  /** The overlay's HTML element */\n  get overlayElement(): HTMLElement {\n    return this._pane;\n  }\n\n  /**\n   * Attaches the overlay to a portal instance and adds the backdrop.\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal: Portal<any>): any {\n    let attachResult = this._portalHost.attach(portal);\n\n    // Update the pane element with the given state configuration.\n    this._updateStackingOrder();\n    this.updateSize();\n    this.updateDirection();\n    this.updatePosition();\n    this._scrollStrategy.enable();\n\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n\n    if (this._state.hasBackdrop) {\n      this._attachBackdrop();\n    }\n\n    if (this._state.panelClass) {\n      this._pane.classList.add(this._state.panelClass);\n    }\n\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n\n    return attachResult;\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach(): Promise<any> {\n    this.detachBackdrop();\n\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n    this._scrollStrategy.disable();\n\n    let detachmentResult = this._portalHost.detach();\n\n    // Only emit after everything is detached.\n    this._detachments.next();\n\n    return detachmentResult;\n  }\n\n  /**\n   * Cleans up the overlay from the DOM.\n   */\n  dispose(): void {\n    if (this._state.positionStrategy) {\n      this._state.positionStrategy.dispose();\n    }\n\n    if (this._scrollStrategy) {\n      this._scrollStrategy.disable();\n      this._scrollStrategy = null;\n    }\n\n    this.detachBackdrop();\n    this._portalHost.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._detachments.next();\n    this._detachments.complete();\n  }\n\n  /**\n   * Checks whether the overlay has been attached.\n   */\n  hasAttached(): boolean {\n    return this._portalHost.hasAttached();\n  }\n\n  /**\n   * Returns an observable that emits when the backdrop has been clicked.\n   */\n  backdropClick(): Observable<void> {\n    return this._backdropClick.asObservable();\n  }\n\n  /** Returns an observable that emits when the overlay has been attached. */\n  attachments(): Observable<void> {\n    return this._attachments.asObservable();\n  }\n\n  /** Returns an observable that emits when the overlay has been detached. */\n  detachments(): Observable<void> {\n    return this._detachments.asObservable();\n  }\n\n  /**\n   * Gets the current state config of the overlay.\n   */\n  getState(): OverlayState {\n    return this._state;\n  }\n\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition() {\n    if (this._state.positionStrategy) {\n      this._state.positionStrategy.apply(this._pane);\n    }\n  }\n\n  /** Updates the text direction of the overlay panel. */\n  private updateDirection() {\n    this._pane.setAttribute('dir', this._state.direction);\n  }\n\n  /** Updates the size of the overlay based on the overlay config. */\n  updateSize() {\n    if (this._state.width || this._state.width === 0) {\n      this._pane.style.width = formatCssUnit(this._state.width);\n    }\n\n    if (this._state.height || this._state.height === 0) {\n      this._pane.style.height = formatCssUnit(this._state.height);\n    }\n\n    if (this._state.minWidth || this._state.minWidth === 0) {\n      this._pane.style.minWidth = formatCssUnit(this._state.minWidth);\n    }\n\n    if (this._state.minHeight || this._state.minHeight === 0) {\n      this._pane.style.minHeight = formatCssUnit(this._state.minHeight);\n    }\n  }\n\n  /** Toggles the pointer events for the overlay pane element. */\n  private _togglePointerEvents(enablePointer: boolean) {\n    this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n  }\n\n  /** Attaches a backdrop for this overlay. */\n  private _attachBackdrop() {\n    this._backdropElement = document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n    this._backdropElement.classList.add(this._state.backdropClass);\n\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._pane.parentElement.insertBefore(this._backdropElement, this._pane);\n\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', () => this._backdropClick.next(null));\n\n    // Add class to fade-in the backdrop after one frame.\n    requestAnimationFrame(() => {\n      if (this._backdropElement) {\n        this._backdropElement.classList.add('cdk-overlay-backdrop-showing');\n      }\n    });\n  }\n\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  private _updateStackingOrder() {\n    if (this._pane.nextSibling) {\n      this._pane.parentNode.appendChild(this._pane);\n    }\n  }\n\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop(): void {\n    let backdropToDetach = this._backdropElement;\n\n    if (backdropToDetach) {\n      let finishDetach = () => {\n        // It may not be attached to anything in certain cases (e.g. unit tests).\n        if (backdropToDetach && backdropToDetach.parentNode) {\n          backdropToDetach.parentNode.removeChild(backdropToDetach);\n        }\n\n        // It is possible that a new portal has been attached to this overlay since we started\n        // removing the backdrop. If that is the case, only clear the backdrop reference if it\n        // is still the same instance that we started to remove.\n        if (this._backdropElement == backdropToDetach) {\n          this._backdropElement = null;\n        }\n      };\n\n      backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n      backdropToDetach.classList.remove(this._state.backdropClass);\n      backdropToDetach.addEventListener('transitionend', finishDetach);\n\n      // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n      // In this case we make it unclickable and we try to remove it after a delay.\n      backdropToDetach.style.pointerEvents = 'none';\n\n      // Run this outside the Angular zone because there's nothing that Angular cares about.\n      // If it were to run inside the Angular zone, every test that used Overlay would have to be\n      // either async or fakeAsync.\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(finishDetach, 500);\n      });\n    }\n  }\n}\n\nfunction formatCssUnit(value: number | string) {\n  return typeof value === 'string' ? value as string : `${value}px`;\n}\n","/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\nimport {Optional} from '@angular/core';\nexport type HorizontalConnectionPos = 'start' | 'center' | 'end';\n\n/** Vertical dimension of a connection point on the perimeter of the origin or overlay element. */\nexport type VerticalConnectionPos = 'top' | 'center' | 'bottom';\n\n\n/** A connection point on the origin element. */\nexport interface OriginConnectionPosition {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n}\n\n/** A connection point on the overlay element. */\nexport interface OverlayConnectionPosition {\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n}\n\n/** The points of the origin element and the overlay element to connect. */\nexport class ConnectionPositionPair {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n\n  constructor(origin: OriginConnectionPosition, overlay: OverlayConnectionPosition) {\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n */\nexport class ScrollableViewProperties {\n  isOriginClipped: boolean;\n  isOriginOutsideView: boolean;\n  isOverlayClipped: boolean;\n  isOverlayOutsideView: boolean;\n}\n\n/** The change event emitted by the strategy when a fallback position is used. */\nexport class ConnectedOverlayPositionChange {\n  constructor(public connectionPair: ConnectionPositionPair,\n              @Optional() public scrollableViewProperties: ScrollableViewProperties) {}\n}\n","import {PositionStrategy} from './position-strategy';\nimport {ElementRef} from '@angular/core';\nimport {ViewportRuler} from './viewport-ruler';\nimport {\n  ConnectionPositionPair,\n  OriginConnectionPosition,\n  OverlayConnectionPosition,\n  ConnectedOverlayPositionChange, ScrollableViewProperties\n} from './connected-position';\nimport {Subject, Observable} from 'rxjs';\nimport {Scrollable} from '../scroll/scrollable';\n\n/**\n * Container to hold the bounding positions of a particular element with respect to the viewport,\n * where top and bottom are the y-axis coordinates of the bounding rectangle and left and right are\n * the x-axis coordinates.\n */\ntype ElementBoundingPositions = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nexport class ConnectedPositionStrategy implements PositionStrategy {\n  private _dir = 'ltr';\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  private _offsetX: number = 0;\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  private _offsetY: number = 0;\n\n  /** The Scrollable containers used to check scrollable view properties on position change. */\n  private scrollables: Scrollable[] = [];\n\n  /** Whether the we're dealing with an RTL context */\n  get _isRtl() {\n    return this._dir === 'rtl';\n  }\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** The origin element against which the overlay will be positioned. */\n  private _origin: HTMLElement;\n\n  /** The overlay pane element. */\n  private _pane: HTMLElement;\n\n  /** The last position to have been calculated as the best fit position. */\n  private _lastConnectedPosition: ConnectionPositionPair;\n\n  _onPositionChange:\n      Subject<ConnectedOverlayPositionChange> = new Subject<ConnectedOverlayPositionChange>();\n\n  /** Emits an event when the connection point changes. */\n  get onPositionChange(): Observable<ConnectedOverlayPositionChange> {\n    return this._onPositionChange.asObservable();\n  }\n\n  constructor(\n      private _connectedTo: ElementRef,\n      private _originPos: OriginConnectionPosition,\n      private _overlayPos: OverlayConnectionPosition,\n      private _viewportRuler: ViewportRuler) {\n    this._origin = this._connectedTo.nativeElement;\n    this.withFallbackPosition(_originPos, _overlayPos);\n  }\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions() {\n    return this._preferredPositions;\n  }\n\n  /**\n   * To be used to for any cleanup after the element gets destroyed.\n   */\n  dispose() { }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin fits on-screen.\n   * @docs-private\n   *\n   * @param element Element to which to apply the CSS styles.\n   * @returns Resolves when the styles have been applied.\n   */\n  apply(element: HTMLElement): Promise<void> {\n    // Cache the overlay pane element in case re-calculating position is necessary\n    this._pane = element;\n\n    // We need the bounding rects for the origin and the overlay to determine how to position\n    // the overlay relative to the origin.\n    const originRect = this._origin.getBoundingClientRect();\n    const overlayRect = element.getBoundingClientRect();\n\n    // We use the viewport rect to determine whether a position would go off-screen.\n    const viewportRect = this._viewportRuler.getViewportRect();\n\n    // Fallback point if none of the fallbacks fit into the viewport.\n    let fallbackPoint: OverlayPoint = null;\n    let fallbackPosition: ConnectionPositionPair = null;\n\n    // We want to place the overlay in the first of the preferred positions such that the\n    // overlay fits on-screen.\n    for (let pos of this._preferredPositions) {\n      // Get the (x, y) point of connection on the origin, and then use that to get the\n      // (top, left) coordinate for the overlay at `pos`.\n      let originPoint = this._getOriginConnectionPoint(originRect, pos);\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, pos);\n\n      // If the overlay in the calculated position fits on-screen, put it there and we're done.\n      if (overlayPoint.fitsInViewport) {\n        this._setElementPosition(element, overlayRect, overlayPoint, pos);\n\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastConnectedPosition = pos;\n\n        // Notify that the position has been changed along with its change properties.\n        const scrollableViewProperties = this.getScrollableViewProperties(element);\n        const positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);\n        this._onPositionChange.next(positionChange);\n\n        return Promise.resolve(null);\n      } else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {\n        fallbackPoint = overlayPoint;\n        fallbackPosition = pos;\n      }\n    }\n\n    // If none of the preferred positions were in the viewport, take the one\n    // with the largest visible area.\n    this._setElementPosition(element, overlayRect, fallbackPoint, fallbackPosition);\n\n    return Promise.resolve(null);\n  }\n\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  recalculateLastPosition(): void {\n    const originRect = this._origin.getBoundingClientRect();\n    const overlayRect = this._pane.getBoundingClientRect();\n    const viewportRect = this._viewportRuler.getViewportRect();\n    const lastPosition = this._lastConnectedPosition || this._preferredPositions[0];\n\n    let originPoint = this._getOriginConnectionPoint(originRect, lastPosition);\n    let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, lastPosition);\n    this._setElementPosition(this._pane, overlayRect, overlayPoint, lastPosition);\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: Scrollable[]) {\n    this.scrollables = scrollables;\n  }\n\n  /**\n   * Adds a new preferred fallback position.\n   * @param originPos\n   * @param overlayPos\n   */\n  withFallbackPosition(\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): this {\n    this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));\n    return this;\n  }\n\n  /**\n   * Sets the layout direction so the overlay's position can be adjusted to match.\n   * @param dir New layout direction.\n   */\n  withDirection(dir: 'ltr' | 'rtl'): this {\n    this._dir = dir;\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the x-axis\n   * @param offset New offset in the X axis.\n   */\n  withOffsetX(offset: number): this {\n    this._offsetX = offset;\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the y-axis\n   * @param  offset New offset in the Y axis.\n   */\n  withOffsetY(offset: number): this {\n    this._offsetY = offset;\n    return this;\n  }\n\n  /**\n   * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n   * @param rect\n   */\n  private _getStartX(rect: ClientRect): number {\n    return this._isRtl ? rect.right : rect.left;\n  }\n\n  /**\n   * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n   * @param rect\n   */\n  private _getEndX(rect: ClientRect): number {\n    return this._isRtl ? rect.left : rect.right;\n  }\n\n\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   * @param originRect\n   * @param pos\n   */\n  private _getOriginConnectionPoint(originRect: ClientRect, pos: ConnectionPositionPair): Point {\n    const originStartX = this._getStartX(originRect);\n    const originEndX = this._getEndX(originRect);\n\n    let x: number;\n    if (pos.originX == 'center') {\n      x = originStartX + (originRect.width / 2);\n    } else {\n      x = pos.originX == 'start' ? originStartX : originEndX;\n    }\n\n    let y: number;\n    if (pos.originY == 'center') {\n      y = originRect.top + (originRect.height / 2);\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n\n    return {x, y};\n  }\n\n\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected, as well as how much of the element\n   * would be inside the viewport at that position.\n   */\n  private _getOverlayPoint(\n      originPoint: Point,\n      overlayRect: ClientRect,\n      viewportRect: ClientRect,\n      pos: ConnectionPositionPair): OverlayPoint {\n    // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n    // relative to the origin point.\n    let overlayStartX: number;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n    }\n\n    let overlayStartY: number;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n\n    // The (x, y) coordinates of the overlay.\n    let x = originPoint.x + overlayStartX + this._offsetX;\n    let y = originPoint.y + overlayStartY + this._offsetY;\n\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = (x + overlayRect.width) - viewportRect.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = (y + overlayRect.height) - viewportRect.height;\n\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);\n\n    // The area of the element that's within the viewport.\n    let visibleArea = visibleWidth * visibleHeight;\n    let fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;\n\n    return {x, y, fitsInViewport, visibleArea};\n  }\n\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  private getScrollableViewProperties(overlay: HTMLElement): ScrollableViewProperties {\n    const originBounds = this._getElementBounds(this._origin);\n    const overlayBounds = this._getElementBounds(overlay);\n    const scrollContainerBounds = this.scrollables.map((scrollable: Scrollable) => {\n      return this._getElementBounds(scrollable.getElementRef().nativeElement);\n    });\n\n    return {\n      isOriginClipped: this.isElementClipped(originBounds, scrollContainerBounds),\n      isOriginOutsideView: this.isElementOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: this.isElementClipped(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: this.isElementOutsideView(overlayBounds, scrollContainerBounds),\n    };\n  }\n\n  /** Whether the element is completely out of the view of any of the containers. */\n  private isElementOutsideView(\n      elementBounds: ElementBoundingPositions,\n      containersBounds: ElementBoundingPositions[]): boolean {\n    return containersBounds.some((containerBounds: ElementBoundingPositions) => {\n      const outsideAbove = elementBounds.bottom < containerBounds.top;\n      const outsideBelow = elementBounds.top > containerBounds.bottom;\n      const outsideLeft = elementBounds.right < containerBounds.left;\n      const outsideRight = elementBounds.left > containerBounds.right;\n\n      return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n  }\n\n  /** Whether the element is clipped by any of the containers. */\n  private isElementClipped(\n      elementBounds: ElementBoundingPositions,\n      containersBounds: ElementBoundingPositions[]): boolean {\n    return containersBounds.some((containerBounds: ElementBoundingPositions) => {\n      const clippedAbove = elementBounds.top < containerBounds.top;\n      const clippedBelow = elementBounds.bottom > containerBounds.bottom;\n      const clippedLeft = elementBounds.left < containerBounds.left;\n      const clippedRight = elementBounds.right > containerBounds.right;\n\n      return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n  }\n\n  /** Physically positions the overlay element to the given coordinate. */\n  private _setElementPosition(\n      element: HTMLElement,\n      overlayRect: ClientRect,\n      overlayPoint: Point,\n      pos: ConnectionPositionPair) {\n\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear above\n    // or below the origin and the direction in which the element will expand.\n    let verticalStyleProperty: any = pos.overlayY === 'bottom' ? 'bottom' : 'top';\n\n    // When using `bottom`, we adjust the y position such that it is the distance\n    // from the bottom of the viewport rather than the top.\n    let y = verticalStyleProperty === 'top' ?\n        overlayPoint.y :\n        document.documentElement.clientHeight - (overlayPoint.y + overlayRect.height);\n\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty: any;\n    if (this._dir === 'rtl') {\n      horizontalStyleProperty = pos.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = pos.overlayX === 'end' ? 'right' : 'left';\n    }\n\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    let x = horizontalStyleProperty === 'left' ?\n      overlayPoint.x :\n      document.documentElement.clientWidth - (overlayPoint.x + overlayRect.width);\n\n\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    ['top', 'bottom', 'left', 'right'].forEach((p: any) => element.style[p] = null);\n\n    element.style[verticalStyleProperty] = `${y}px`;\n    element.style[horizontalStyleProperty] = `${x}px`;\n  }\n\n  /** Returns the bounding positions of the provided element with respect to the viewport. */\n  private _getElementBounds(element: HTMLElement): ElementBoundingPositions {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n      top: boundingClientRect.top,\n      right: boundingClientRect.left + boundingClientRect.width,\n      bottom: boundingClientRect.top + boundingClientRect.height,\n      left: boundingClientRect.left\n    };\n  }\n\n  /**\n   * Subtracts the amount that an element is overflowing on an axis from it's length.\n   */\n  private _subtractOverflows(length: number, ...overflows: number[]): number {\n    return overflows.reduce((currentValue: number, currentOverflow: number) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n}\n\n/** A simple (x, y) coordinate. */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Expands the simple (x, y) coordinate by adding info about whether the\n * element would fit inside the viewport at that position, as well as\n * how much of the element would be visible.\n */\ninterface OverlayPoint extends Point {\n  visibleArea?: number;\n  fitsInViewport?: boolean;\n}\n","import {PositionStrategy} from './position-strategy';\n\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  private _cssPosition: string = 'static';\n  private _topOffset: string = '';\n  private _bottomOffset: string = '';\n  private _leftOffset: string = '';\n  private _rightOffset: string = '';\n  private _alignItems: string = '';\n  private _justifyContent: string = '';\n  private _width: string = '';\n  private _height: string = '';\n\n  /* A lazily-created wrapper for the overlay element that is used as a flex container.  */\n  private _wrapper: HTMLElement;\n\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value: string): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value: string): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value: string): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value: string): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   */\n  width(value: string): this {\n    this._width = value;\n\n    // When the width is 100%, we should reset the `left` and the offset,\n    // in order to ensure that the element is flush against the viewport edge.\n    if (value === '100%') {\n      this.left('0px');\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   */\n  height(value: string): this {\n    this._height = value;\n\n    // When the height is 100%, we should reset the `top` and the offset,\n    // in order to ensure that the element is flush against the viewport edge.\n    if (value === '100%') {\n      this.top('0px');\n    }\n\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   *\n   * @param element Element to which to apply the CSS.\n   * @returns Resolved when the styles have been applied.\n   */\n  apply(element: HTMLElement): Promise<void> {\n    if (!this._wrapper) {\n      this._wrapper = document.createElement('div');\n      this._wrapper.classList.add('cdk-global-overlay-wrapper');\n      element.parentNode.insertBefore(this._wrapper, element);\n      this._wrapper.appendChild(element);\n    }\n\n    let styles = element.style;\n    let parentStyles = (element.parentNode as HTMLElement).style;\n\n    styles.position = this._cssPosition;\n    styles.marginTop = this._topOffset;\n    styles.marginLeft = this._leftOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n    styles.width = this._width;\n    styles.height = this._height;\n\n    parentStyles.justifyContent = this._justifyContent;\n    parentStyles.alignItems = this._alignItems;\n\n    return Promise.resolve(null);\n  }\n\n  /**\n   * Removes the wrapper element from the DOM.\n   */\n  dispose(): void {\n    if (this._wrapper && this._wrapper.parentNode) {\n      this._wrapper.parentNode.removeChild(this._wrapper);\n      this._wrapper = null;\n    }\n  }\n}\n","import {ViewportRuler} from './viewport-ruler';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {ElementRef, Injectable} from '@angular/core';\nimport {GlobalPositionStrategy} from './global-position-strategy';\nimport {OverlayConnectionPosition, OriginConnectionPosition} from './connected-position';\n\n\n\n/** Builder for overlay position strategy. */\n@Injectable()\nexport class OverlayPositionBuilder {\n  constructor(private _viewportRuler: ViewportRuler) { }\n\n  /**\n   * Creates a global position strategy.\n   */\n  global(): GlobalPositionStrategy {\n    return new GlobalPositionStrategy();\n  }\n\n  /**\n   * Creates a relative position strategy.\n   * @param elementRef\n   * @param originPos\n   * @param overlayPos\n   */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\n    return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n  }\n}\n","import {Injectable, Optional, SkipSelf} from '@angular/core';\n\n\n/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\n@Injectable()\nexport class OverlayContainer {\n  protected _containerElement: HTMLElement;\n\n  private _themeClass: string;\n\n  /**\n   * Base theme to be applied to all overlay-based components.\n   */\n  get themeClass(): string { return this._themeClass; }\n  set themeClass(value: string) {\n    if (this._containerElement) {\n      this._containerElement.classList.remove(this._themeClass);\n\n      if (value) {\n        this._containerElement.classList.add(value);\n      }\n    }\n\n    this._themeClass = value;\n  }\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  protected _createContainer(): void {\n    let container = document.createElement('div');\n    container.classList.add('cdk-overlay-container');\n\n    if (this._themeClass) {\n      container.classList.add(this._themeClass);\n    }\n\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n\nexport function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer) {\n  return parentContainer || new OverlayContainer();\n}\n\nexport const OVERLAY_CONTAINER_PROVIDER = {\n  // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n  provide: OverlayContainer,\n  deps: [[new Optional(), new SkipSelf(), OverlayContainer]],\n  useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n","import {\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  Injector,\n  NgZone,\n  Provider,\n} from '@angular/core';\nimport {OverlayState} from './overlay-state';\nimport {DomPortalHost} from '../portal/dom-portal-host';\nimport {OverlayRef} from './overlay-ref';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {VIEWPORT_RULER_PROVIDER} from './position/viewport-ruler';\nimport {OverlayContainer, OVERLAY_CONTAINER_PROVIDER} from './overlay-container';\nimport {ScrollStrategy, ScrollStrategyOptions} from './scroll/index';\n\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n\n/** The default state for newly created overlays. */\nlet defaultState = new OverlayState();\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n@Injectable()\nexport class Overlay {\n  constructor(public scrollStrategies: ScrollStrategyOptions,\n              private _overlayContainer: OverlayContainer,\n              private _componentFactoryResolver: ComponentFactoryResolver,\n              private _positionBuilder: OverlayPositionBuilder,\n              private _appRef: ApplicationRef,\n              private _injector: Injector,\n              private _ngZone: NgZone) { }\n\n  /**\n   * Creates an overlay.\n   * @param state State to apply to the overlay.\n   * @returns Reference to the created overlay.\n   */\n  create(state: OverlayState = defaultState): OverlayRef {\n    return this._createOverlayRef(this._createPaneElement(), state);\n  }\n\n  /**\n   * Returns a position builder that can be used, via fluent API,\n   * to construct and configure a position strategy.\n   */\n  position(): OverlayPositionBuilder {\n    return this._positionBuilder;\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(): HTMLElement {\n    let pane = document.createElement('div');\n\n    pane.id = `cdk-overlay-${nextUniqueId++}`;\n    pane.classList.add('cdk-overlay-pane');\n    this._overlayContainer.getContainerElement().appendChild(pane);\n\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   * @param state\n   */\n  private _createOverlayRef(pane: HTMLElement, state: OverlayState): OverlayRef {\n    let scrollStrategy = state.scrollStrategy || this.scrollStrategies.noop();\n    let portalHost = this._createPortalHost(pane);\n    return new OverlayRef(portalHost, pane, state, scrollStrategy, this._ngZone);\n  }\n}\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS: Provider[] = [\n  Overlay,\n  OverlayPositionBuilder,\n  VIEWPORT_RULER_PROVIDER,\n  OVERLAY_CONTAINER_PROVIDER,\n];\n","import {\n    NgModule,\n    Directive,\n    EventEmitter,\n    TemplateRef,\n    ViewContainerRef,\n    Optional,\n    Input,\n    OnDestroy,\n    Output,\n    ElementRef,\n    Renderer2,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {\n    ConnectionPositionPair,\n    ConnectedOverlayPositionChange\n} from './position/connected-position';\nimport {PortalModule} from '../portal/portal-directives';\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nimport {Dir, LayoutDirection} from '../rtl/dir';\nimport {Scrollable} from './scroll/scrollable';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {ESCAPE} from '../keyboard/keycodes';\nimport {Subscription} from 'rxjs';\nimport {ScrollDispatchModule} from './scroll/index';\n\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nlet defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n  exportAs: 'cdkOverlayOrigin',\n})\nexport class OverlayOrigin {\n  constructor(public elementRef: ElementRef) { }\n}\n\n\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n  exportAs: 'cdkConnectedOverlay'\n})\nexport class ConnectedOverlayDirective implements OnDestroy, OnChanges {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n  private _hasBackdrop = false;\n  private _backdropSubscription: Subscription;\n  private _positionSubscription: Subscription;\n  private _offsetX: number = 0;\n  private _offsetY: number = 0;\n  private _position: ConnectedPositionStrategy;\n  private _escapeListener: Function;\n\n  /** Origin for the connected overlay. */\n  @Input() origin: OverlayOrigin;\n\n  /** Registered connected position pairs. */\n  @Input() positions: ConnectionPositionPair[];\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  @Input()\n  get offsetX(): number {\n    return this._offsetX;\n  }\n\n  set offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._position.withOffsetX(offsetX);\n    }\n  }\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  @Input()\n  get offsetY() {\n    return this._offsetY;\n  }\n\n  set offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._position.withOffsetY(offsetY);\n    }\n  }\n\n  /** The width of the overlay panel. */\n  @Input() width: number | string;\n\n  /** The height of the overlay panel. */\n  @Input() height: number | string;\n\n  /** The min width of the overlay panel. */\n  @Input() minWidth: number | string;\n\n  /** The min height of the overlay panel. */\n  @Input() minHeight: number | string;\n\n  /** The custom class to be set on the backdrop element. */\n  @Input() backdropClass: string;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  @Input() scrollStrategy: ScrollStrategy = this._overlay.scrollStrategies.reposition();\n\n  /** Whether the overlay is open. */\n  @Input() open: boolean = false;\n\n  /** Whether or not the overlay should attach a backdrop. */\n  @Input()\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n\n  set hasBackdrop(value: any) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n\n  /** Event emitted when the backdrop is clicked. */\n  @Output() backdropClick = new EventEmitter<void>();\n\n  /** Event emitted when the position has changed. */\n  @Output() positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  /** Event emitted when the overlay has been attached. */\n  @Output() attach = new EventEmitter<void>();\n\n  /** Event emitted when the overlay has been detached. */\n  @Output() detach = new EventEmitter<void>();\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      private _renderer: Renderer2,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\n      @Optional() private _dir: Dir) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n\n  /** The associated overlay reference. */\n  get overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n\n  /** The element's layout direction. */\n  get dir(): LayoutDirection {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['open']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n\n  /** Creates an overlay */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    this._overlayRef = this._overlay.create(this._buildConfig());\n  }\n\n  /** Builds the overlay config based on the directive's inputs */\n  private _buildConfig(): OverlayState {\n    let overlayConfig = new OverlayState();\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    overlayConfig.hasBackdrop = this.hasBackdrop;\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    this._position = this._createPositionStrategy() as ConnectedPositionStrategy;\n    overlayConfig.positionStrategy = this._position;\n    overlayConfig.scrollStrategy = this.scrollStrategy;\n\n    return overlayConfig;\n  }\n\n  /** Returns the position strategy of the overlay to be set on the overlay config */\n  private _createPositionStrategy(): ConnectedPositionStrategy {\n    const pos = this.positions[0];\n    const originPoint = {originX: pos.originX, originY: pos.originY};\n    const overlayPoint = {overlayX: pos.overlayX, overlayY: pos.overlayY};\n\n    const strategy = this._overlay.position()\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n      .withOffsetX(this.offsetX)\n      .withOffsetY(this.offsetY);\n\n    this._handlePositionChanges(strategy);\n\n    return strategy;\n  }\n\n  private _handlePositionChanges(strategy: ConnectedPositionStrategy): void {\n    for (let i = 1; i < this.positions.length; i++) {\n      strategy.withFallbackPosition(\n          {originX: this.positions[i].originX, originY: this.positions[i].originY},\n          {overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY}\n      );\n    }\n\n    this._positionSubscription =\n        strategy.onPositionChange.subscribe((pos: any) => this.positionChange.emit(pos));\n  }\n\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n  private _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n\n    this._position.withDirection(this.dir);\n    this._overlayRef.getState().direction = this.dir;\n    this._initEscapeListener();\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n      this.attach.emit();\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n        this.backdropClick.emit();\n      });\n    }\n  }\n\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n  private _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this.detach.emit();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n      this._backdropSubscription = null;\n    }\n\n    if (this._escapeListener) {\n      this._escapeListener();\n    }\n  }\n\n  /** Destroys the overlay created by this directive. */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n\n    if (this._escapeListener) {\n      this._escapeListener();\n    }\n  }\n\n  /** Sets the event listener that closes the overlay when pressing Escape. */\n  private _initEscapeListener() {\n    this._escapeListener = this._renderer.listen('document', 'keydown', (event: KeyboardEvent) => {\n      if (event.keyCode === ESCAPE) {\n        this._detachOverlay();\n      }\n    });\n  }\n}\n\n\n@NgModule({\n  imports: [PortalModule, ScrollDispatchModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin, ScrollDispatchModule],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin],\n  providers: [OVERLAY_PROVIDERS],\n})\nexport class OverlayModule {}\n","import {Injectable} from '@angular/core';\nimport {Platform} from '../platform/platform';\n\n/**\n * The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n * Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n * supported.\n */\n\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\n@Injectable()\nexport class InteractivityChecker {\n\n  constructor(private _platform: Platform) {}\n\n  /**\n   * Gets whether an element is disabled.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is disabled.\n   */\n  isDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n\n  /**\n   * Gets whether an element is visible for the purposes of interactivity.\n   *\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\n   *\n   * @returns Whether the element is visible.\n   */\n  isVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n\n  /**\n   * Gets whether an element can be reached via Tab key.\n   * Assumes that the element has already been checked with isFocusable.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is tabbable.\n   */\n  isTabbable(element: HTMLElement): boolean {\n    // Nothing is tabbable on the the server ð\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    let frameElement = getWindow(element).frameElement as HTMLElement;\n\n    if (frameElement) {\n\n      let frameType = frameElement && frameElement.nodeName.toLowerCase();\n\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n        return false;\n      }\n\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n        return false;\n      }\n\n    }\n\n    let nodeName = element.nodeName.toLowerCase();\n    let tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe') {\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\n      // investigate the content of the frames.\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      if (!element.hasAttribute('controls')) {\n        // By default an <audio> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK) {\n        // In Blink <audio controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'video') {\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n        // In Trident a <video> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\n        // In Chrome and Firefox <video controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\n      return false;\n    }\n\n    // In iOS the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    return element.tabIndex >= 0;\n  }\n\n  /**\n   * Gets whether an element can be focused by the user.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is focusable.\n   */\n  isFocusable(element: HTMLElement): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n  }\n\n}\n\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n\n/** Gets whether an element's  */\nfunction isNativeFormElement(element: Node) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n\n/** Gets whether an element is an <input type=\"hidden\">. */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n\n/** Gets whether an element is an input element. */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element: HTMLElement): number {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex'), 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node: HTMLElement): Window {\n  return node.ownerDocument.defaultView || window;\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {InteractivityChecker} from './interactivity-checker';\nimport {Platform} from '../platform/platform';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {first} from 'rxjs/operators';\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * NOTE: This class currently uses a very simple (naive) approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n * This will be replaced with a more intelligent solution before the library is considered stable.\n */\nexport class FocusTrap {\n  private _startAnchor: HTMLElement;\n  private _endAnchor: HTMLElement;\n\n  /** Whether the focus trap is active. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(val: boolean) {\n    this._enabled = val;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n    }\n  }\n  private _enabled: boolean = true;\n\n  constructor(\n    private _element: HTMLElement,\n    private _platform: Platform,\n    private _checker: InteractivityChecker,\n    private _ngZone: NgZone,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    if (this._startAnchor && this._startAnchor.parentNode) {\n      this._startAnchor.parentNode.removeChild(this._startAnchor);\n    }\n\n    if (this._endAnchor && this._endAnchor.parentNode) {\n      this._endAnchor.parentNode.removeChild(this._endAnchor);\n    }\n\n    this._startAnchor = this._endAnchor = null;\n  }\n\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   */\n  attachAnchors(): void {\n    // If we're not on the browser, there can be no focus to trap.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    if (!this._startAnchor) {\n      this._startAnchor = this._createAnchor();\n    }\n\n    if (!this._endAnchor) {\n      this._endAnchor = this._createAnchor();\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      this._startAnchor.addEventListener('focus', () => this.focusLastTabbableElement());\n      this._endAnchor.addEventListener('focus', () => this.focusFirstTabbableElement());\n\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then either focuses the first element that the\n   * user specified, or the first tabbable element..\n   */\n  focusInitialElementWhenReady() {\n    this._executeOnStable(() => this.focusInitialElement());\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   */\n  focusFirstTabbableElementWhenReady() {\n    this._executeOnStable(() => this.focusFirstTabbableElement());\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   */\n  focusLastTabbableElementWhenReady() {\n    this._executeOnStable(() => this.focusLastTabbableElement());\n  }\n\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\n\n    for (let i = 0; i < markers.length; i++) {\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}',` +\n                     ` use 'cdk-focus-region-${bound}' instead.`, markers[i]);\n      }\n    }\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n\n  /** Focuses the element that should be focused when the focus trap is initialized. */\n  focusInitialElement() {\n    let redirectToElement = this._element.querySelector('[cdk-focus-initial]') as HTMLElement;\n    if (redirectToElement) {\n      redirectToElement.focus();\n    } else {\n      this.focusFirstTabbableElement();\n    }\n  }\n\n  /** Focuses the first tabbable element within the focus trap region. */\n  focusFirstTabbableElement() {\n    let redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n  }\n\n  /** Focuses the last tabbable element within the focus trap region. */\n  focusLastTabbableElement() {\n    let redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n  }\n\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let children = root.children || root.childNodes;\n\n    for (let i = 0; i < children.length; i++) {\n      let tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let children = root.children || root.childNodes;\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      let tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n        this._getLastTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Creates an anchor element. */\n  private _createAnchor(): HTMLElement {\n    let anchor = document.createElement('div');\n    anchor.tabIndex = this._enabled ? 0 : -1;\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    return anchor;\n  }\n\n  /** Executes a function when the zone is stable. */\n  private _executeOnStable(fn: () => any): void {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.pipe(first()).subscribe(fn);\n    }\n  }\n}\n\n\n/** Factory that allows easy instantiation of focus traps. */\n@Injectable()\nexport class FocusTrapFactory {\n  constructor(\n      private _checker: InteractivityChecker,\n      private _platform: Platform,\n      private _ngZone: NgZone) { }\n\n  create(element: HTMLElement, deferAnchors = false): FocusTrap {\n    return new FocusTrap(element, this._platform, this._checker, this._ngZone, deferAnchors);\n  }\n}\n\n\n/**\n * Directive for trapping focus within a region.\n * @deprecated\n */\n@Directive({\n  selector: 'cdk-focus-trap',\n})\nexport class FocusTrapDeprecatedDirective implements OnDestroy, AfterContentInit {\n  focusTrap: FocusTrap;\n\n  /** Whether the focus trap is active. */\n  @Input()\n  get disabled(): boolean { return !this.focusTrap.enabled; }\n  set disabled(val: boolean) {\n    this.focusTrap.enabled = !coerceBooleanProperty(val);\n  }\n\n  constructor(private _elementRef: ElementRef, private _focusTrapFactory: FocusTrapFactory) {\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this.focusTrap.destroy();\n  }\n\n  ngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n  }\n}\n\n\n/** Directive for trapping focus within a region. */\n@Directive({\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n})\nexport class FocusTrapDirective implements OnDestroy, AfterContentInit {\n  focusTrap: FocusTrap;\n\n  /** Whether the focus trap is active. */\n  @Input('cdkTrapFocus')\n  get enabled(): boolean { return this.focusTrap.enabled; }\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n\n  constructor(private _elementRef: ElementRef, private _focusTrapFactory: FocusTrapFactory) {\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this.focusTrap.destroy();\n  }\n\n  ngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n  }\n}\n","import {\n  Injectable,\n  InjectionToken,\n  Optional,\n  Inject,\n  SkipSelf,\n} from '@angular/core';\nimport {Platform} from '../platform/platform';\n\n\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken<HTMLElement>('liveAnnouncerElement');\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\n\n@Injectable()\nexport class LiveAnnouncer {\n\n  private _liveElement: Element;\n\n  constructor(\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\n      platform: Platform) {\n    // Only do anything if we're on the browser platform.\n    if (platform.isBrowser) {\n      // We inject the live element as `any` because the constructor signature cannot reference\n      // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n      // causes TypeScript to preserve the constructor signature types.\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n  }\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader\n   * @param politeness The politeness of the announcer element\n   */\n  announce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\n    this._liveElement.textContent = '';\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    setTimeout(() => this._liveElement.textContent = message, 100);\n  }\n\n  /** Removes the aria-live element from the DOM. */\n  _removeLiveElement() {\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n    }\n  }\n\n  private _createLiveElement(): Element {\n    let liveEl = document.createElement('div');\n\n    liveEl.classList.add('cdk-visually-hidden');\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\n}\n\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\n    parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform) {\n  return parentDispatcher || new LiveAnnouncer(liveElement, platform);\n}\n\nexport const LIVE_ANNOUNCER_PROVIDER = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n    Platform,\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n","import {NgModule} from '@angular/core';\nimport {FocusTrapDirective, FocusTrapDeprecatedDirective, FocusTrapFactory} from './focus-trap';\nimport {LIVE_ANNOUNCER_PROVIDER} from './live-announcer';\nimport {InteractivityChecker} from './interactivity-checker';\nimport {CommonModule} from '@angular/common';\nimport {PlatformModule} from '../platform/index';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule],\n  declarations: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n  exports: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n  providers: [InteractivityChecker, FocusTrapFactory, LIVE_ANNOUNCER_PROVIDER]\n})\nexport class A11yModule {}\n","import {Injectable} from '@angular/core';\nimport {OverlayContainer} from './overlay-container';\n\n/**\n * The FullscreenOverlayContainer is the alternative to OverlayContainer\n * that supports correct displaying of overlay elements in Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n * It should be provided in the root component that way:\n * providers: [\n *   {provide: OverlayContainer, useClass: FullscreenOverlayContainer}\n * ],\n */\n@Injectable()\nexport class FullscreenOverlayContainer extends OverlayContainer {\n  protected _createContainer(): void {\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n    this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n  }\n\n  private _adjustParentForFullscreenChange(): void {\n    if (!this._containerElement) {\n      return;\n    }\n    let fullscreenElement = this.getFullscreenElement();\n    let parent = fullscreenElement || document.body;\n    parent.appendChild(this._containerElement);\n  }\n\n  private _addFullscreenChangeListener(fn: () => void) {\n    if (document.fullscreenEnabled) {\n      document.addEventListener('fullscreenchange', fn);\n    } else if (document.webkitFullscreenEnabled) {\n      document.addEventListener('webkitfullscreenchange', fn);\n    } else if ((document as any).mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenchange', fn);\n    } else if ((document as any).msFullscreenEnabled) {\n      document.addEventListener('MSFullscreenChange', fn);\n    }\n  }\n\n  /**\n   * When the page is put into fullscreen mode, a specific element is specified.\n   * Only that element and its children are visible when in fullscreen mode.\n  */\n  getFullscreenElement(): Element {\n    return document.fullscreenElement ||\n        document.webkitFullscreenElement ||\n        (document as any).mozFullScreenElement ||\n        (document as any).msFullscreenElement ||\n        null;\n  }\n}\n","import {Injectable, isDevMode} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {HammerStatic, HammerInstance, Recognizer, RecognizerStatic} from './gesture-annotations';\n\n/* Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  private _hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n  /* List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\n\n  constructor() {\n    super();\n\n    if (!this._hammer && isDevMode()) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material ' +\n        'components may not work correctly.'\n      );\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new this._hammer(element);\n\n    // Default Hammer Recognizers.\n    let pan = new this._hammer.Pan();\n    let swipe = new this._hammer.Swipe();\n    let press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    let slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    let longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","import {Subject} from 'rxjs';\n\n\n/**\n * Class to be used to power selecting one or more options from a list.\n * @docs-private\n */\nexport class SelectionModel<T> {\n  /** Currently-selected values. */\n  private _selection: Set<T> = new Set();\n\n  /** Keeps track of the deselected options that haven't been emitted by the change event. */\n  private _deselectedToEmit: T[] = [];\n\n  /** Keeps track of the selected option that haven't been emitted by the change event. */\n  private _selectedToEmit: T[] = [];\n\n  /** Cache for the array value of the selected items. */\n  private _selected: T[];\n\n  /** Selected value(s). */\n  get selected(): T[] {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n\n    return this._selected;\n  }\n\n  /** Event emitted when the value has changed. */\n  onChange: Subject<SelectionChange<T>> = this._emitChanges ? new Subject() : null;\n\n  constructor(\n    private _isMulti = false,\n    initiallySelectedValues?: T[],\n    private _emitChanges = true) {\n\n    if (initiallySelectedValues) {\n      if (_isMulti) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n\n  /**\n   * Selects a value or an array of values.\n   */\n  select(value: T): void {\n    this._markSelected(value);\n    this._emitChangeEvent();\n  }\n\n  /**\n   * Deselects a value or an array of values.\n   */\n  deselect(value: T): void {\n    this._unmarkSelected(value);\n    this._emitChangeEvent();\n  }\n\n  /**\n   * Toggles a value between selected and deselected.\n   */\n  toggle(value: T): void {\n    this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n\n  /**\n   * Clears all of the selected values.\n   */\n  clear(): void {\n    this._unmarkAll();\n    this._emitChangeEvent();\n  }\n\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value: T): boolean {\n    return this._selection.has(value);\n  }\n\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty(): boolean {\n    return this._selection.size === 0;\n  }\n\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue(): boolean {\n    return !this.isEmpty();\n  }\n\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate?: (a: T, b: T) => number): void {\n    if (this._isMulti && this.selected) {\n      this._selected.sort(predicate);\n    }\n  }\n\n  /** Emits a change event and clears the records of selected and deselected values. */\n  private _emitChangeEvent() {\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      let eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);\n\n      this.onChange.next(eventData);\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n\n    this._selected = null;\n  }\n\n  /** Selects a value. */\n  private _markSelected(value: T) {\n    if (!this.isSelected(value)) {\n      if (!this._isMulti) {\n        this._unmarkAll();\n      }\n\n      this._selection.add(value);\n\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n\n  /** Deselects a value. */\n  private _unmarkSelected(value: T) {\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n\n  /** Clears out the selected values. */\n  private _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n}\n\n/**\n * Describes an event emitted when the value of a MdSelectionModel has changed.\n * @docs-private\n */\nexport class SelectionChange<T> {\n  constructor(public added?: T[], public removed?: T[]) { }\n}\n","import {Injectable, Optional, SkipSelf} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\n@Injectable()\nexport class UniqueSelectionDispatcher {\n  private _listeners: UniqueSelectionDispatcherListener[] = [];\n\n  /**\n   * Notify other items that selection for the given name has been set.\n   * @param id ID of the item.\n   * @param name Name of the item.\n   */\n  notify(id: string, name: string) {\n    for (let listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n\n  /** Listen for future changes to item selection. */\n  listen(listener: UniqueSelectionDispatcherListener) {\n    this._listeners.push(listener);\n  }\n}\n\nexport function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: UniqueSelectionDispatcher) {\n  return parentDispatcher || new UniqueSelectionDispatcher();\n}\n\nexport const UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n  // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n  provide: UniqueSelectionDispatcher,\n  deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\n  useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {Platform} from '../platform/platform';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program';\n\n\ntype MonitoredElementInfo = {\n  unlisten: Function,\n  checkChildren: boolean,\n  renderer: Renderer2,\n  subject: Subject<FocusOrigin>\n};\n\n\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\n@Injectable()\nexport class FocusOriginMonitor {\n  /** The focus origin that the next focus event is a result of. */\n  private _origin: FocusOrigin = null;\n\n  /** The FocusOrigin of the last focus event tracked by the FocusOriginMonitor. */\n  private _lastFocusOrigin: FocusOrigin;\n\n  /** Whether the window has just been focused. */\n  private _windowFocused = false;\n\n  /** The target of the last touch event. */\n  private _lastTouchTarget: EventTarget;\n\n  /** The timeout id of the touch timeout, used to cancel timeout later. */\n  private _touchTimeout: any;\n\n  /** Weak map of elements being monitored to their info. */\n  private _elementInfo = new WeakMap<Element, MonitoredElementInfo>();\n\n  constructor(private _ngZone: NgZone, private _platform: Platform) {\n    this._ngZone.runOutsideAngular(() => this._registerDocumentEvents());\n  }\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param renderer The renderer to use to apply CSS classes to the element.\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(\n      element: HTMLElement,\n      renderer: Renderer2,\n      checkChildren: boolean): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return of();\n    }\n    // Check if we're already monitoring this element.\n    if (this._elementInfo.has(element)) {\n      let info = this._elementInfo.get(element);\n      info.checkChildren = checkChildren;\n      return info.subject.asObservable();\n    }\n\n    // Create monitored element info.\n    let info: MonitoredElementInfo = {\n      unlisten: null,\n      checkChildren: checkChildren,\n      renderer: renderer,\n      subject: new Subject<FocusOrigin>()\n    };\n    this._elementInfo.set(element, info);\n\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\n    let focusListener = (event: FocusEvent) => this._onFocus(event, element);\n    let blurListener = (event: FocusEvent) => this._onBlur(event, element);\n    this._ngZone.runOutsideAngular(() => {\n      element.addEventListener('focus', focusListener, true);\n      element.addEventListener('blur', blurListener, true);\n    });\n\n    // Create an unlisten function for later.\n    info.unlisten = () => {\n      element.removeEventListener('focus', focusListener, true);\n      element.removeEventListener('blur', blurListener, true);\n    };\n\n    return info.subject.asObservable();\n  }\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: HTMLElement): void {\n    let elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      elementInfo.unlisten();\n      elementInfo.subject.complete();\n\n      this._setClasses(element, null);\n      this._elementInfo.delete(element);\n    }\n  }\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element The element to focus.\n   * @param origin The focus origin.\n   */\n  focusVia(element: HTMLElement, origin: FocusOrigin): void {\n    this._setOriginForCurrentEventQueue(origin);\n    element.focus();\n  }\n\n  /** Register necessary event listeners on the document and window. */\n  private _registerDocumentEvents() {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    // Note: we listen to events in the capture phase so we can detect them even if the user stops\n    // propagation.\n\n    // On keydown record the origin and clear any touch event that may be in progress.\n    document.addEventListener('keydown', () => {\n      this._lastTouchTarget = null;\n      this._setOriginForCurrentEventQueue('keyboard');\n    }, true);\n\n    // On mousedown record the origin only if there is not touch target, since a mousedown can\n    // happen as a result of a touch event.\n    document.addEventListener('mousedown', () => {\n      if (!this._lastTouchTarget) {\n        this._setOriginForCurrentEventQueue('mouse');\n      }\n    }, true);\n\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n    // see if a focus happens.\n    document.addEventListener('touchstart', (event: Event) => {\n      if (this._touchTimeout != null) {\n        clearTimeout(this._touchTimeout);\n      }\n      this._lastTouchTarget = event.target;\n      this._touchTimeout = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n    }, true);\n\n    // Make a note of when the window regains focus, so we can restore the origin info for the\n    // focused element.\n    window.addEventListener('focus', () => {\n      this._windowFocused = true;\n      setTimeout(() => this._windowFocused = false, 0);\n    });\n  }\n\n  /**\n   * Sets the focus classes on the element based on the given focus origin.\n   * @param element The element to update the classes on.\n   * @param origin The focus origin.\n   */\n  private _setClasses(element: HTMLElement, origin: FocusOrigin): void {\n    let renderer = this._elementInfo.get(element).renderer;\n    let toggleClass = (className: string, shouldSet: boolean) => {\n      shouldSet ? renderer.addClass(element, className) : renderer.removeClass(element, className);\n    };\n\n    toggleClass('cdk-focused', !!origin);\n    toggleClass('cdk-touch-focused', origin === 'touch');\n    toggleClass('cdk-keyboard-focused', origin === 'keyboard');\n    toggleClass('cdk-mouse-focused', origin === 'mouse');\n    toggleClass('cdk-program-focused', origin === 'program');\n  }\n\n  /**\n   * Sets the origin and schedules an async function to clear it at the end of the event queue.\n   * @param origin The origin to set.\n   */\n  private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._origin = origin;\n    setTimeout(() => this._origin = null, 0);\n  }\n\n  /**\n   * Checks whether the given focus event was caused by a touchstart event.\n   * @param event The focus event to check.\n   * @returns Whether the event was caused by a touch.\n   */\n  private _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, renderer,  'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    let focusTarget = event.target;\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n\n  /**\n   * Handles focus events on a registered element.\n   * @param event The focus event.\n   * @param element The monitored element.\n   */\n  private _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    if (!this._elementInfo.get(element).checkChildren && element !== event.target) {\n      return;\n    }\n\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    if (!this._origin) {\n      if (this._windowFocused && this._lastFocusOrigin) {\n        this._origin = this._lastFocusOrigin;\n      } else if (this._wasCausedByTouch(event)) {\n        this._origin = 'touch';\n      } else {\n        this._origin = 'program';\n      }\n    }\n\n    this._setClasses(element, this._origin);\n    this._elementInfo.get(element).subject.next(this._origin);\n    this._lastFocusOrigin = this._origin;\n    this._origin = null;\n  }\n\n  /**\n   * Handles blur events on a registered element.\n   * @param event The blur event.\n   * @param element The monitored element.\n   */\n  private _onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    if (this._elementInfo.get(element).checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget)) {\n      return;\n    }\n\n    this._setClasses(element, null);\n    this._elementInfo.get(element).subject.next(null);\n  }\n}\n\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\n@Directive({\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n})\nexport class CdkMonitorFocus implements OnDestroy {\n  @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\n\n  constructor(private _elementRef: ElementRef, private _focusOriginMonitor: FocusOriginMonitor,\n              renderer: Renderer2) {\n    this._focusOriginMonitor.monitor(\n        this._elementRef.nativeElement, renderer,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n\n  ngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n}\n\n\nexport function FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(\n    parentDispatcher: FocusOriginMonitor, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new FocusOriginMonitor(ngZone, platform);\n}\n\n\nexport const FOCUS_ORIGIN_MONITOR_PROVIDER = {\n  // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.\n  provide: FocusOriginMonitor,\n  deps: [[new Optional(), new SkipSelf(), FocusOriginMonitor], NgZone, Platform],\n  useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\n};\n","import {NgModule} from '@angular/core';\nimport {CdkMonitorFocus, FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nimport {PlatformModule} from '../platform/index';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  declarations: [CdkMonitorFocus],\n  exports: [CdkMonitorFocus],\n  providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],\n})\nexport class StyleModule {}\n\n\nexport * from './focus-origin-monitor';\nexport * from './apply-transform';\n","/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date, or null if date could not be parsed.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string.\n   * @param date The value to parse.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The parsed date, or null if date could not be parsed.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible date string (https://tools.ietf.org/html/rfc3339)  for the given\n   * date.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract getISODateString(date: D): string;\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    return first && second ? !this.compareDate(first, second) : first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","import {DateAdapter} from './date-adapter';\n\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {month: style});\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\n      return range(7, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11 || date < 1) {\n      return null;\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to\n    // overflow.\n    if (result.getMonth() != month) {\n      return null;\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    let timestamp = typeof value == 'number' ? value : Date.parse(value);\n    return isNaN(timestamp) ? null : new Date(timestamp);\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  getISODateString(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    let result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param s The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(s: string) {\n    return s.replace(/[\\u200e\\u200f]/g, '');\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\n\nexport type MdDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MD_DATE_FORMATS = new InjectionToken<MdDateFormats>('md-date-formats');\n","import {MdDateFormats} from './date-formats';\n\n\nexport const MD_NATIVE_DATE_FORMATS: MdDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","import {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MD_DATE_FORMATS} from './date-formats';\nimport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\n\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  providers: [{provide: DateAdapter, useClass: NativeDateAdapter}],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MD_DATE_FORMATS, useValue: MD_NATIVE_DATE_FORMATS}],\n})\nexport class MdNativeDateModule {}\n","import { InjectionToken } from '@angular/core';\n\n/** InjectionToken that can be used to specify the global placeholder options. */\nexport const MD_PLACEHOLDER_GLOBAL_OPTIONS =\n  new InjectionToken<PlaceholderOptions>('md-placeholder-global-options');\n\n/** Type for the available floatPlaceholder values. */\nexport type FloatPlaceholderType = 'always' | 'never' | 'auto';\n\nexport interface PlaceholderOptions {\n  float?: FloatPlaceholderType;\n}\n","import {NgModule} from '@angular/core';\nimport {MdLineModule} from './line/line';\nimport {RtlModule} from './rtl/dir';\nimport {ObserveContentModule} from './observe-content/observe-content';\nimport {MdOptionModule} from './option/index';\nimport {PortalModule} from './portal/portal-directives';\nimport {OverlayModule} from './overlay/overlay-directives';\nimport {A11yModule} from './a11y/index';\nimport {MdSelectionModule} from './selection/index';\nimport {MdRippleModule} from './ripple/index';\n\n\n// RTL\nexport {Dir, LayoutDirection, RtlModule} from './rtl/dir';\n\n// Mutation Observer\nexport {ObserveContentModule, ObserveContent} from './observe-content/observe-content';\n\nexport * from './option/index';\n\n// Portals\nexport {\n  Portal,\n  PortalHost,\n  BasePortalHost,\n  ComponentPortal,\n  TemplatePortal\n} from './portal/portal';\nexport {\n  PortalHostDirective,\n  TemplatePortalDirective,\n  PortalModule,\n} from './portal/portal-directives';\nexport {DomPortalHost} from './portal/dom-portal-host';\n\n// Platform\nexport * from './platform/index';\n\n// Overlay\nexport * from './overlay/index';\n\n// Gestures\nexport {GestureConfig} from './gestures/gesture-config';\n// Explicitly specify the interfaces which should be re-exported, because if everything\n// is re-exported, module bundlers may run into issues with treeshaking.\nexport {HammerInput, HammerManager} from './gestures/gesture-annotations';\n\n// Ripple\nexport * from './ripple/index';\n\n// a11y\nexport {\n  AriaLivePoliteness,\n  LiveAnnouncer,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_PROVIDER,\n} from './a11y/live-announcer';\n\n// Selection\nexport * from './selection/selection';\n\nexport * from './a11y/focus-trap';\nexport {InteractivityChecker} from './a11y/interactivity-checker';\nexport {isFakeMousedownFromScreenReader} from './a11y/fake-mousedown';\n\nexport {A11yModule} from './a11y/index';\n\nexport {\n  UniqueSelectionDispatcher,\n  UniqueSelectionDispatcherListener,\n  UNIQUE_SELECTION_DISPATCHER_PROVIDER,\n} from './coordination/unique-selection-dispatcher';\n\nexport {MdLineModule, MdLine, MdLineSetter} from './line/line';\n\n// Style\nexport * from './style/index';\n\n// Misc\nexport {ComponentType} from './overlay/generic-component-type';\n\n// Keybindings\nexport * from './keyboard/keycodes';\n\nexport * from './compatibility/compatibility';\n\n// Animation\nexport * from './animation/animation';\n\n// Selection\nexport * from './selection/index';\n\n// Coercion\nexport {coerceBooleanProperty} from './coercion/boolean-property';\nexport {coerceNumberProperty} from './coercion/number-property';\n\n// Compatibility\nexport {CompatibilityModule, NoConflictStyleCompatibilityMode} from './compatibility/compatibility';\n\n// Common material module\nexport {MdCommonModule, MATERIAL_SANITY_CHECKS} from './common-behaviors/common-module';\n\n// Datetime\nexport * from './datetime/index';\n\n// Placeholder\nexport {\n  FloatPlaceholderType,\n  PlaceholderOptions,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS\n} from './placeholder/placeholder-options';\n\n@NgModule({\n  imports: [\n    MdLineModule,\n    RtlModule,\n    MdRippleModule,\n    ObserveContentModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdSelectionModule,\n  ],\n  exports: [\n    MdLineModule,\n    RtlModule,\n    MdRippleModule,\n    ObserveContentModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdSelectionModule,\n  ],\n})\nexport class MdCoreModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Md2AccordionTab } from './accordiontab';\nimport { coerceBooleanProperty } from '../core/core';\n\n@Component({\n  selector: 'md2-accordion',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['accordion.scss'],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'md2Accordion'\n})\nexport class Md2Accordion {\n\n  private _multiple: boolean;\n\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value) { this._multiple = coerceBooleanProperty(value); }\n\n  @Output() close: EventEmitter<any> = new EventEmitter<any>();\n  @Output() open: EventEmitter<any> = new EventEmitter<any>();\n\n  tabs: Md2AccordionTab[] = [];\n\n  /**\n   * Add or append tab in accordion\n   * @param tab object of Md2AccordionTab\n   */\n  addTab(tab: Md2AccordionTab) {\n    this.tabs.push(tab);\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Md2Accordion } from './accordion';\nimport { coerceBooleanProperty } from '../core';\n\n@Directive({ selector: 'md2-accordion-header' })\nexport class Md2AccordionHeader { }\n\n@Component({\n  \n  selector: 'md2-accordion-tab',\n  template: `\n    <div class=\"md2-accordion-header\" (click)=\"_handleClick($event)\">\n      <span>{{header}}</span>\n      <ng-content select=\"md2-accordion-header\"></ng-content>\n      <span class=\"md2-accordion-header-icon\"></span>\n    </div>\n    <div class=\"md2-accordion-tab-body\" [@slide]=\"slide\">\n      <div class=\"md2-accordion-tab-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  styleUrls: ['accordion.scss'],\n  animations: [\n    trigger('slide', [\n      state('up', style({ height: 0 })),\n      state('down', style({ height: '*' })),\n      transition('down => up', [\n        style({ height: '*' }),\n        animate(300, style({ height: 0 }))\n      ]),\n      transition('up => down', [\n        style({ height: 0 }),\n        animate(300, style({\n          height: '*'\n        }))\n      ])\n    ])\n  ],\n  host: {\n    'role': 'accordion-tab',\n    '[class.md2-accordion-tab-active]': 'active',\n    '[class.md2-accordion-tab-disabled]': 'disabled'\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'md2AccordionTab'\n})\nexport class Md2AccordionTab {\n\n  private _disabled: boolean = false;\n  private _active: boolean = false;\n\n  @Input() header: string;\n\n  @Input()\n  get active(): boolean { return this._active; }\n  set active(value) {\n    this._active = coerceBooleanProperty(value);\n    if (this._active && !this._accordion.multiple) {\n      for (let i = 0; i < this._accordion.tabs.length; i++) {\n        if (this._accordion.tabs[i] !== this) { this._accordion.tabs[i].active = false; }\n      }\n    }\n  }\n\n  get slide(): string {\n    return this.active ? 'down' : 'up';\n  }\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n\n  constructor(private _accordion: Md2Accordion) {\n    this._accordion.addTab(this);\n  }\n\n  /**\n   * Toggle the accordion\n   * @param event\n   * @return if it is disabled\n   */\n  _handleClick(event: Event) {\n    if (this.disabled) { return; }\n\n    let index = this.findTabIndex();\n\n    if (this.active) {\n      this.active = !this.active;\n      this._accordion.close.emit({ originalEvent: event, index: index });\n    } else if (!this._accordion.multiple) {\n      for (let i = 0; i < this._accordion.tabs.length; i++) {\n        this._accordion.tabs[i].active = false;\n      }\n      this._active = true;\n      this._accordion.open.emit({ originalEvent: event, index: index });\n    } else {\n      this._active = true;\n      this._accordion.open.emit({ originalEvent: event, index: index });\n    }\n\n    event.preventDefault();\n  }\n\n  /**\n   * Find index of specific tab of accordion\n   * @return index number of this tab\n   */\n  findTabIndex() {\n    let index = -1;\n    for (let i = 0; i < this._accordion.tabs.length; i++) {\n      if (this._accordion.tabs[i] === this) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Md2Accordion } from './accordion';\nimport { Md2AccordionTab, Md2AccordionHeader } from './accordiontab';\n\nexport * from './accordion';\nexport * from './accordiontab';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Md2Accordion, Md2AccordionTab, Md2AccordionHeader],\n  declarations: [Md2Accordion, Md2AccordionTab, Md2AccordionHeader],\n})\nexport class Md2AccordionModule { }\n","import {\n  Pipe,\n  PipeTransform\n} from '@angular/core';\n\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe implements PipeTransform {\n  /**\n   * Transform function\n   * @param value string\n   * @param query string filter value\n   * @return filtered string with markup\n   */\n  transform(value: string, query: string) {\n    if (query.length < 1) { return value; }\n    return query ? value.replace(new RegExp(this._escapeRegexp(query), 'gi'),\n      '<span class=\"highlight\">$&</span>') : value;\n  }\n\n  /**\n   * filter pipe\n   * @param queryToEscape\n   * @return queryToEscape with replace string\n   */\n  private _escapeRegexp(queryToEscape: string) {\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport {\n  coerceBooleanProperty,\n  UP_ARROW,\n  DOWN_ARROW,\n  ENTER,\n  ESCAPE,\n  TAB\n} from '../core/core';\n\nexport class Item {\n  text: string;\n  value: string;\n\n  constructor(source: any, textKey: string, valueKey: string) {\n    if (typeof source === 'string') {\n      this.text = this.value = source;\n    }\n    if (typeof source === 'object') {\n      this.text = source[textKey];\n      this.value = valueKey ? source[valueKey] : source;\n    }\n  }\n}\n\nlet nextId = 0;\n\nexport const MD2_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Md2Autocomplete),\n  multi: true\n};\n\n/** Change event object emitted by Md2Autocomplete. */\nexport class Md2AutocompleteChange {\n  source: Md2Autocomplete;\n  value: any;\n}\n\n@Component({\n  \n  selector: 'md2-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.scss'],\n  providers: [MD2_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR],\n  host: {\n    'role': 'autocomplete',\n    '[id]': 'id',\n    '[attr.aria-label]': 'placeholder',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.md2-autocomplete-disabled]': 'disabled',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'md2Autocomplete'\n})\n\nexport class Md2Autocomplete implements AfterContentInit, ControlValueAccessor {\n\n  constructor(private _element: ElementRef) { }\n\n  ngAfterContentInit() { this._isInitialized = true; }\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  @Output() textChange = new EventEmitter();\n\n  private _value: any = '';\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _disabled: boolean = false;\n  private _isInitialized: boolean = false;\n\n  _onChange: (value: any) => void = () => { };\n  _onTouched = () => { };\n\n  private _items: Array<any> = [];\n  _list: Array<Item> = [];\n\n  private selectedItem: Item = null;\n  private noBlur: boolean = false;\n  _focusedOption: number = 0;\n  _inputValue: string = '';\n  _inputFocused: boolean = false;\n\n  @Input() id: string = 'md2-autocomplete-' + (++nextId);\n  @Input() tabindex: number = 0;\n  @Input() placeholder: string = '';\n  @Input('item-text') textKey: string = 'text';\n  @Input('item-value') valueKey: string = null;\n  @Input('min-length') minLength: number = 1;\n\n  @Input()\n  get readonly(): boolean { return this._readonly; }\n  set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n\n  @Input()\n  set items(value: Array<any>) { this._items = value; }\n\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this._inputValue = '';\n      if (value) {\n        let selItm = this._items.find((i: any) => this.equals(this.valueKey ?\n          i[this.valueKey] : i, value));\n        this.selectedItem = new Item(selItm, this.textKey, this.valueKey);\n        if (this.selectedItem) { this._inputValue = this.selectedItem.text; }\n      }\n      if (!this._inputValue) { this._inputValue = ''; }\n      if (this._isInitialized) {\n        this._emitChangeEvent();\n      }\n    }\n  }\n\n  /**\n   * Compare two vars or objects\n   * @param o1 compare first object\n   * @param o2 compare second object\n   * @return boolean comparation result\n   */\n  private equals(o1: any, o2: any) {\n    if (o1 === o2) { return true; }\n    if (o1 === null || o2 === null) { return false; }\n    if (o1 !== o1 && o2 !== o2) { return true; }\n    let t1 = typeof o1, t2 = typeof o2, key: any, keySet: any;\n    if (t1 === t2 && t1 === 'object') {\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (!this.equals(o1[key], o2[key])) { return false; }\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) && key.charAt(0) !== '$' && o2[key]) { return false; }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  get isMenuVisible(): boolean {\n    return ((this._inputFocused || this.noBlur) && this._list && this._list.length &&\n      !this.selectedItem) && !this.readonly ? true : false;\n  }\n\n  /**\n   * update scroll of suggestion menu\n   */\n  private updateScroll() {\n    if (this._focusedOption < 0) { return; }\n    let menuContainer = this._element.nativeElement.querySelector('.md2-autocomplete-menu');\n    if (!menuContainer) { return; }\n\n    let choices = menuContainer.querySelectorAll('.md2-option');\n    if (choices.length < 1) { return; }\n\n    let highlighted: any = choices[this._focusedOption];\n    if (!highlighted) { return; }\n\n    let top: number = highlighted.offsetTop + highlighted.clientHeight - menuContainer.scrollTop;\n    let height: number = menuContainer.offsetHeight;\n\n    if (top > height) {\n      menuContainer.scrollTop += top - height;\n    } else if (top < highlighted.clientHeight) {\n      menuContainer.scrollTop -= highlighted.clientHeight - top;\n    }\n  }\n\n  /**\n   * input event listner\n   * @param event\n   */\n  _handleKeyup(event: KeyboardEvent) {\n    this.textChange.emit(this._inputValue);\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    if (this.disabled) { return; }\n    switch (event.keyCode) {\n      case TAB: this._handleMouseLeave(); break;\n      case ESCAPE:\n        event.stopPropagation();\n        event.preventDefault();\n        if (this._inputValue) {\n          this._onClear();\n        }\n        break;\n\n      case ENTER:\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.isMenuVisible) {\n          this._selectOption(event, this._focusedOption);\n        }\n        break;\n\n      case DOWN_ARROW:\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.isMenuVisible) {\n          this._focusedOption = (this._focusedOption === this._list.length - 1) ? 0 :\n            Math.min(this._focusedOption + 1, this._list.length - 1);\n          this.updateScroll();\n        }\n        break;\n      case UP_ARROW:\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.isMenuVisible) {\n          this._focusedOption = (this._focusedOption === 0) ? this._list.length - 1 :\n            Math.max(0, this._focusedOption - 1);\n          this.updateScroll();\n        }\n        break;\n      default:\n        setTimeout(() => {\n          this.updateItems();\n        }, 10);\n    }\n  }\n\n  /**\n   * select option\n   * @param event\n   * @param index of selected item\n   */\n  _selectOption(event: Event, index: number) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.selectedItem = this._list[index];\n    this._inputValue = this._list[index].text;\n    this.updateValue();\n    this._handleMouseLeave();\n  }\n\n  /**\n   * clear selected suggestion\n   */\n  _onClear() {\n    if (this.disabled) { return; }\n    this._inputValue = '';\n    this.selectedItem = null;\n    this.updateItems();\n    this._value = this.selectedItem ? this.selectedItem.value : this.selectedItem;\n    this.updateValue();\n  }\n\n  /**\n   * update value\n   */\n  private updateValue() {\n    this._value = this.selectedItem ? this.selectedItem.value : this.selectedItem;\n    this._emitChangeEvent();\n    this.onFocus();\n  }\n\n  /**\n   * component focus listener\n   */\n  private onFocus() {\n    if (this.disabled) { return; }\n    this._element.nativeElement.querySelector('input').focus();\n  }\n\n  /**\n   * input focus listener\n   */\n  _handleFocus() {\n    this._inputFocused = true;\n    this.updateItems();\n    this._focusedOption = 0;\n  }\n\n  /**\n   * input blur listener\n   */\n  _handleBlur() {\n    this._inputFocused = false;\n    this._onTouched();\n  }\n\n  /**\n   * suggestion menu mouse enter listener\n   */\n  _handleMouseEnter() { this.noBlur = true; }\n\n  /**\n   * suggestion menu mouse leave listener\n   */\n  _handleMouseLeave() { this.noBlur = false; }\n\n  /**\n   * Update suggestion to filter the query\n   * @param query\n   */\n  private updateItems() {\n    if (this._inputValue.length < this.minLength) {\n      this._list = [];\n    } else {\n      this._list = this._items.map((i: any) => new Item(i, this.textKey,\n        this.valueKey)).filter(i => new RegExp(this._inputValue.trim(), 'ig').test(i.text));\n      if (this._list.length && this._list[0].text !== this._inputValue) {\n        this.selectedItem = null;\n      }\n    }\n  }\n\n  _emitChangeEvent(): void {\n    let event = new Md2AutocompleteChange();\n    event.source = this;\n    event.value = this._value;\n    this._onChange(event.value);\n    this.change.emit(event);\n  }\n\n  writeValue(value: any): void {\n    if (value !== this._value) {\n      this._value = value;\n      this._inputValue = '';\n      if (value) {\n        let selItm = this._items.find((i: any) => this.equals(this.valueKey ?\n          i[this.valueKey] : i, value));\n        this.selectedItem = new Item(selItm, this.textKey, this.valueKey);\n        if (this.selectedItem) { this._inputValue = this.selectedItem.text; }\n      }\n      if (!this._inputValue) { this._inputValue = ''; }\n    }\n  }\n\n  registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HighlightPipe } from './autocomplete-pipe';\nimport { Md2Autocomplete } from './autocomplete';\n\nexport * from './autocomplete';\nexport * from './autocomplete-pipe';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  exports: [Md2Autocomplete, HighlightPipe],\n  declarations: [Md2Autocomplete, HighlightPipe],\n})\nexport class Md2AutocompleteModule { }\n","import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  ViewChild,\n  NgModule,\n  ElementRef,\n  EventEmitter,\n  AfterContentInit,\n  HostListener,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  NgForm,\n  FormsModule\n} from '@angular/forms';\n\nimport { CommonModule } from '@angular/common';\nimport { Md2AutocompleteModule } from '../autocomplete/index';\nimport {\n  ENTER,\n  SPACE,\n  BACKSPACE,\n  DELETE,\n  COMMA,\n  LEFT_ARROW,\n  RIGHT_ARROW\n} from '../core/keyboard/keycodes';\n\nexport class Chip {\n  public text: string;\n  public value: string;\n\n  constructor(source: any, textKey: string, valueKey: string) {\n    if (typeof source === 'string') {\n      this.text = this.value = source;\n    }\n    if (typeof source === 'object') {\n      this.text = source[textKey];\n      this.value = valueKey ? source[valueKey] : source;\n    }\n  }\n}\n\nlet nextId = 0;\nexport const MD2_CHIPS_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Md2Chips),\n  multi: true\n};\n\n/** Change event object emitted by Md2Chips. */\nexport class Md2ChipsChange {\n  source: Md2Chips;\n  value: any;\n}\n\n@Component({\n  selector: 'md2-chips',\n  templateUrl: 'chips.html',\n  styleUrls: ['chips.scss'],\n  providers: [MD2_CHIPS_CONTROL_VALUE_ACCESSOR],\n\n  host: {\n    'role': 'chips',\n    '[id]': 'id',\n    '[tabindex]': 'disabled ? -1 : tabindex',\n    '[class.chip-input-focus]': 'inputFocused || selectedChip >= 0',\n  },\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class Md2Chips implements ControlValueAccessor, AfterContentInit {\n  @Input() tabindex: number = 0;\n  @Input() addOnComma: boolean = true;\n  @Input() addOnEnter: boolean = true;\n  @Input() addOnPaste: boolean = true;\n  @Input() addOnSpace: boolean = false;\n  @Input() allowedPattern: RegExp = /.+/;\n  @Input() ngModel: string[];\n  @Input() pasteSplitPattern: string = ',';\n  @Input() placeholder: string = '';\n  @Input() autocompleteDataList: string[];\n  @Input() isAutoComplete: boolean = false;\n  @Input() isRemovable: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() minChips: number = 0;\n  @Input() maxChips: number = 10000;\n  @Input() type: string = 'text';\n  @Input() id: string = 'md2-chips-' + (++nextId);\n  @Input('autocomplete-item-text') autocompleteItemText: string = 'text';\n  @Input('autocomplete-item-value') autocompleteItemValue: string = 'value';\n  @Input('item-text') textKey: string = 'text';\n  @Input('item-value') valueKey: string = null;\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  @ViewChild('chipInputForm') chipInputForm: NgForm;\n\n  _onChange: (value: any) => void = () => { };\n  _onTouched = () => { };\n\n  chipItemList: Array<Chip> = [];\n  inputValue: string = '';\n  selectedChip: number = -1;\n  inputFocused: boolean = false;\n  autoCompleteFocued: boolean = false;\n\n  private _value: any = '';\n  private splitRegExp: RegExp;\n  templateHtmlString: any;\n  item: any;\n  private isEmptyAutoComplete: boolean = true;\n\n  constructor(private elementRef: ElementRef) { }\n\n  get element() {\n    const elements: any = { root: this.elementRef.nativeElement, mainDiv: null, template: null };\n    elements.mainDiv = elements.root.querySelector('.md2-chips-container');\n    elements.template = elements.mainDiv.querySelector('.md2-template');\n    return elements;\n  }\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) { this.setValue(value); }\n\n  /**\n   * set value\n   * @param value\n   */\n  set setValue(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this.chipItemList = [];\n      if (value) {\n        if (value && value.length && Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            this.chipItemList.push(new Chip(value[i], this.textKey, this.valueKey));\n          }\n        }\n      }\n    }\n    this._emitChangeEvent();\n  }\n\n  getFocusAutocomplete() {\n    this._onTouched();\n  }\n\n  changeAutocomplete(value: any) {\n    if (value) {\n      this.addNewChip(value.value);\n      this.item = null;\n    }\n  }\n\n  ngAfterContentInit() {\n    let elements = this.element;\n    this.splitRegExp = new RegExp(this.pasteSplitPattern);\n    if (elements.template) {\n      this.templateHtmlString = elements.template.innerHTML;\n    }\n  }\n\n  // check autocomplete input is empty or not\n  valueupdate(evt: Event) {\n    this.isEmptyAutoComplete = evt ? false : true;\n  }\n\n  /**\n   * input key listener\n   * @param event\n   */\n  inputChanged(event: KeyboardEvent): void {\n    let key = event.keyCode;\n    switch (key) {\n      // back space\n      case BACKSPACE:\n        this.backspaceEvent();\n        break;\n      // delete\n      case DELETE:\n        this.backspaceEvent();\n        break;\n      // left arrow\n      case LEFT_ARROW:\n        if (this.isAutoComplete && this.isEmptyAutoComplete) {\n          this.leftArrowKeyEvents();\n        } else if (!this.isAutoComplete && !this.inputValue) {\n          this.leftArrowKeyEvents();\n        }\n        break;\n      // right arrow\n      case RIGHT_ARROW:\n        if (this.isAutoComplete && this.isEmptyAutoComplete) {\n          this.rightArrowKeyEvents();\n        } else if (!this.isAutoComplete && !this.inputValue) {\n          this.rightArrowKeyEvents();\n        }\n        break;\n      // enter\n      case ENTER:\n        if (this.addOnEnter) {\n          this.addNewChip(this.inputValue);\n          event.preventDefault();\n        }\n        break;\n      // comma\n      case COMMA:\n        if (this.addOnComma) {\n          this.addNewChip(this.inputValue);\n          event.preventDefault();\n        }\n        break;\n      // space\n      case SPACE:\n        if (this.addOnSpace) {\n          this.addNewChip(this.inputValue);\n          event.preventDefault();\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  @HostListener('focus')\n  _handleFocus() {\n    if (this.disabled) { return; }\n    if (!this.isAutoComplete) {\n      this.elementRef.nativeElement.querySelector('input.chip-input').focus();\n    } else {\n      this.autoCompleteFocued = true;\n      this._onTouched();\n    }\n    this._resetSelected();\n  }\n\n  inputBlurred(): void {\n    this.inputFocused = false;\n    if (this.inputValue) {\n      this.addNewChip(this.inputValue);\n    }\n    this._onTouched();\n  }\n\n  inputFocus(): void {\n    if (this.disabled) { return; }\n    this.inputFocused = true;\n  }\n\n  inputPaste(event: any): void {\n    let clipboardData = event.clipboardData ||\n      (event.originalEvent && event.originalEvent.clipboardData);\n    let pastedString = clipboardData.getData('text/plain').trim();\n    this.addNewChip(pastedString);\n    setTimeout(() => this._resetInput());\n  }\n\n  leftArrowKeyEvents() {\n    event.preventDefault();\n    if (this.selectedChip) {\n      if (this.selectedChip < 0) {\n        this.selectedChip = this.chipItemList.length - 1;\n      } else {\n        this.selectedChip = this.selectedChip - 1;\n      }\n    }\n  }\n  rightArrowKeyEvents() {\n    event.preventDefault();\n    if (this.selectedChip != -1) {\n      if (this.selectedChip >= this.chipItemList.length) {\n        this.selectedChip = 0;\n      } else {\n        this.selectedChip = this.selectedChip + 1;\n      }\n    }\n  }\n\n  private _isValid(chipString: any): boolean {\n    let typeString = typeof chipString;\n    let isExist: any;\n    if (typeString === 'string') {\n      chipString = chipString.trim();\n      isExist = this.chipItemList.filter((chip) => chip.text === chipString);\n    } else {\n      isExist = this.chipItemList.filter((chip) => chip.text === chipString.text);\n    }\n    if (this.chipItemList.indexOf(chipString) === -1 && (isExist.length ? false : true)) {\n      return this.allowedPattern.test(chipString);\n    }\n  }\n  /**\n  * add new chip\n  * @param chips\n  */\n  private addNewChip(chips: any): void {\n    let validInput = this._isValid(chips);\n    if (validInput) {\n      if (this.maxChips && this.maxChips < this.chipItemList.length - 1) {\n        return;\n      } else {\n        this.chipItemList.push(new Chip(chips, this.autocompleteItemText, this.autocompleteItemValue));\n        this.item = null;\n      }\n    }\n    this._resetSelected();\n    this._resetInput();\n    this.updateValue();\n  }\n\n  /**\n * remove selected chip\n * @param chipIndexToRemove index of selected chip\n */\n  removeSelectedChip(chipIndexToRemove: number): void {\n    this.chipItemList.splice(chipIndexToRemove, 1);\n    this._resetSelected();\n    this.updateValue();\n  }\n\n  private backspaceEvent(): void {\n    if (!this.inputValue.length && this.chipItemList.length &&\n      this.isRemovable && this.isEmptyAutoComplete) {\n      if (this.selectedChip != -1) {\n        this.removeSelectedChip(this.selectedChip);\n        this.selectedChip = this.chipItemList.length - 1;\n      } else {\n        this.selectedChip = this.chipItemList.length - 1;\n      }\n    }\n  }\n\n  private _resetSelected(): void {\n    this.selectedChip = -1;\n  }\n\n  private _resetInput(): void {\n    if (this.isAutoComplete) {\n      this.chipInputForm.controls['autocomplete'].setValue('');\n    } else {\n      this.chipInputForm.controls['chipInput'].setValue('');\n    }\n  }\n  /**\n   * update value\n   */\n  private updateValue() {\n    this._value = new Array<any>();\n    this._value = this.chipItemList.map((chip: any) => {\n      if (this.valueKey) {\n        let c: any = {};\n        c[this.textKey] = chip.text;\n        c[this.valueKey] = chip.value;\n        return c;\n      } else {\n        return chip.value;\n      }\n    });\n    this._emitChangeEvent();\n  }\n\n  /** Emits an event when the user selects a color. */\n  _emitChangeEvent(): void {\n    let event = new Md2ChipsChange();\n    event.source = this;\n    event.value = this._value;\n    this._onChange(event.value);\n    this.change.emit(event);\n  }\n\n  writeValue(value: any): void {\n    if (value !== this._value) {\n      this._value = value;\n      this.chipItemList = [];\n      if (value) {\n        if (value && value.length && Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            this.chipItemList.push(new Chip(value[i], this.textKey, this.valueKey));\n          }\n        }\n      }\n    }\n  }\n  registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\n  registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\n}\n\nexport const MD2_CHIPS_DIRECTIVES: any[] = [Md2Chips];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, Md2AutocompleteModule],\n  declarations: MD2_CHIPS_DIRECTIVES,\n  exports: MD2_CHIPS_DIRECTIVES\n})\nexport class Md2ChipsModule { }\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Directive({\n  selector: '[collapse]',\n  host: {\n    'role': 'collapse',\n    '[class.in]': '_collapse',\n    '[class.collapse]': 'true',\n    '[class.collapsing]': '_collapsing',\n    '[attr.aria-expanded]': '_collapse',\n    '[attr.aria-hidden]': '!_collapse'\n  },\n  exportAs: 'md2Collapse'\n})\nexport class Md2Collapse {\n  _collapse: boolean = true;\n  _collapsing: boolean = false;\n\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input()\n  get collapse(): boolean { return this._collapse; }\n  set collapse(value: boolean) {\n    this._collapse = value;\n    this.toggle();\n  }\n\n  /**\n   * toggle collapse\n   */\n  toggle() {\n    if (this._collapse) { this.hide(); } else { this.show(); }\n  }\n\n  /**\n  * show collapse\n  */\n  show() {\n    this._collapsing = true;\n    this._collapse = true;\n    setTimeout(() => {\n      this._collapsing = false;\n    }, 4);\n    this.expanded.emit();\n  }\n\n  /**\n   * hide collapse\n   */\n  hide() {\n    this._collapsing = true;\n    this._collapse = false;\n    setTimeout(() => {\n      this._collapsing = false;\n    }, 4);\n    this.collapsed.emit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Md2Collapse } from './collapse';\n\nexport * from './collapse';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Md2Collapse],\n  declarations: [Md2Collapse],\n})\nexport class Md2CollapseModule { }\n","import { Injectable } from '@angular/core';\n\nexport const COLOR_RGB = /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/;\nexport const COLOR_HSL = /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/;\n\nexport class Hsva {\n  constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\nexport class Hsla {\n  constructor(public h: number, public s: number, public l: number, public a: number) { }\n}\nexport class Rgba {\n  constructor(public r: number, public g: number, public b: number, public a: number) { }\n}\n\n@Injectable()\nexport class ColorUtil {\n  /**\n* hsla to hsva\n* @param hsla\n*/\n  hsla2hsva(hsla: Hsla) {\n    let h: number = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1), l = Math.min(hsla.l, 1);\n    let a = Math.min(hsla.a, 1);\n    if (l === 0) {\n      return { h: h, s: 0, v: 0, a: a };\n    } else {\n      let v: number = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n      return { h: h, s: 2 * (v - l) / v, v: v, a: a };\n    }\n  }\n\n  /**\n  * hsva to hsla\n  * @param hsva\n  */\n  hsva2hsla(hsva: Hsva) {\n    let h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n    if (v === 0) {\n      return new Hsla(h, 0, 0, a);\n    } else if (s === 0 && v === 1) {\n      return new Hsla(h, 1, 1, a);\n    } else {\n      let l: number = v * (2 - s) / 2;\n      return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a);\n    }\n  }\n\n  /**\n   * rgba to hsva\n   * @param rgba\n   */\n  rgbaToHsva(rgba: Rgba) {\n    let r: number = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1), b = Math.min(rgba.b, 1);\n    let a = Math.min(rgba.a, 1);\n    let max: number = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h: number, s: number, v: number = max;\n    let d: number = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max === min) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n\n    return new Hsva(h, s, v, a);\n  }\n\n  /**\n   * hsva to rgba\n   * @param hsva\n   */\n  hsvaToRgba(hsva: Hsva) {\n    let h: number = hsva.h, s: number = hsva.s, v: number = hsva.v, a: number = hsva.a;\n    let r: number, g: number, b: number;\n\n    let i: number = Math.floor(h * 6);\n    let f: number = h * 6 - i;\n    let p: number = v * (1 - s);\n    let q: number = v * (1 - f * s);\n    let t: number = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v; g = t; b = p;\n        break;\n      case 1:\n        r = q; g = v; b = p;\n        break;\n      case 2:\n        r = p; g = v; b = t;\n        break;\n      case 3:\n        r = p; g = q; b = v;\n        break;\n      case 4:\n        r = t; g = p; b = v;\n        break;\n      case 5:\n        r = v; g = p; b = q;\n        break;\n    }\n\n    return new Rgba(r, g, b, a);\n  }\n\n  /**\n   * string to hsva\n   * @param colorString\n   */\n  stringToHsva(colorString: string) {\n    let stringParsers = [\n      {\n        re: COLOR_RGB,\n        parse: function (execResult: Array<string>) {\n          return new Rgba(parseInt(execResult[2]) / 255,\n            parseInt(execResult[3]) / 255,\n            parseInt(execResult[4]) / 255,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      },\n      {\n        re: COLOR_HSL,\n        parse: function (execResult: Array<string>) {\n          return new Hsla(parseInt(execResult[2]) / 360,\n            parseInt(execResult[3]) / 100,\n            parseInt(execResult[4]) / 100,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      },\n      {\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n        parse: function (execResult: Array<string>) {\n          return new Rgba(parseInt(execResult[1], 16) / 255,\n            parseInt(execResult[2], 16) / 255,\n            parseInt(execResult[3], 16) / 255,\n            1);\n        }\n      },\n      {\n        re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n        parse: function (execResult: Array<string>) {\n          return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,\n            parseInt(execResult[2] + execResult[2], 16) / 255,\n            parseInt(execResult[3] + execResult[3], 16) / 255,\n            1);\n        }\n      }\n    ];\n    colorString = colorString.toLowerCase();\n    let hsva: any = null;\n    for (let key in stringParsers) {\n      if (stringParsers.hasOwnProperty(key)) {\n        let parser = stringParsers[key];\n        let match: Array<string> = parser.re.exec(colorString);\n        let color = match && parser.parse(match);\n        if (color) {\n          if (color instanceof Rgba) {\n            hsva = this.rgbaToHsva(color);\n          } else if (color instanceof Hsla) {\n            hsva = this.hsla2hsva(color);\n          }\n          return hsva;\n        }\n      }\n    }\n    return hsva;\n  }\n\n  /**\n   * output formate of color\n   * @param hsva\n   * @param outputFormat\n   */\n  outputFormat(hsva: Hsva, outputFormat: string) {\n    if (hsva.a < 1) {\n      switch (outputFormat) {\n        case 'hsl':\n          let hsla = this.hsva2hsla(hsva);\n          let hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n            Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100\n          );\n          return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' +\n            hslaText.l + '%,' + hslaText.a + ')';\n        default:\n          let rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n          return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b +\n            ',' + Math.round(rgba.a * 100) / 100 + ')';\n      }\n    } else {\n      switch (outputFormat) {\n        case 'hsl':\n          let hsla = this.hsva2hsla(hsva);\n          let hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n            Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\n          return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)';\n        case 'rgb':\n          let rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n          return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n        default:\n          return this.hexText(this.denormalizeRGBA(this.hsvaToRgba(hsva)));\n      }\n    }\n  }\n  hexText(rgba: Rgba) {\n    let mainText = ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16);\n    let hexText = '#' + mainText.substr(1);\n    return hexText.toLowerCase();\n  }\n\n  denormalizeRGBA(rgba: Rgba) {\n    return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255),\n      Math.round(rgba.b * 255), rgba.a);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ViewEncapsulation,\n  Directive,\n  OnDestroy,\n  Optional,\n  Renderer,\n  Self,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\nimport { Overlay } from '../core/overlay/overlay';\nimport { OverlayRef } from '../core/overlay/overlay-ref';\nimport { OverlayState } from '../core/overlay/overlay-state';\nimport { PositionStrategy } from '../core/overlay/position/position-strategy';\nimport { TemplatePortal } from '../core/portal/portal';\nimport { Subscription } from 'rxjs';\nimport { ColorUtil, Rgba, Hsla, Hsva } from './color-util';\n\nexport class SliderPosition {\n  constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\nexport class SliderDimension {\n  constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\n\nexport type Container = 'inline' | 'dialog';\n\nlet nextId = 0;\n\n@Directive({\n  selector: '[text]',\n  host: {\n    '(input)': 'changeInput($event)'\n  }\n})\nexport class TextDirective {\n  @Output('newValue') newValue = new EventEmitter<any>();\n  @Input('text') text: any;\n  @Input('rg') rg: number;\n  changeInput(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    let value = event.target.value;\n    if (this.rg === undefined) {\n      this.newValue.emit(value);\n    } else {\n      let numeric = parseFloat(value);\n      if (!isNaN(numeric) && numeric >= 0 && numeric <= this.rg) {\n        this.newValue.emit({ v: numeric, rg: this.rg });\n      }\n    }\n  }\n}\n\n@Directive({\n  selector: '[colorpicker-slider]',\n  host: {\n    '(mousedown)': 'start($event)',\n    '(touchstart)': 'start($event)'\n  }\n})\nexport class ColorpickerSliderDirective {\n  @Input('colorpicker-slider') slider: string;\n  @Input('point-x') pointX: number;\n  @Input('point-y') pointY: number;\n  @Output('change') change = new EventEmitter<any>();\n  private listenerMove: any;\n  private listenerStop: any;\n\n  constructor(private _element: ElementRef) {\n    this.listenerMove = (event: any) => { this.move(event); };\n    this.listenerStop = () => { this.stop(); };\n  }\n\n  /**\n   * set cursor position\n   * @param event\n   */\n  setCursor(event: any) {\n    let height = this._getNativeElement().offsetHeight;\n    let width = this._getNativeElement().offsetWidth;\n    let x = Math.max(0, Math.min(this.getX(event), width));\n    let y = Math.max(0, Math.min(this.getY(event), height));\n\n    if (this.pointX !== undefined && this.pointY !== undefined) {\n      this.change.emit({\n        s: x / width, v: (1 - y / height),\n        pointX: this.pointX, pointY: this.pointY\n      });\n    } else if (this.pointX === undefined && this.pointY !== undefined) {\n      this.change.emit({ v: y / height, rg: this.pointY });\n    } else {\n      this.change.emit({ v: x / width, rg: this.pointX });\n    }\n  }\n\n  /**\n   * input event listner\n   * @param event\n   */\n  move(event: any) {\n    event.preventDefault();\n    this.setCursor(event);\n  }\n\n  /**\n   * input event listner\n   * @param event\n   */\n  start(event: any) {\n    this.setCursor(event);\n    document.addEventListener('mousemove', this.listenerMove);\n    document.addEventListener('touchmove', this.listenerMove);\n    document.addEventListener('mouseup', this.listenerStop);\n    document.addEventListener('touchend', this.listenerStop);\n  }\n\n  /**\n   * stop mouse event\n   */\n  stop() {\n    document.removeEventListener('mousemove', this.listenerMove);\n    document.removeEventListener('touchmove', this.listenerMove);\n    document.removeEventListener('mouseup', this.listenerStop);\n    document.removeEventListener('touchend', this.listenerStop);\n  }\n\n  /**\n   * get x\n   * @param event\n   */\n  getX(event: any) {\n    let boundingClientRect = this._getNativeElement().getBoundingClientRect();\n    return (event.pageX !== undefined ? event.pageX : event.touches[0].pageX) -\n      boundingClientRect.left - window.pageXOffset;\n  }\n\n  /**\n   * get y\n   * @param event\n   */\n  getY(event: any) {\n    let boundingClientRect = this._getNativeElement().getBoundingClientRect();\n    return (event.pageY !== undefined ? event.pageY : event.touches[0].pageY) -\n      boundingClientRect.top - window.pageYOffset;\n  }\n\n  _getNativeElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n}\n\n/**\n * Change event object emitted by Md2Colorpicker.\n */\nexport class Md2ColorChange {\n  constructor(public source: Md2Colorpicker, public color: string) { }\n}\n\n@Component({\n  \n  selector: 'md2-colorpicker',\n  templateUrl: 'colorpicker.html',\n  styleUrls: ['colorpicker.scss'],\n  host: {\n    'role': 'colorpicker',\n    '[id]': 'id',\n    '[class.md2-colorpicker-disabled]': 'disabled',\n    '[attr.aria-label]': 'placeholder',\n    '[attr.aria-required]': 'required.toString()',\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Colorpicker implements OnDestroy, ControlValueAccessor {\n\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef;\n  private _backdropSubscription: Subscription;\n  private _positionSubscription: Subscription;\n\n  _innerValue: string = '';\n  _isColorpickerVisible: boolean;\n  _hueSliderColor: string;\n  slider: SliderPosition;\n  sliderDim: SliderDimension;\n  hsva: Hsva;\n  rgbaText: Rgba;\n  hslaText: Hsla;\n  outputColor: string;\n  alphaColor: string;\n  hexText: string;\n  format: number;\n  backColor: boolean = true;\n\n  private _created: boolean;\n  private _defalutColor: string = '#000000';\n  private _initialColor: string;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n  private _color: string = null;\n\n  /** Whether filling out the select is required in the form.  */\n  _required: boolean = false;\n\n  /** Whether the select is disabled.  */\n  private _disabled: boolean = false;\n  isInputFocus: boolean = false;\n\n  /** The placeholder displayed in the trigger of the select. */\n  private _placeholder: string;\n  private _container: Container = 'inline';\n\n  fontColor: string;\n  _isDark: boolean;\n  isInputValidColor: boolean = false;\n\n  _onChange: (value: any) => void = () => { };\n  _onTouched = () => { };\n\n  @Input()\n  get color() { return this._color; }\n  set color(value: string) { this._color = value; }\n\n  /** Placeholder to be shown if no value has been selected. */\n  @Input()\n  get placeholder() { return this._placeholder; }\n  set placeholder(value: string) { this._placeholder = value; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether the component is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  @Input('format') cFormat: string = 'hex';\n  @Output('colorpickerChange') colorpickerChange = new EventEmitter<string>();\n  /** Event emitted when the selected date has been changed by the user. */\n  @Output() change: EventEmitter<Md2ColorChange> = new EventEmitter<Md2ColorChange>();\n  @Input() tabindex: number = 0;\n  @Input() id: string = 'md2-colorpicker-' + (++nextId);\n\n  get value(): any {\n    return this._innerValue;\n\n  }\n  /**\n  * set accessor including call the onchange callback\n  */\n  set value(v: any) {\n    if (v !== this._innerValue) {\n      if (v) {\n        this.hsva = this._util.stringToHsva(v);\n      }\n      this._innerValue = v;\n    }\n  }\n\n  @Input()\n  get container() { return this._container; }\n  set container(value: Container) {\n    if (this._container !== value) {\n      this._container = value || 'inline';\n      this.destroyPanel();\n    }\n  }\n\n  get setGradient() {\n    return {\n      'background-image': 'linear-gradient(to right, transparent, transparent),' +\n      'linear-gradient(to left, ' + this.hexText + ', rgba(255, 255, 255, 0))'\n    };\n\n  }\n\n  /** Event emitted when the select has been opened. */\n  @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the select has been closed. */\n  @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n  @ViewChild('portal') _templatePortal: TemplateRef<any>;\n\n  constructor(private _element: ElementRef, private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\n    private _util: ColorUtil, @Self() @Optional() public _control: NgControl) {\n    this._created = false;\n    if (this._control) {\n      this._control.valueAccessor = this;\n    }\n  }\n\n  ngOnDestroy() { this.destroyPanel(); }\n\n  /** Whether or not the overlay panel is open. */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n\n  /** Toggles the overlay panel open or closed. */\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  /** Opens the overlay panel. */\n  open(): void {\n    let hsva = this._util.stringToHsva(this.color + '');\n    this.isInputFocus = true;\n    if (hsva) {\n      this.hsva = hsva;\n    } else {\n      this.hsva = this._util.stringToHsva(this._defalutColor);\n    }\n\n    this.sliderDim = new SliderDimension(245, 250, 130, 245);\n    this.slider = new SliderPosition(0, 0, 0, 0);\n    if (this.cFormat === 'rgb') {\n      this.format = 1;\n    } else if (this.cFormat === 'hsl') {\n      this.format = 2;\n    } else {\n      this.format = 0;\n    }\n\n    this.update();\n    if (this.disabled) { return; }\n    if (!this._isColorpickerVisible) {\n      this._initialColor = this.color;\n      this.update();\n      this._isColorpickerVisible = true;\n    } else {\n      this._isColorpickerVisible = false;\n    }\n\n    this._createOverlay();\n\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._templatePortal, this._viewContainerRef);\n    }\n\n    this._overlayRef.attach(this._portal);\n    this._subscribeToBackdrop();\n    this._panelOpen = true;\n    this.onOpen.emit();\n  }\n\n  /** Closes the overlay panel and focuses the host element. */\n  close(): void {\n    this._panelOpen = false;\n    this.isInputFocus = false;\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this._backdropSubscription.unsubscribe();\n    }\n    this._isColorpickerVisible = false;\n    if (this._innerValue) {\n      this.setColorFromString(this._innerValue);\n    }\n  }\n\n  /** Removes the panel from the DOM. */\n  destroyPanel(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n\n      this._cleanUpSubscriptions();\n    }\n  }\n\n  _onBlur() {\n    if (!this.panelOpen) {\n      this._onTouched();\n    }\n  }\n  /**\n    * input event listner\n    * @param event\n    */\n  changeInput(event: any) {\n    let value = event.target.value;\n    this.colorpickerChange.emit(value);\n  }\n\n  /**\n  * set saturation,lightness,hue,alpha,RGB value\n  * @param val\n  * @param rg\n  */\n  setSaturation(val: { v: number, rg: number }) {\n    let hsla = this._util.hsva2hsla(this.hsva);\n    hsla.s = val.v / val.rg;\n    this.hsva = this._util.hsla2hsva(hsla);\n    this.update();\n  }\n\n  setLightness(val: { v: number, rg: number }) {\n    let hsla = this._util.hsva2hsla(this.hsva);\n    hsla.l = val.v / val.rg;\n    this.hsva = this._util.hsla2hsva(hsla);\n    this.update();\n  }\n\n  setHue(val: { v: number, rg: number }) {\n    this.hsva.h = val.v / val.rg;\n    this.update();\n  }\n\n  setAlpha(val: { v: number, rg: number }) {\n    this.hsva.a = val.v / val.rg;\n    this.update();\n  }\n\n  setR(val: { v: number, rg: number }) {\n    let rgba = this._util.hsvaToRgba(this.hsva);\n    rgba.r = val.v / val.rg;\n    this.hsva = this._util.rgbaToHsva(rgba);\n    this.update();\n  }\n  setG(val: { v: number, rg: number }) {\n    let rgba = this._util.hsvaToRgba(this.hsva);\n    rgba.g = val.v / val.rg;\n    this.hsva = this._util.rgbaToHsva(rgba);\n    this.update();\n  }\n  setB(val: { v: number, rg: number }) {\n    let rgba = this._util.hsvaToRgba(this.hsva);\n    rgba.b = val.v / val.rg;\n    this.hsva = this._util.rgbaToHsva(rgba);\n    this.update();\n  }\n  setSaturationAndBrightness(val: { s: number, v: number, pointX: number, pointY: number }) {\n    this.hsva.s = val.s / val.pointX;\n    this.hsva.v = val.v / val.pointY;\n    this.update();\n  }\n  clickOk() {\n    this._isColorpickerVisible = false;\n    this.isInputValidColor = false;\n    this.color = this._innerValue;\n\n    if (this._innerValue != this._initialColor) {\n      this._emitChangeEvent();\n    }\n    this.close();\n  }\n\n  /**\n  * deselect recent color and close popup\n  */\n  cancelColor() {\n    this._innerValue = this._initialColor;\n    this.close();\n  }\n  isValidColor(str: string) {\n    return str.match(/^#[a-f0-9]{6}$/i) !== null;\n  }\n  /**\n     * set color\n     * @param value\n     */\n  setColorFromString(value: string) {\n    if (!this.isValidColor(value)) {\n      value = '#000000';\n      this.backColor = false;\n    }\n    let hsva = this._util.stringToHsva(value);\n    if (hsva !== null) {\n      this.hsva = hsva;\n    }\n    this.update();\n  }\n\n  formatPolicy(value: number) {\n    this.format = value;\n    if (this.format === 0 && this.hsva.a < 1) {\n      this.format++;\n    }\n    return this.format;\n  }\n\n  /**\n   * update color\n   */\n  update() {\n    let hsla = this._util.hsva2hsla(this.hsva);\n    let rgba = this._util.denormalizeRGBA(this._util.hsvaToRgba(this.hsva));\n    let hueRgba = this._util.denormalizeRGBA(this._util.hsvaToRgba(\n      new Hsva(this.hsva.h, 1, 1, 1)));\n\n    this.alphaColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n    this._hueSliderColor = 'rgb(' + hueRgba.r + ',' + hueRgba.g + ',' + hueRgba.b + ')';\n    this.hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n      Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\n    this.rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);\n    if (this.backColor) {\n      this.hexText = this._util.hexText(rgba);\n    }\n    this.backColor = true;\n    let colorCode = Math.round((this.rgbaText.r * 299 + this.rgbaText.g * 587 +\n      this.rgbaText.b * 114) / 1000);\n    if (colorCode >= 128 || this.hsva.a < 0.35) {\n      this.fontColor = 'black';\n      this._isDark = true;\n    } else {\n      this.fontColor = 'white';\n      this._isDark = false;\n    }\n\n    if (this.format === 0 && this.hsva.a < 1) {\n      this.format++;\n    }\n    this.outputColor = this._util.outputFormat(this.hsva, this.cFormat);\n    this.slider = new SliderPosition((this.hsva.h) * this.sliderDim.h,\n      this.hsva.s * this.sliderDim.s - 7, (1 - this.hsva.v) * this.sliderDim.v - 7,\n      this.hsva.a * this.sliderDim.a);\n    this._innerValue = this.outputColor;\n  }\n\n  clearColor(event: Event) {\n    event.stopPropagation();\n    this.color = '';\n    this._emitChangeEvent();\n  }\n\n  isDescendant(parent: any, child: any) {\n    let node = child.parentNode;\n    while (node !== null) {\n      if (node === parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  }\n\n  checkInputVal(): void {\n    this.hsva = this._util.stringToHsva(this.color + '');\n    this.isInputFocus = false;\n    if (this.hsva) {\n      if (this._innerValue !== this.color) {\n        this._emitChangeEvent();\n      }\n      this.isInputValidColor = false;\n    } else {\n      this.isInputValidColor = true;\n    }\n    this._onTouched();\n  }\n\n  /** Emits an event when the user selects a color. */\n  _emitChangeEvent(): void {\n    this._onChange(this.color);\n    this.change.emit(new Md2ColorChange(this, this.color));\n    this._innerValue = this.color;\n  }\n  writeValue(value: any): void {\n    this._innerValue = value;\n    this.color = value;\n  }\n\n  registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _subscribeToBackdrop(): void {\n    this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n      this._innerValue = this._initialColor;\n      this.close();\n    });\n  }\n\n  /**\n   *  This method creates the overlay from the provided panel's template and saves its\n   *  OverlayRef so that it can be attached to the DOM when open is called.\n   */\n  private _createOverlay(): void {\n    if (!this._overlayRef) {\n      let config = new OverlayState();\n      if (this.container === 'inline') {\n        config.positionStrategy = this._createPickerPositionStrategy();\n        config.hasBackdrop = true;\n        config.backdropClass = 'cdk-overlay-transparent-backdrop';\n        config.scrollStrategy = this._overlay.scrollStrategies.reposition();\n      } else {\n        config.positionStrategy = this._overlay.position()\n          .global()\n          .centerHorizontally()\n          .centerVertically();\n        config.hasBackdrop = true;\n      }\n      this._overlayRef = this._overlay.create(config);\n    }\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPickerPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .connectedTo(this._element,\n      { originX: 'start', originY: 'top' },\n      { overlayX: 'start', overlayY: 'top' })\n      .withFallbackPosition(\n      { originX: 'end', originY: 'top' },\n      { overlayX: 'end', overlayY: 'top' })\n      .withFallbackPosition(\n      { originX: 'start', originY: 'bottom' },\n      { overlayX: 'start', overlayY: 'bottom' })\n      .withFallbackPosition(\n      { originX: 'end', originY: 'bottom' },\n      { overlayX: 'end', overlayY: 'bottom' });\n  }\n\n  private _cleanUpSubscriptions(): void {\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { StyleModule, OverlayModule, PortalModule, A11yModule } from '../core/index';\nimport { Md2Colorpicker, ColorpickerSliderDirective, TextDirective } from './colorpicker';\nimport { ColorUtil } from './color-util';\n\n\nexport * from './colorpicker';\nexport * from './color-util';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    OverlayModule,\n    PortalModule,\n    StyleModule,\n    A11yModule,\n  ],\n  exports: [\n    Md2Colorpicker,\n    ColorpickerSliderDirective,\n    TextDirective\n  ],\n  declarations: [\n    Md2Colorpicker,\n    ColorpickerSliderDirective,\n    TextDirective\n  ],\n  providers: [ColorUtil]\n})\nexport class Md2ColorpickerModule { }\n","import {Component, ViewEncapsulation, ContentChildren, QueryList, Input} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\n\n// Boilerplate for applying mixins to Md2Optgroup.\nexport class Md2OptgroupBase { }\nexport const _Md2OptgroupMixinBase = mixinDisabled(Md2OptgroupBase);\n\n// Counter for unique group ids.\nlet nextId = 0;\n\n/**\n * Component that is used to group instances of `md2-option`.\n */\n@Component({\n  \n  selector: 'md2-optgroup',\n  templateUrl: 'optgroup.html',\n  styleUrls: ['optgroup.scss'],\n  encapsulation: ViewEncapsulation.None,\n  inputs: ['disabled'],\n  host: {\n    'class': 'md2-optgroup',\n    'role': 'group',\n    '[class.md2-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class Md2Optgroup extends _Md2OptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `md2-optgroup-label-${nextId++}`;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Optional,\n  NgModule,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ENTER, SPACE } from '../core/keyboard/keycodes';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\nimport { MdSelectionModule } from '../core/selection/index';\nimport { Md2Optgroup } from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MdOption when selected or deselected. */\nexport class Md2OptionSelectionChange {\n  constructor(public source: Md2Option, public isUserInput = false) { }\n}\n\n\n/**\n * Single option inside of a `<md2-select>` element.\n */\n@Component({\n  \n  selector: 'md2-option',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.md2-selected]': 'selected',\n    '[class.md2-option-multiple]': 'multiple',\n    '[class.md2-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.md2-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    '[class.md2-option]': 'true',\n  },\n  template: '<ng-content></ng-content>',\n  styleUrls: ['option.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Option {\n  private _selected: boolean = false;\n  private _active: boolean = false;\n\n  /** Whether the option is disabled.  */\n  private _disabled: boolean = false;\n\n  private _id: string = `md2-option-${_uniqueIdCounter++}`;\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  multiple: boolean = false;\n\n  /** The unique ID of the option. */\n  get id() { return this._id; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() onSelectionChange = new EventEmitter<Md2OptionSelectionChange>();\n\n  constructor(\n    @Optional() public readonly group: Md2Optgroup,\n    private _element: ElementRef) { }\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    return this._getHostElement().textContent.trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    this._getHostElement().focus();\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    this._active = true;\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    this._active = false;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n    }\n  }\n\n  /**\n   * Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Fetches the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new Md2OptionSelectionChange(this, isUserInput));\n  }\n\n}\n\n@NgModule({\n  imports: [CommonModule, MdSelectionModule],\n  exports: [Md2Option, Md2Optgroup],\n  declarations: [Md2Option, Md2Optgroup]\n})\nexport class Md2OptionModule { }\n","\nimport {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself and whether or not it is currently disabled.\n */\nexport interface Focusable extends CanDisable {\n  focus(): void;\n}\n\n\nexport class FocusKeyManager extends ListKeyManager<Focusable> {\n\n  constructor(items: QueryList<Focusable>) {\n    super(items);\n  }\n\n  /**\n   * This method sets the active item to the item at the specified index.\n   * It also adds focuses the newly active item.\n   */\n  setActiveItem(index: number): void {\n    super.setActiveItem(index);\n\n    if (this.activeItem) {\n      this.activeItem.focus();\n    }\n  }\n\n}\n","import {QueryList} from '@angular/core';\nimport {UP_ARROW, DOWN_ARROW, TAB} from '../core';\nimport {Observable, Subject} from 'rxjs';\n\n/**\n * This interface is for items that can be disabled. The type passed into\n * ListKeyManager must extend this interface.\n */\nexport interface CanDisable {\n  disabled?: boolean;\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends CanDisable> {\n  private _activeItemIndex: number = null;\n  private _activeItem: T;\n  private _tabOut = new Subject<void>();\n  private _wrap: boolean = false;\n\n  constructor(private _items: QueryList<T>) {\n  }\n\n  /**\n   * Turns on wrapping mode, which ensures that the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   *\n   * @returns The ListKeyManager that the method was called on.\n   */\n  withWrap(): this {\n    this._wrap = true;\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the index specified.\n   *\n   * @param index The index of the item to be set as active.\n   */\n  setActiveItem(index: number): void {\n    this._activeItemIndex = index;\n    this._activeItem = this._items.toArray()[index];\n  }\n\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case DOWN_ARROW:\n        this.setNextItemActive();\n        break;\n      case UP_ARROW:\n        this.setPreviousItemActive();\n        break;\n      case TAB:\n        // Note that we shouldn't prevent the default action on tab.\n        this._tabOut.next(null);\n        return;\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n\n  /** Returns the index of the currently active item. */\n  get activeItemIndex(): number {\n    return this._activeItemIndex;\n  }\n\n  /** Returns the currently active item. */\n  get activeItem(): T {\n    return this._activeItem;\n  }\n\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive(): void {\n    this._activeItemIndex === null ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive(): void {\n    this._activeItemIndex === null && this._wrap ? this.setLastItemActive()\n                                                 : this._setActiveItemByDelta(-1);\n  }\n\n  /**\n   * Allows setting of the activeItemIndex without any other effects.\n   * @param index The new activeItemIndex.\n   */\n  updateActiveItemIndex(index: number) {\n    this._activeItemIndex = index;\n  }\n\n  /**\n   * Observable that emits any time the TAB key is pressed, so components can react\n   * when focus is shifted off of the list.\n   */\n  get tabOut(): Observable<void> {\n    return this._tabOut.asObservable();\n  }\n\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  private _setActiveItemByDelta(delta: number, items = this._items.toArray()): void {\n    this._wrap ? this._setActiveInWrapMode(delta, items)\n               : this._setActiveInDefaultMode(delta, items);\n  }\n\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  private _setActiveInWrapMode(delta: number, items: T[]): void {\n    // when active item would leave menu, wrap to beginning or end\n    this._activeItemIndex =\n      (this._activeItemIndex + delta + items.length) % items.length;\n\n    // skip all disabled menu items recursively until an enabled one is reached\n    if (items[this._activeItemIndex].disabled) {\n      this._setActiveInWrapMode(delta, items);\n    } else {\n      this.setActiveItem(this._activeItemIndex);\n    }\n  }\n\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  private _setActiveInDefaultMode(delta: number, items: T[]): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n  }\n\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  private _setActiveItemByIndex(index: number, fallbackDelta: number,\n                                  items = this._items.toArray()): void {\n    if (!items[index]) { return; }\n    while (items[index].disabled) {\n      index += fallbackDelta;\n      if (!items[index]) { return; }\n    }\n    this.setActiveItem(index);\n  }\n\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * The following are all the animations for the md2-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material md2-select animation.\n */\n\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nexport const transformPlaceholder: AnimationTriggerMetadata = trigger('transformPlaceholder', [\n  state('floating-ltr', style({\n    top: '-22px',\n    left: '-2px',\n    transform: `scale(0.75)`\n  })),\n  state('floating-rtl', style({\n    top: '-22px',\n    left: '2px',\n    transform: `scale(0.75)`\n  })),\n  transition('* => *', animate(`400ms cubic-bezier(0.25, 0.8, 0.25, 1)`))\n]);\n\n/**\n * This animation transforms the select's overlay panel on and off the page.\n *\n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n *\n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nexport const transformPanel: AnimationTriggerMetadata = trigger('transformPanel', [\n  state('showing', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 32px)',\n    transform: `scaleY(1)`\n  })),\n  transition('void => *', [\n    style({\n      opacity: 0,\n      minWidth: '100%',\n      transform: `scaleY(0)`\n    }),\n    animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`)\n  ]),\n  transition('* => void', [\n    animate('250ms 100ms linear', style({opacity: 0}))\n  ])\n]);\n\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationTriggerMetadata  =  trigger('fadeInContent', [\n  state('showing', style({opacity: 1})),\n  transition('void => showing', [\n    style({opacity: 0}),\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n  ])\n]);\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  Self,\n  ViewEncapsulation,\n  ViewChild,\n  ChangeDetectorRef,\n  Attribute,\n  OnInit,\n} from '@angular/core';\nimport { Md2Option, Md2OptionSelectionChange } from './option';\nimport { Md2Optgroup } from './optgroup';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW, HOME, END } from '../core/keyboard/keycodes';\nimport { FocusKeyManager } from '../core/a11y/focus-key-manager';\nimport { Dir } from '../core/rtl/dir';\nimport { Observable, merge, Subscription } from 'rxjs';\nimport { transformPlaceholder, transformPanel, fadeInContent } from './select-animations';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\nimport { ConnectedOverlayDirective } from '../core/overlay/overlay-directives';\nimport { ViewportRuler } from '../core/overlay/position/viewport-ruler';\nimport { SelectionModel } from '../core/selection/selection';\nimport { getMdSelectDynamicMultipleError, getMdSelectNonArrayValueError } from './select-errors';\nimport { startWith, filter } from 'rxjs/operators';\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The fixed height of every option element (option, group header etc.). */\nexport const SELECT_ITEM_HEIGHT = 48;\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n\n/** The max number of options visible at once in the select panel. */\nexport const SELECT_MAX_OPTIONS_DISPLAYED =\n  Math.floor(SELECT_PANEL_MAX_HEIGHT / SELECT_ITEM_HEIGHT);\n\n/** The fixed height of the select's trigger element. */\nexport const SELECT_TRIGGER_HEIGHT = 30;\n\n/**\n * Must adjust for the difference in height between the option and the trigger,\n * so the text will align on the y axis.\n */\nexport const SELECT_ITEM_HEIGHT_ADJUSTMENT = (SELECT_ITEM_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 16;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * (SELECT_PADDING * 1.75) + 20 = 48\n * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and\n * the browser adds ~4px, because we're using inline elements.\n * The checkbox width is 20px.\n */\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.25 + 20;\n\n/**\n * The panel's padding on the y-axis. This padding indicates there are more\n * options available if you scroll.\n */\nexport const SELECT_PANEL_PADDING_Y = 16;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class Md2SelectChange {\n  constructor(public source: Md2Select, public value: any) { }\n}\n\n/** Allowed values for the floatPlaceholder option. */\nexport type Md2SelectFloatPlaceholderType = 'always' | 'never' | 'auto';\n\n@Component({\n  \n  selector: 'md2-select',\n  templateUrl: 'select.html',\n  styleUrls: ['select.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'listbox',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-label]': '_ariaLabel',\n    '[attr.aria-labelledby]': 'ariaLabelledby',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': '_control?.invalid || \"false\"',\n    '[attr.aria-owns]': '_optionIds',\n    '[class.md2-select-disabled]': 'disabled',\n    '[class.md2-select]': 'true',\n    '(keydown)': '_handleClosedKeydown($event)',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    transformPlaceholder,\n    transformPanel,\n    fadeInContent\n  ],\n  exportAs: 'md2Select',\n})\nexport class Md2Select implements AfterContentInit, OnDestroy, OnInit, ControlValueAccessor {\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** Subscriptions to option events. */\n  private _optionSubscription: Subscription;\n\n  /** Subscription to changes in the option list. */\n  private _changeSubscription: Subscription;\n\n  /** Subscription to tab events while overlay is focused. */\n  private _tabSubscription: Subscription;\n\n  /** Whether filling out the select is required in the form.  */\n  private _required: boolean = false;\n\n  /** Whether the select is disabled.  */\n  private _disabled: boolean = false;\n\n  /** The scroll position of the overlay panel, calculated to center the selected option. */\n  private _scrollTop = 0;\n\n  /** The placeholder displayed in the trigger of the select. */\n  private _placeholder: string;\n\n  /** Whether the component is in multiple selection mode. */\n  private _multiple: boolean = false;\n\n  /** Deals with the selection logic. */\n  _selectionModel: SelectionModel<Md2Option>;\n\n  /** The animation state of the placeholder. */\n  private _placeholderState = '';\n\n  /** Tab index for the element. */\n  private _tabIndex: number;\n\n  /** Theme color for the component. */\n  private _color: string;\n\n  /**\n   * The width of the trigger. Must be saved to set the min width of the overlay panel\n   * and the width of the selected value.\n   */\n  _triggerWidth: number;\n\n  /** Manages keyboard events for options in the panel. */\n  _keyManager: FocusKeyManager;\n\n  /**\n   * The width of the selected option's value. Must be set programmatically\n   * to ensure its overflow is clipped, as it's absolutely positioned.\n   */\n  _selectedValueWidth: number;\n\n  /** View -> model callback called when value changes */\n  _onChange: (value: any) => void = () => { };\n\n  /** View -> model callback called when select has been touched */\n  _onTouched = () => { };\n\n  /** The IDs of child options to be passed to the aria-owns attribute. */\n  _optionIds: string = '';\n\n  /** The value of the select panel's transform-origin property. */\n  _transformOrigin: string = 'top';\n\n  /** Whether the panel's animation is done. */\n  _panelDoneAnimating: boolean = false;\n\n  /**\n   * The y-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text.\n   * when the panel opens. Will change based on the y-position of the selected option.\n   */\n  _offsetY = 0;\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n\n  /** Trigger that opens the select. */\n  @ViewChild('trigger') trigger: ElementRef;\n\n  /** Overlay pane containing the options. */\n  @ViewChild(ConnectedOverlayDirective) overlayDir: ConnectedOverlayDirective;\n\n  /** All of the defined select options. */\n  @ContentChildren(Md2Option, { descendants: true }) options: QueryList<Md2Option>;\n\n  /** All of the defined groups of options. */\n  @ContentChildren(Md2Optgroup) optionGroups: QueryList<Md2Optgroup>;\n\n  /** Placeholder to be shown if no value has been selected. */\n  @Input()\n  get placeholder() { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n\n    // Must wait to record the trigger width to ensure placeholder width is included.\n    Promise.resolve(null).then(() => this._setTriggerWidth());\n  }\n\n  /** Whether the component is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether the component is required. */\n  @Input()\n  get required() { return this._required; }\n  set required(value: any) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    if (this._selectionModel) {\n      throw getMdSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n\n  /** Whether to float the placeholder text. */\n  @Input()\n  get floatPlaceholder(): Md2SelectFloatPlaceholderType { return this._floatPlaceholder; }\n  set floatPlaceholder(value: Md2SelectFloatPlaceholderType) {\n    this._floatPlaceholder = value || 'auto';\n  }\n  private _floatPlaceholder: Md2SelectFloatPlaceholderType = 'auto';\n\n  /** Tab index for the select element. */\n  @Input()\n  get tabIndex(): number { return this._disabled ? -1 : this._tabIndex; }\n  set tabIndex(value: number) {\n    if (typeof value !== 'undefined') {\n      this._tabIndex = value;\n    }\n  }\n\n  /** Aria label of the select. If not specified, the placeholder will be used as label. */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  @Input('aria-labelledby') ariaLabelledby: string = '';\n\n  /** Combined stream of all of the child options' change events. */\n  get optionSelectionChanges(): Observable<Md2OptionSelectionChange> {\n    return merge(...this.options.map(option => option.onSelectionChange));\n  }\n\n  /** Event emitted when the select has been opened. */\n  @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the select has been closed. */\n  @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the selected value has been changed by the user. */\n  @Output() change: EventEmitter<Md2SelectChange> = new EventEmitter<Md2SelectChange>();\n\n  constructor(private _element: ElementRef, private _renderer: Renderer2,\n    private _viewportRuler: ViewportRuler, private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() private _dir: Dir, @Self() @Optional() public _control: NgControl,\n    @Attribute('tabindex') tabIndex: string) {\n\n    if (this._control) {\n      this._control.valueAccessor = this;\n    }\n\n    this._tabIndex = parseInt(tabIndex) || 0;\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<Md2Option>(this.multiple, null, false);\n  }\n\n  ngAfterContentInit() {\n    this._initKeyManager();\n\n    this._changeSubscription = this.options.changes.pipe(startWith(null)).subscribe(() => {\n      this._resetOptions();\n\n      if (this._control) {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve(null).then(() => this._setSelectionByValue(this._control.value));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._dropSubscriptions();\n\n    if (this._changeSubscription) {\n      this._changeSubscription.unsubscribe();\n    }\n\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n  }\n\n  /** Toggles the overlay panel open or closed. */\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  /** Opens the overlay panel. */\n  open(): void {\n    if (this.disabled || !this.options.length) {\n      return;\n    }\n\n    if (!this._triggerWidth) {\n      this._setTriggerWidth();\n    }\n\n    this._calculateOverlayPosition();\n    this._placeholderState = this._floatPlaceholderState();\n    this._panelOpen = true;\n  }\n\n  /** Closes the overlay panel and focuses the host element. */\n  close(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n\n      if (this._selectionModel.isEmpty()) {\n        this._placeholderState = '';\n      }\n\n      this._focusHost();\n    }\n  }\n\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** Whether or not the overlay panel is open. */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n\n  /** The currently selected option. */\n  get selected(): Md2Option | Md2Option[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The value displayed in the trigger. */\n  get triggerValue(): string {\n    if (this._multiple) {\n      let selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /** Whether the element is in RTL mode. */\n  _isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n\n  /**\n   * Sets the width of the trigger element. This is necessary to match\n   * the overlay width to the trigger width.\n   */\n  private _setTriggerWidth(): void {\n    this._triggerWidth = this._getTriggerRect().width;\n  }\n\n  /** Handles the keyboard interactions of a closed select. */\n  _handleClosedKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      if (event.keyCode === ENTER || event.keyCode === SPACE) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n        this._handleArrowKey(event);\n      }\n    }\n  }\n\n  /** Handles keypresses inside the panel. */\n  _handlePanelKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === HOME || event.keyCode === END) {\n      event.preventDefault();\n      event.keyCode === HOME ? this._keyManager.setFirstItemActive() :\n        this._keyManager.setLastItemActive();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * When the panel element is finished transforming in (though not fading in), it\n   * emits an event and focuses an option if the panel is open.\n   */\n  _onPanelDone(): void {\n    if (this.panelOpen) {\n      this._focusCorrectOption();\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n      this._panelDoneAnimating = false;\n      this.overlayDir.offsetX = 0;\n    }\n  }\n\n  /**\n   * When the panel content is done fading in, the _panelDoneAnimating property is\n   * set so the proper class can be added to the panel.\n   */\n  _onFadeInDone(): void {\n    this._panelDoneAnimating = this.panelOpen;\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    if (!this.panelOpen) {\n      this._onTouched();\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this._calculateOverlayOffsetX();\n    this._setScrollTop();\n  }\n\n  /**\n   * Sets the scroll position of the scroll container. This must be called after\n   * the overlay pane is attached or the scroll container element will not yet be\n   * present in the DOM.\n   */\n  private _setScrollTop(): void {\n    const scrollContainer =\n      this.overlayDir.overlayRef.overlayElement.querySelector('.md2-select-panel');\n    scrollContainer.scrollTop = this._scrollTop;\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    const isArray = Array.isArray(value);\n\n    if (this.multiple && value && !isArray) {\n      throw getMdSelectNonArrayValueError();\n    }\n\n    this._clearSelection();\n\n    if (isArray) {\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectValue(value);\n    }\n\n    this._setValueWidth();\n\n    if (this._selectionModel.isEmpty()) {\n      this._placeholderState = '';\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): Md2Option {\n    let optionsArray = this.options.toArray();\n    let correspondingOption = optionsArray.find(option => option.value != null\n      && option.value != undefined && this.equals(option.value, value));\n\n    if (correspondingOption) {\n      correspondingOption.select();\n      this._selectionModel.select(correspondingOption);\n      this._keyManager.setActiveItem(optionsArray.indexOf(correspondingOption));\n    }\n\n    return correspondingOption;\n  }\n\n  /**\n   * Compare two vars or objects\n   * @param o1 compare first object\n   * @param o2 compare second object\n   * @return boolean comparation result\n   */\n  private equals(o1: any, o2: any) {\n    if (o1 === o2) { return true; }\n    if (o1 === null || o2 === null) { return false; }\n    if (o1 !== o1 && o2 !== o2) { return true; }\n    let t1 = typeof o1, t2 = typeof o2, key: any, keySet: any;\n    if (t1 === t2 && t1 === 'object') {\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (!this.equals(o1[key], o2[key])) { return false; }\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) && key.charAt(0) !== '$' && o2[key]) { return false; }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Clears the select trigger and deselects every option in the list.\n   * @param skip Option that should not be deselected.\n   */\n  private _clearSelection(skip?: Md2Option): void {\n    this._selectionModel.clear();\n    this.options.forEach(option => {\n      if (option !== skip) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _getTriggerRect(): ClientRect {\n    return this.trigger.nativeElement.getBoundingClientRect();\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new FocusKeyManager(this.options);\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close());\n  }\n\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  private _resetOptions(): void {\n    this._dropSubscriptions();\n    this._listenToOptions();\n    this._setOptionIds();\n    this._setOptionMultiple();\n  }\n\n  /** Listens to user-generated selection events on each option. */\n  private _listenToOptions(): void {\n    this._optionSubscription = this.optionSelectionChanges\n      .pipe(filter(event => event.isUserInput))\n      .subscribe(event => {\n        this._onSelect(event.source);\n        this._setValueWidth();\n\n        if (!this.multiple) {\n          this.close();\n        }\n      });\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: Md2Option): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (this.multiple) {\n      this._selectionModel.toggle(option);\n      wasSelected ? option.deselect() : option.select();\n      this._sortValues();\n    } else {\n      this._clearSelection(option.value == null ? null : option);\n\n      if (option.value == null) {\n        this._propagateChanges(option.value);\n      } else {\n        this._selectionModel.select(option);\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.options.forEach(option => {\n        if (option.selected) {\n          this._selectionModel.select(option);\n        }\n      });\n    }\n  }\n\n  /** Unsubscribes from all option subscriptions. */\n  private _dropSubscriptions(): void {\n    if (this._optionSubscription) {\n      this._optionSubscription.unsubscribe();\n      this._optionSubscription = null;\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n\n    this._onChange(valueToEmit);\n    this.change.emit(new Md2SelectChange(this, valueToEmit));\n  }\n\n  /** Records option IDs to pass to the aria-owns property. */\n  private _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n\n  /**\n   * Sets the `multiple` property on each option. The promise is necessary\n   * in order to avoid Angular errors when modifying the property after init.\n   */\n  private _setOptionMultiple() {\n    if (this.multiple) {\n      Promise.resolve(null).then(() => {\n        this.options.forEach(option => option.multiple = this.multiple);\n      });\n    }\n  }\n\n  /**\n   * Must set the width of the selected option's value programmatically\n   * because it is absolutely positioned and otherwise will not clip\n   * overflow. The selection arrow is 9px wide, add 4px of padding = 13\n   */\n  private _setValueWidth() {\n    this._selectedValueWidth = this._triggerWidth - 13;\n  }\n\n  /**\n   * Focuses the selected item. If no option is selected, it will focus\n   * the first item instead.\n   */\n  private _focusCorrectOption(): void {\n    if (this._selectionModel.isEmpty()) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._keyManager.setActiveItem(this._getOptionIndex(this._selectionModel.selected[0]));\n    }\n  }\n\n  /** Focuses the host element when the panel closes. */\n  private _focusHost(): void {\n    this._element.nativeElement.focus();\n  }\n\n  /** Gets the index of the provided option in the option list. */\n  private _getOptionIndex(option: Md2Option): number {\n    return this.options.reduce((result: number, current: Md2Option, index: number) => {\n      return result === undefined ? (option === current ? index : undefined) : result;\n    }, undefined);\n  }\n\n  /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n  private _calculateOverlayPosition(): void {\n    const items = this._getItemCount();\n    const panelHeight = Math.min(items * SELECT_ITEM_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const scrollContainerHeight = items * SELECT_ITEM_HEIGHT;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const maxScroll = scrollContainerHeight - panelHeight;\n\n    if (this._selectionModel.hasValue()) {\n      let selectedIndex = this._getOptionIndex(this._selectionModel.selected[0]);\n\n      selectedIndex += this._getLabelCountBeforeOption(selectedIndex);\n\n      // We must maintain a scroll buffer so the selected option will be scrolled to the\n      // center of the overlay panel rather than the top.\n      const scrollBuffer = panelHeight / 2;\n      this._scrollTop = this._calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll);\n      this._offsetY = this._calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll);\n    } else {\n      // If no option is selected, the panel centers on the first option. In this case,\n      // we must only adjust for the height difference between the option element\n      // and the trigger element, then multiply it by -1 to ensure the panel moves\n      // in the correct direction up the page.\n      this._offsetY = (SELECT_ITEM_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1;\n    }\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n\n  /**\n   * Calculates the scroll position of the select's overlay panel.\n   *\n   * Attempts to center the selected option in the panel. If the option is\n   * too high or too low in the panel to be scrolled to the center, it clamps the\n   * scroll position to the min or max scroll positions respectively.\n   */\n  _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n    maxScroll: number): number {\n    const optionOffsetFromScrollTop = SELECT_ITEM_HEIGHT * selectedIndex;\n    const halfOptionHeight = SELECT_ITEM_HEIGHT / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return clampValue(0, optimalScrollPosition, maxScroll);\n  }\n\n  /**\n   * Figures out the appropriate animation state for the placeholder.\n   */\n  _getPlaceholderAnimationState(): string {\n    if (this.floatPlaceholder === 'never') {\n      return '';\n    }\n\n    if (this.floatPlaceholder === 'always') {\n      return this._floatPlaceholderState();\n    }\n\n    return this._placeholderState;\n  }\n\n  /**\n   * Determines the CSS `opacity` of the placeholder element.\n   */\n  _getPlaceholderOpacity(): string {\n    return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ?\n      '1' : '0';\n  }\n\n  /** Returns the aria-label of the select component. */\n  get _ariaLabel(): string {\n    // If an ariaLabelledby value has been set, the select should not overwrite the\n    // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n    return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n  }\n\n  /**\n   * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text when\n   * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n   * can't be calculated until the panel has been attached, because we need to know the\n   * content width in order to constrain the panel within the viewport.\n   */\n  private _calculateOverlayOffsetX(): void {\n    const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const viewportRect = this._viewportRuler.getViewportRect();\n    const isRtl = this._isRtl();\n    let offsetX: number;\n\n    // Adjust the offset, depending on the option padding.\n    if (this.multiple) {\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n    } else {\n      let selected = this._selectionModel.selected[0];\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n    }\n\n    // Invert the offset in LTR.\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    // Determine how much the select overflows on each side.\n    const leftOverflow = 0 - (overlayRect.left + offsetX\n      - (isRtl ? SELECT_PANEL_PADDING_X * 2 : 0));\n    const rightOverflow = overlayRect.right + offsetX - viewportRect.width\n      + (isRtl ? 0 : SELECT_PANEL_PADDING_X * 2);\n\n    // If the element overflows on either side, reduce the offset to allow it to fit.\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors.\n    this.overlayDir.offsetX = offsetX;\n    this.overlayDir.overlayRef.updatePosition();\n  }\n\n  /**\n   * Calculates the y-offset of the select's overlay panel in relation to the\n   * top start corner of the trigger. It has to be adjusted in order for the\n   * selected option to be aligned over the trigger when the panel opens.\n   */\n  private _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n    maxScroll: number): number {\n    let optionOffsetFromPanelTop: number;\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * SELECT_ITEM_HEIGHT;\n    } else if (this._scrollTop === maxScroll) {\n      const firstDisplayedIndex = this._getItemCount() - SELECT_MAX_OPTIONS_DISPLAYED;\n      const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop =\n        selectedDisplayIndex * SELECT_ITEM_HEIGHT + SELECT_PANEL_PADDING_Y;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - SELECT_ITEM_HEIGHT / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height\n    // difference, multiplied by -1 to ensure that the overlay moves in the correct\n    // direction up the page.\n    return optionOffsetFromPanelTop * -1 - SELECT_ITEM_HEIGHT_ADJUSTMENT;\n  }\n\n  /**\n   * Checks that the attempted overlay position will fit within the viewport.\n   * If it will not fit, tries to adjust the scroll position and the associated\n   * y-offset so the panel can open fully on-screen. If it still won't fit,\n   * sets the offset back to 0 to allow the fallback position to take over.\n   */\n  private _checkOverlayWithinViewport(maxScroll: number): void {\n    const viewportRect = this._viewportRuler.getViewportRect();\n    const triggerRect = this._getTriggerRect();\n\n    const topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const bottomSpaceAvailable =\n      viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const panelHeightTop = Math.abs(this._offsetY);\n    const totalPanelHeight =\n      Math.min(this._getItemCount() * SELECT_ITEM_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n      this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n\n  /** Adjusts the overlay panel up to fit in the viewport. */\n  private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    const distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n\n  /** Adjusts the overlay panel down to fit in the viewport. */\n  private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n    maxScroll: number) {\n    const distanceAboveViewport = panelHeightTop - topSpaceAvailable;\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n\n  /** Sets the transform origin point based on the selected option. */\n  private _getOriginBasedOnOption(): string {\n    const originY =\n      Math.abs(this._offsetY) - SELECT_ITEM_HEIGHT_ADJUSTMENT + SELECT_ITEM_HEIGHT / 2;\n    return `50% ${originY}px 0px`;\n  }\n\n  /** Figures out the floating placeholder state value. */\n  private _floatPlaceholderState(): string {\n    return this._isRtl() ? 'floating-rtl' : 'floating-ltr';\n  }\n\n  /** Handles the user pressing the arrow keys on a closed select.  */\n  private _handleArrowKey(event: KeyboardEvent): void {\n    if (this._multiple) {\n      event.preventDefault();\n      this.open();\n    } else {\n      const prevActiveItem = this._keyManager.activeItem;\n\n      // Cycle though the select options even when the select is closed,\n      // matching the behavior of the native select element.\n      // TODO(crisbeto): native selects also cycle through the options with left/right arrows,\n      // however the key manager only supports up/down at the moment.\n      this._keyManager.onKeydown(event);\n\n      const currentActiveItem = this._keyManager.activeItem as Md2Option;\n\n      if (currentActiveItem !== prevActiveItem) {\n        this._clearSelection();\n        this._setSelectionByValue(currentActiveItem.value);\n        this._propagateChanges();\n      }\n    }\n  }\n\n  /** Calculates the amount of items in the select. This includes options and group labels. */\n  private _getItemCount(): number {\n    return this.options.length + this.optionGroups.length;\n  }\n\n  /**\n   * Calculates the amount of option group labels that precede the specified option.\n   * Useful when positioning the panel, because the labels will offset the index of the\n   * currently-selected option.\n   */\n  private _getLabelCountBeforeOption(optionIndex: number): number {\n    if (this.optionGroups.length) {\n      let options = this.options.toArray();\n      let groups = this.optionGroups.toArray();\n      let groupCounter = 0;\n\n      for (let i = 0; i < optionIndex + 1; i++) {\n        if (options[i].group && options[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\n}\n\n/** Clamps a value n between min and max values. */\nfunction clampValue(min: number, n: number, max: number): number {\n  return Math.min(Math.max(min, n), max);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a s\n * elect's `multiple` option after initialization.\n * @docs-private\n */\nexport function getMdSelectDynamicMultipleError(): Error {\n  return new Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMdSelectNonArrayValueError(): Error {\n  return new Error('Cannot assign truthy non-array value to select in `multiple` mode.');\n}\n","import { Directive } from '@angular/core';\n\n\n/**\n * Fixed header that will be rendered above a select's options.\n */\n@Directive({\n  selector: 'md2-select-header',\n  host: {\n    'class': 'md2-select-header',\n  }\n})\nexport class Md2SelectHeader { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Md2Select } from './select';\nimport { Md2SelectHeader } from './select-header';\nimport { Md2OptionModule } from './option';\nimport { MdCommonModule, OverlayModule } from '../core/index';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    Md2OptionModule,\n    MdCommonModule,\n  ],\n  exports: [Md2Select, Md2SelectHeader, Md2OptionModule, MdCommonModule],\n  declarations: [Md2Select, Md2SelectHeader],\n})\nexport class Md2SelectModule { }\n\n\nexport * from './select';\nexport * from './select-header';\nexport * from './option';\nexport * from './optgroup';\nexport { fadeInContent, transformPanel, transformPlaceholder } from './select-animations';\n","import {\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n  Optional,\n  DoCheck,\n  IterableDiffers,\n  IterableDiffer,\n  ViewEncapsulation,\n  NgModule,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Md2SelectModule } from '../select/index';\n\nexport class Md2PaginationChange {\n  source: Md2Pagination;\n  activePage: number;\n}\n\nexport interface SortEvent {\n  sortBy: string | string[];\n  sortOrder: string;\n}\n\nexport interface PageEvent {\n  activePage: number;\n  rowsPerPage: number;\n  dataLength: number;\n}\n\nexport interface DataEvent {\n  length: number;\n}\n\n@Directive({\n  selector: 'table[md2Data]',\n  exportAs: 'md2DataTable'\n})\nexport class Md2DataTable implements DoCheck {\n\n  private diff: IterableDiffer<any>;\n  private isDataChanged = false;\n  private _data: Array<any> = [];\n  private _activePage: number = 1;\n  private _rowsPerPage: number = 1000;\n  private _sortBy: string | Array<string> = '';\n  private _sortOrder: string = 'asc';\n\n  data: Array<any>;\n\n  @Input()\n  get md2Data() { return this._data; }\n  set md2Data(value: Array<any>) {\n    if (this._data !== value) {\n      this._data = value || [];\n      this.recalculatePage();\n      this.isDataChanged = true;\n    }\n  }\n\n  @Input()\n  get activePage() { return this._activePage; }\n  set activePage(value: number) {\n    if (this._activePage !== value) {\n      this._activePage = value;\n    }\n  }\n\n  @Input()\n  get rowsPerPage() { return this._rowsPerPage; }\n  set rowsPerPage(value: number) {\n    if (this._rowsPerPage !== value) {\n      this._rowsPerPage = value;\n      this.setPage(this.activePage, value);\n      this.isDataChanged = true;\n    }\n  }\n\n  @Input()\n  get sortBy() { return this._sortBy; }\n  set sortBy(value: string | Array<string>) {\n    if (this._sortBy !== value) {\n      this._sortBy = value;\n      if (value) {\n        this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });\n      }\n      this.isDataChanged = true;\n    }\n  }\n\n  @Input()\n  get sortOrder() { return this._sortOrder; }\n  set sortOrder(value: string) {\n    if (!(value === 'asc' || value === 'desc')) {\n      console.warn('sortOrder value must be one of [\"asc\", \"desc\"], but is:', value);\n      value = 'asc';\n    }\n    if (this._sortOrder !== value) {\n      this._sortOrder = value;\n      this.isDataChanged = true;\n    }\n  }\n\n  @Output() activePageChange = new EventEmitter<number>();\n  @Output() rowsPerPageChange = new EventEmitter<number>();\n  @Output() sortByChange = new EventEmitter<string | string[]>();\n  @Output() sortOrderChange = new EventEmitter<string>();\n\n  onSortChange = new EventEmitter<SortEvent>();\n  onPageChange = new EventEmitter<PageEvent>();\n\n  constructor(private differs: IterableDiffers) {\n    this.diff = differs.find([]).create(null);\n  }\n\n  ngDoCheck(): any {\n    let changes = this.diff.diff(this.md2Data);\n    if (changes) {\n      this.recalculatePage();\n      this.isDataChanged = true;\n    }\n    if (this.isDataChanged) {\n      this.fillData();\n      this.diff.diff(this.md2Data);\n      this.isDataChanged = false;\n    }\n  }\n\n  getSort(): SortEvent {\n    return { sortBy: this.sortBy, sortOrder: this.sortOrder };\n  }\n\n  setSort(sortBy: string | string[], sortOrder: string) {\n    if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\n      this.sortBy = sortBy;\n      this.sortOrder = sortOrder;\n      this.isDataChanged = true;\n      this.onSortChange.next({ sortBy: sortBy, sortOrder: sortOrder });\n      this.sortByChange.emit(this.sortBy);\n      this.sortOrderChange.emit(this.sortOrder);\n    }\n  }\n\n  getPage(): PageEvent {\n    return {\n      activePage: this.activePage,\n      rowsPerPage: this.rowsPerPage,\n      dataLength: this.md2Data.length\n    };\n  }\n\n  setPage(activePage: number, rowsPerPage: number): void {\n    if (this.rowsPerPage !== rowsPerPage || this.activePage !== activePage) {\n      this.activePage = this.activePage !== activePage ?\n        activePage : this.calculateNewActivePage(this.rowsPerPage, rowsPerPage);\n      if (this.rowsPerPage !== rowsPerPage) {\n        this._rowsPerPage = rowsPerPage;\n        this.rowsPerPageChange.emit(this.rowsPerPage);\n      }\n      this.isDataChanged = true;\n      this.onPageChange.emit({\n        activePage: this.activePage,\n        rowsPerPage: this.rowsPerPage,\n        dataLength: this.md2Data ? this.md2Data.length : 0\n      });\n      this.activePageChange.emit(this.activePage);\n    }\n  }\n\n  private calculateNewActivePage(previousRowsPerPage: number, currentRowsPerPage: number): number {\n    let firstRowOnPage = (this.activePage - 1) * previousRowsPerPage + 1;\n    let newActivePage = Math.ceil(firstRowOnPage / currentRowsPerPage);\n    return newActivePage;\n  }\n\n  private recalculatePage() {\n    let lastPage = Math.ceil(this.md2Data.length / this.rowsPerPage);\n    if (lastPage < this.activePage) {\n      this._activePage = lastPage || 1;\n      setTimeout(() => {\n        this.activePageChange.emit(this.activePage);\n      }, 10);\n    } else { }\n\n    this.onPageChange.emit({\n      activePage: this.activePage,\n      rowsPerPage: this.rowsPerPage,\n      dataLength: this.md2Data.length\n    });\n  }\n\n  private fillData() {\n    let offset = (this.activePage - 1) * this.rowsPerPage;\n    let data = this.md2Data;\n    let sortInt = this.sortOrder === 'desc' ? -1 : 1;\n    if (this.sortBy) {\n      data = data.sort((a: any, b: any) => {\n        let x = this.caseInsensitiveIteratee(a);\n        let y = this.caseInsensitiveIteratee(b);\n        return ((x > y) ? 1 : (y > x) ? -1 : 0) * sortInt;\n      });\n    }\n    this.data = data.slice(offset, offset + this.rowsPerPage);\n  }\n\n  private caseInsensitiveIteratee(value: any) {\n    if (typeof this.sortBy === 'string' || this.sortBy instanceof String) {\n      for (let sortByProperty of this.sortBy.split('.')) {\n        value = value[sortByProperty];\n      }\n    } else {\n      value = value[this.sortBy + ''];\n    }\n    if (value && typeof value === 'string' || value instanceof String) {\n      return value.toLowerCase();\n    }\n    return value;\n  }\n\n}\n\n@Component({\n  selector: '[md2SortBy]',\n  templateUrl: 'sort.html',\n  styleUrls: ['data-table.scss'],\n  host: {\n    '[class.md2-sort-active]': '_isAsc || _isDesc',\n    '(click)': '_sort()'\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2DataTableSortBy implements OnInit {\n\n  @Input() md2SortBy: string;\n\n  _isAsc: boolean = false;\n  _isDesc: boolean = false;\n\n  constructor(private _md2Table: Md2DataTable) {\n  }\n\n  ngOnInit() {\n    this._md2Table.onSortChange.subscribe((event: SortEvent) => {\n      this._isAsc = (event.sortBy === this.md2SortBy && event.sortOrder === 'asc');\n      this._isDesc = (event.sortBy === this.md2SortBy && event.sortOrder === 'desc');\n    });\n  }\n\n  _sort() {\n    if (this._isAsc) {\n      this._md2Table.setSort(this.md2SortBy, 'desc');\n    } else {\n      this._md2Table.setSort(this.md2SortBy, 'asc');\n    }\n  }\n\n}\n\n@Component({\n  selector: 'md2-pagination',\n  templateUrl: 'pagination.html',\n  styleUrls: ['data-table.scss'],\n  exportAs: 'md2Pagination',\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Pagination {\n\n  _activePage: number = 1;\n\n  @Input() rowsPerPageSet: any = [];\n  @Input() md2Table: Md2DataTable;\n  @Input() paginationLabel: string = 'Rows per page:';\n\n  _rowsPerPage: number;\n  _dataLength: number = 0;\n  _lastPage: number;\n\n  constructor( @Optional() private _dataTable: Md2DataTable) { }\n\n  ngDoCheck() {\n    this.md2Table = this.md2Table || this._dataTable;\n    this.onPageChangeSubscriber(this.md2Table.getPage());\n    this.md2Table.onPageChange.subscribe(this.onPageChangeSubscriber);\n  }\n\n  _setPage(pageNumber: number): void {\n    this.md2Table.setPage(pageNumber, this._rowsPerPage);\n  }\n\n  _setRows(event: any): void {\n    this.md2Table.setPage(this._activePage, parseInt(event.value));\n  }\n\n  private onPageChangeSubscriber = (event: PageEvent) => {\n    this._activePage = event.activePage;\n    this._rowsPerPage = event.rowsPerPage;\n    this._dataLength = event.dataLength;\n    this._lastPage = Math.ceil(this._dataLength / this._rowsPerPage);\n  }\n\n}\n\nexport const MD2_DATA_TABLE_DIRECTIVES: any[] = [\n  Md2DataTable,\n  Md2DataTableSortBy,\n  Md2Pagination\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, Md2SelectModule],\n  exports: MD2_DATA_TABLE_DIRECTIVES,\n  declarations: MD2_DATA_TABLE_DIRECTIVES,\n})\nexport class Md2DataTableModule { }\n","import { Injectable } from '@angular/core';\n\nconst SUPPORTS_INTL_API = false; // typeof Intl != 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n/** The default hour names to use if Intl API is not available. */\nconst DEFAULT_HOUR_NAMES = range(24, i => String(i));\n\n/** The default minute names to use if Intl API is not available. */\nconst DEFAULT_MINUTE_NAMES = range(60, i => String(i));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\nexport interface Months {\n  long: Array<string>;\n  short: Array<string>;\n  narrow: Array<string>;\n}\n\nexport interface DaysOfWeek {\n  long: Array<string>;\n  short: Array<string>;\n  narrow: Array<string>;\n}\n\n@Injectable()\nexport class DateLocale {\n\n  locale: any;\n  months: Months;\n  daysOfWeek: DaysOfWeek;\n  dates: Array<string>;\n  hours: Array<string>;\n  minutes: Array<string>;\n  firstDayOfWeek: number = 0;\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (this.months) { return this.months[style]; }\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, { month: style });\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (this.dates) { return this.dates; }\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric' });\n      return range(31, i => this._stripDirectionalityCharacters(\n        dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getHourNames(): string[] {\n    if (this.hours) { return this.hours; }\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, { hour: 'numeric' });\n      return range(24, i => this._stripDirectionalityCharacters(\n        dtf.format(new Date(2017, 0, 0, i))));\n    }\n    return DEFAULT_HOUR_NAMES;\n  }\n\n  getMinuteNames(): string[] {\n    if (this.minutes) { return this.minutes; }\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, { minute: 'numeric' });\n      return range(60, i => this._stripDirectionalityCharacters(\n        dtf.format(new Date(2017, 0, 0, 0, i))));\n    }\n    return DEFAULT_MINUTE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (this.daysOfWeek) { return this.daysOfWeek[style]; }\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, { weekday: style });\n      return range(7, i => this._stripDirectionalityCharacters(\n        dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric' });\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(date.getFullYear());\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return this.firstDayOfWeek;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  getDateLabel(d: Date): string {\n    let day: string = this.getDayOfWeekNames('short')[d.getDay()];\n    let date: string = this.getDateNames()[d.getDate() - 1];\n    let month: string = this.getMonthNames('short')[d.getMonth()];\n    return `${day}, ${month} ${date}`;\n  }\n\n  getHoursLabel(d: Date): string { return `${this.getHourNames()[d.getHours()]}`; }\n\n  getMinutesLabel(d: Date): string { return `${this.getMinuteNames()[d.getMinutes()]}`; }\n\n  getMonthLabel(d: Date): string {\n    return `${this.getMonthNames('long')[d.getMonth()]} ${this.getYearName(d)}`;\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param s The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(s: string) {\n    return s.replace(/[\\u200e\\u200f]/g, '');\n  }\n}\n","import { DateLocale } from './date-locale';\n\nexport class DateUtil {\n\n  _locale: DateLocale = new DateLocale();\n\n  parseDateMap: any = {\n    'y': 0,      // placeholder -> ctorIndex\n    'Y': [0, -2000],\n    'M': [1, 1], // placeholder -> [ctorIndex, offset|value array]\n    'n': [1, this._locale.getMonthNames('short')],\n    'N': [1, this._locale.getMonthNames('long')],\n    'd': 2,\n    'm': 4,\n    'H': 3,\n    'h': 3,\n    'K': [3, 1],\n    'k': [3, 1],\n    's': 5,\n    'S': 6,\n    'a': [3, ['am', 'pm']],\n    'A': [3, ['AM', 'PM']]\n  };\n\n  replace(s: string, regexp: any, sub?: string) {\n    return (s != null ? '' + s : '').replace(regexp, sub != null ? sub : '');\n  }\n\n  startsWith(base: any, start: any) {\n    return start != null && base.substr(0, start.length) == start;\n  }\n\n  isType(s: any, o: any) {\n    return typeof s == o;\n  }\n\n  isFunction(f: any) {\n    return this.isType(f, 'function');\n  }\n\n  isList(v: any) {\n    return !!v && v.length != null && !this.isString(v) && !this.isNode(v) && !this.isFunction(v);\n  }\n\n  isString(s: any) {\n    return this.isType(s, 'string');\n  }\n\n  isObject(f: any) {\n    return !!f && this.isType(f, 'object');\n  }\n\n  isNode(n: any) {\n    return n && n['nodeType'];\n  }\n\n  isNumber(n: any) {\n    return this.isType(n, 'number');\n  }\n\n  getFindFunc(findFunc: any) {\n    return this.isFunction(findFunc) ? findFunc : (obj: any, index: any) => {\n      if (findFunc === obj) {\n        return index;\n      }\n    };\n  }\n\n  getFindIndex(list: any, index: any, defaultIndex: any) {\n    return index == null ? defaultIndex :\n      index < 0 ? Math.max(list.length + index, 0) : Math.min(list.length, index);\n  }\n\n  find(list: any, findFunc: any, startIndex?: any, endIndex?: any) {\n    let f = this.getFindFunc(findFunc);\n    let e = this.getFindIndex(list, endIndex, list.length);\n    let r: any;\n    for (let i = this.getFindIndex(list, startIndex, 0); i < e; i++) {\n      if ((r = f.call(list, list[i], i)) != null) {\n        return r;\n      }\n    }\n  }\n\n  parseDate(date: string, fmt: string) {\n    let indexMap: any = {}; // contains reGroupPosition -> typeLetter or [typeLetter, value array]\n    let reIndex = 1;\n    let timezoneOffsetMatch: any;\n    let timezoneIndex: any;\n    let match: any;\n\n    let format = this.replace(fmt, /^\\?/);\n    if (format != fmt && !this.replace(date, /^\\s+|\\s+$/g)) {\n      return null;\n    }\n\n    if (match = /^\\[([+-])(\\d\\d)(\\d\\d)\\]\\s*(.*)/.exec(format)) {\n      timezoneOffsetMatch = match;\n      format = match[4];\n    }\n\n    let parser = new RegExp(format.replace(/(.)(\\1*)(?:\\[([^\\]]*)\\])?/g,\n      (wholeMatch, placeholderChar, placeholderDigits, param) => {\n        if (/[dmhkyhs]/i.test(placeholderChar)) {\n          indexMap[reIndex++] = placeholderChar;\n          let plen = placeholderDigits.length + 1;\n          return '(\\\\d' + (plen < 2 ? '+' : ('{1,' + plen + '}')) + ')';\n        } else if (placeholderChar == 'z') {\n          timezoneIndex = reIndex;\n          reIndex += 3;\n          return '([+-])(\\\\d\\\\d)(\\\\d\\\\d)';\n        } else if (/[NnaA]/.test(placeholderChar)) {\n          indexMap[reIndex++] = [placeholderChar, param && param.split(',')];\n          return '([a-zA-Z\\\\u0080-\\\\u1fff]+)';\n        } else if (/w/i.test(placeholderChar)) {\n          return '[a-zA-Z\\\\u0080-\\\\u1fff]+';\n        } else if (/\\s/.test(placeholderChar)) {\n          return '\\\\s+';\n        } else {\n          return this.replace(wholeMatch, /[\\\\\\[\\]\\/{}()*+?.$|^-]/g, '\\\\$&');\n        }\n      }));\n\n    if (!(match = parser.exec(date))) {\n      return undefined;\n    }\n\n    let ctorArgs = [0, 0, 0, 0, 0, 0, 0];\n    for (let i = 1; i < reIndex; i++) {\n      let matchVal = match[i];\n      let indexEntry: any = indexMap[i];\n      if (this.isList(indexEntry)) { // for a, n or N\n        let placeholderChar = indexEntry[0];\n        let mapEntry = this.parseDateMap[placeholderChar];\n        let ctorIndex = mapEntry[0];\n        let valList = indexEntry[1] || mapEntry[1];\n        let listValue = this.find(valList,\n          (v: any, index: any) => {\n            if (this.startsWith(matchVal.toLowerCase(), v.toLowerCase())) {\n              return index;\n            }\n          });\n        if (listValue == null) {\n          return undefined;\n        }\n        if (placeholderChar == 'a' || placeholderChar == 'A') {\n          ctorArgs[ctorIndex] += listValue * 12;\n        } else {\n          ctorArgs[ctorIndex] = listValue;\n        }\n      } else if (indexEntry) { // for numeric values (yHmMs)\n        let value = parseFloat(matchVal);\n        let mapEntry = this.parseDateMap[indexEntry];\n        if (this.isList(mapEntry)) {\n          ctorArgs[mapEntry[0]] += value - mapEntry[1];\n        } else {\n          ctorArgs[mapEntry] += value;\n        }\n      }\n    }\n    let d = new Date(ctorArgs[0], ctorArgs[1], ctorArgs[2], ctorArgs[3], ctorArgs[4],\n      ctorArgs[5], ctorArgs[6]);\n    return d;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    let timestamp = typeof value == 'number' ? value : Date.parse(value);\n    return isNaN(timestamp) ? null : new Date(timestamp);\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getHours(date: Date): number {\n    return date.getHours();\n  }\n\n  getMinutes(date: Date): number {\n    return date.getMinutes();\n  }\n\n  getSeconds(date: Date): number {\n    return date.getSeconds();\n  }\n\n  createDate(year: number, month: number, date: number,\n    hours: number, minutes: number, seconds: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11 || date < 1) {\n      return null;\n    }\n\n    let result = this._createDateWithOverflow(year, month, date, hours, minutes, seconds);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to\n    // overflow.\n    if (result.getMonth() != month) {\n      return null;\n    }\n\n    return result;\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date),\n      this.getHours(date), this.getMinutes(date), this.getSeconds(date));\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date) + 1, 0, 0, 0, 0));\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date) + months, this.getDate(date), this.getHours(date),\n      this.getMinutes(date), this.getSeconds(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0,\n        this.getHours(newDate), this.getMinutes(newDate), this.getSeconds(newDate));\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date), this.getDate(date) + days,\n      this.getHours(date), this.getMinutes(date), this.getSeconds(date));\n  }\n\n  addCalendarHours(date: Date, hours: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date), this.getDate(date),\n      this.getHours(date) + hours, this.getMinutes(date), this.getSeconds(date));\n  }\n\n  addCalendarMinutes(date: Date, minutes: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date), this.getDate(date),\n      this.getHours(date), this.getMinutes(date) + minutes, this.getSeconds(date));\n  }\n  getISODateString(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number,\n    hours: number, minutes: number, seconds: number) {\n    let result = new Date(year, month, date, hours, minutes, seconds);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  compareDate(first: Date, second: Date): number {\n    return this.getYear(first) - this.getYear(second) ||\n      this.getMonth(first) - this.getMonth(second) ||\n      this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Gets the first day of the month for the given date's month.\n   */\n  getFirstDateOfWeek(date: Date, firstDayOfWeek: number) {\n    let day: number = date.getDate() - ((7 + date.getDay() - firstDayOfWeek) % 7);\n    return new Date(date.getFullYear(), date.getMonth(), day, date.getHours(), date.getMinutes());\n  }\n\n  /**\n   * Gets the first day of the month for the given date's month.\n   */\n  getFirstDateOfMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  /**\n   * Gets the number of days in the month for the given date's month.\n   */\n  getNumberOfDaysInMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  }\n\n  /**\n   * Get an arbitrary date in the month after the given date's month.\n   */\n  getDateInNextMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1,\n      date.getHours(), date.getMinutes());\n  }\n\n  /**\n   * Get an arbitrary date in the month before the given date's month.\n   */\n  getDateInPreviousMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth() - 1, 1,\n      date.getHours(), date.getMinutes());\n  }\n\n  /**\n   * Gets whether two dates have the same year.\n   */\n  isSameYear(d1: Date, d2: Date) {\n    return d1 && d2 && d1.getFullYear() === d2.getFullYear();\n  }\n\n  /**\n   * Gets whether two dates have the same month and year.\n   */\n  isSameMonthAndYear(d1: Date, d2: Date) {\n    return d1 && d2 && d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth();\n  }\n\n  /**\n   * Gets whether two dates are the same day (not not necesarily the same time).\n   */\n  isSameDay(d1: Date, d2: Date) {\n    return d1 && d2 && d1.getDate() == d2.getDate() && this.isSameMonthAndYear(d1, d2);\n  }\n\n  /**\n   * Gets whether two dates are the same hours.\n   */\n  isSameHour(d1: Date, d2: Date) {\n    return d1 && d2 && d1.getHours() == d2.getHours() && this.isSameDay(d1, d2);\n  }\n\n  /**\n   * Gets whether two dates are the same minutes.\n   */\n  isSameMinute(d1: Date, d2: Date) {\n    return d1 && d2 && d1.getMinutes() == d2.getMinutes() && this.isSameHour(d1, d2);\n  }\n\n  /**\n   * Gets whether a date is in the month immediately after some date.\n   * @param startDate The date from which to compare.\n   * @param endDate The date to check.\n   * @returns \n   */\n  isInNextMonth(startDate: Date, endDate: Date) {\n    let nextMonth = this.getDateInNextMonth(startDate);\n    return this.isSameMonthAndYear(nextMonth, endDate);\n  }\n\n  /**\n   * Gets whether a date is in the month immediately before some date.\n   * @param startDate The date from which to compare.\n   * @param endDate The date to check.\n   * @returns \n   */\n  isInPreviousMonth(startDate: Date, endDate: Date) {\n    let previousMonth = this.getDateInPreviousMonth(startDate);\n    return this.isSameMonthAndYear(endDate, previousMonth);\n  }\n\n  /**\n   * Gets the midpoint between two dates.\n   * @param d1\n   * @param d2\n   * @returns \n   */\n  getDateMidpoint(d1: Date, d2: Date) {\n    return this.createDateAtMidnight((d1.getTime() + d2.getTime()) / 2);\n  }\n\n  /**\n   * Gets the week of the month that a given date occurs in.\n   * @param date\n   * @returns Index of the week of the month (zero-based).\n   */\n  getWeekOfMonth(date: Date) {\n    let firstDayOfMonth = this.getFirstDateOfMonth(date);\n    return Math.floor((firstDayOfMonth.getDay() + date.getDate() - 1) / 7);\n  }\n\n  /**\n   * Gets the week of the year that a given date occurs in.\n   * @param date\n   * @returns Index of the week according to ISO-8601.\n   */\n  getWeekOfYear(date: Date) {\n    // Copy date so don't modify original\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n    // Get first day of year\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    // Calculate full weeks to nearest Thursday and return weekNo\n    return Math.ceil(( ( (+d - +yearStart) / 86400000) + 1) / 7);\n  }\n\n  /**\n   * Gets a new date incremented by the given number of minutes. Number of minutes can be negative.\n   * @param date\n   * @param numberOfMinutes\n   * @returns \n   */\n  incrementMinutes(date: Date, numberOfMinutes: number) {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(),\n      date.getHours(), date.getMinutes() + numberOfMinutes);\n  }\n\n  /**\n   * Gets a new date incremented by the given number of hours. Number of hours can be negative.\n   * @param date\n   * @param numberOfHours\n   * @returns \n   */\n  incrementHours(date: Date, numberOfHours: number) {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(),\n      date.getHours() + numberOfHours, date.getMinutes());\n  }\n\n  /**\n   * Gets a new date incremented by the given number of days. Number of days can be negative.\n   * @param date\n   * @param numberOfDays\n   * @returns \n   */\n  incrementDays(date: Date, numberOfDays: number) {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate() + numberOfDays,\n      date.getHours(), date.getMinutes());\n  }\n\n  /**\n   * Gets a new date incremented by the given number of months. Number of months can be negative.\n   * If the date of the given month does not match the target month, the date will be set to the\n   * last day of the month.\n   * @param date\n   * @param numberOfMonths\n   * @returns \n   */\n  incrementMonths(date: Date, numberOfMonths: number) {\n    // If the same date in the target month does not actually exist, the Date object will\n    // automatically advance *another* month by the number of missing days.\n    // For example, if you try to go from Jan. 30 to Feb. 30, you'll end up on March 2.\n    // So, we check if the month overflowed and go to the last day of the target month instead.\n    let dateInTargetMonth = new Date(date.getFullYear(), date.getMonth() + numberOfMonths, 1,\n      date.getHours(), date.getMinutes());\n    let numberOfDaysInMonth = this.getNumberOfDaysInMonth(dateInTargetMonth);\n    if (numberOfDaysInMonth < date.getDate()) {\n      dateInTargetMonth.setDate(numberOfDaysInMonth);\n    } else {\n      dateInTargetMonth.setDate(date.getDate());\n    }\n\n    return dateInTargetMonth;\n  }\n\n  /**\n   * Get the integer distance between two months. This *only* considers the month and year\n   * portion of the Date instances.\n   *\n   * @param start\n   * @param end\n   * @returns Number of months between `start` and `end`. If `end` is before `start`\n   *     chronologically, this number will be negative.\n   */\n  getMonthDistance(start: Date, end: Date) {\n    return (12 * (end.getFullYear() - start.getFullYear())) + (end.getMonth() - start.getMonth());\n  }\n\n  /**\n   * Gets the last day of the month for the given date.\n   * @param date\n   * @returns \n   */\n  getLastDateOfMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth(), this.getNumberOfDaysInMonth(date),\n      date.getHours(), date.getMinutes());\n  }\n\n  /**\n   * Checks whether a date is valid.\n   * @param date\n   * @return  Whether the date is a valid Date.\n   */\n  isValidDate(date: Date) {\n    return date != null && date.getTime && !isNaN(date.getTime());\n  }\n\n  /**\n   * Sets a date's time to midnight.\n   * @param date\n   */\n  setDateTimeToMidnight(date: Date) {\n    if (this.isValidDate(date)) {\n      date.setHours(0, 0, 0, 0);\n    }\n  }\n\n  /**\n   * Creates a date with the time set to midnight.\n   * Drop-in replacement for two forms of the Date constructor:\n   * 1. No argument for Date representing now.\n   * 2. Single-argument value representing number of seconds since Unix Epoch\n   * or a Date object.\n   * @param value\n   * @return New date with time set to midnight.\n   */\n  createDateAtMidnight(value: any) {\n    let date: Date;\n    if (!value) {\n      date = new Date();\n    } else {\n      date = new Date(value);\n    }\n    this.setDateTimeToMidnight(date);\n    return date;\n  }\n\n  /**\n   * Checks if a date is within a min and max range, ignoring the time component.\n   * If minDate or maxDate are not dates, they are ignored.\n   * @param date\n   * @param minDate\n   * @param maxDate\n   */\n  isDateWithinRange(date: Date, minDate: Date, maxDate: Date) {\n    let dateAtMidnight = this.createDateAtMidnight(date);\n    let minDateAtMidnight = this.isValidDate(minDate) ? this.createDateAtMidnight(minDate) : null;\n    let maxDateAtMidnight = this.isValidDate(maxDate) ? this.createDateAtMidnight(maxDate) : null;\n    return (!minDateAtMidnight || minDateAtMidnight <= dateAtMidnight) &&\n      (!maxDateAtMidnight || maxDateAtMidnight >= dateAtMidnight);\n  }\n\n  /**\n   * Checks if a date is within a min and max range.\n   * If minDate or maxDate are not dates, they are ignored.\n   * @param date\n   * @param minDate\n   * @param maxDate\n   */\n  isFullDateWithinRange(date: Date, minDate: Date, maxDate: Date) {\n    minDate = this.isValidDate(minDate) ? minDate : null;\n    maxDate = this.isValidDate(maxDate) ? maxDate : null;\n    return (!minDate || minDate <= date) &&\n      (!maxDate || maxDate >= date);\n  }\n\n  /**\n   * Gets a new date incremented by the given number of years. Number of years can be negative.\n   * See `incrementMonths` for notes on overflow for specific dates.\n   * @param date\n   * @param numberOfYears\n   * @returns \n   */\n  incrementYears(date: Date, numberOfYears: number) {\n    return this.incrementMonths(date, numberOfYears * 12);\n  }\n\n  /**\n   * Get the integer distance between two years. This *only* considers the year portion of the\n   * Date instances.\n   *\n   * @param start\n   * @param end\n   * @returns Number of months between `start` and `end`. If `end` is before `start`\n   *     chronologically, this number will be negative.\n   */\n  getYearDistance(start: Date, end: Date) {\n    return end.getFullYear() - start.getFullYear();\n  }\n\n  /**\n   * Clamps a date between a minimum and a maximum date.\n   * @param date Date to be clamped\n   * @param minDate Minimum date\n   * @param maxDate Maximum date\n   * @return\n   */\n  clampDate(date: Date, minDate: Date, maxDate: Date) {\n    let boundDate = date;\n    if (minDate && date < minDate) {\n      boundDate = new Date(minDate.getTime());\n    }\n    if (maxDate && date > maxDate) {\n      boundDate = new Date(maxDate.getTime());\n    }\n    return boundDate;\n  }\n\n  /**\n   * Extracts and parses the timestamp from a DOM node.\n   * @param node Node from which the timestamp will be extracted.\n   * @return Time since epoch.\n   */\n  getTimestampFromNode(node: any) {\n    if (node && node.hasAttribute('data-timestamp')) {\n      return Number(node.getAttribute('data-timestamp'));\n    }\n  }\n\n  /**\n   * Checks if a month is within a min and max range, ignoring the date and time components.\n   * If minDate or maxDate are not dates, they are ignored.\n   * @param date\n   * @param minDate\n   * @param maxDate\n   */\n  isMonthWithinRange(date: Date, minDate: Date, maxDate: Date) {\n    let month = date.getMonth();\n    let year = date.getFullYear();\n\n    return (!minDate || minDate.getFullYear() < year || minDate.getMonth() <= month) &&\n      (!maxDate || maxDate.getFullYear() > year || maxDate.getMonth() >= month);\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDateAndTime(first: Date, second: Date): number {\n    return this.getYear(first) - this.getYear(second) ||\n      this.getMonth(first) - this.getMonth(second) ||\n      this.getDate(first) - this.getDate(second) ||\n      this.getHours(first) - this.getDate(second) ||\n      this.getMinutes(first) - this.getDate(second) ||\n      this.getSeconds(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: Date | null, second: Date | null): boolean {\n    return first && second ? !this.compareDate(first, second) : first == second;\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDateAndTime(first: Date | null, second: Date | null): boolean {\n    return first && second ? !this.compareDateAndTime(first, second) : first == second;\n  }\n\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationTriggerMetadata = trigger('fadeInContent', [\n  state('showing', style({ opacity: 1 })),\n  transition('void => showing', [\n    style({ opacity: 0 }),\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n  ])\n]);\n\nexport const slideCalendar: AnimationTriggerMetadata = trigger('slideCalendar', [\n  transition('* => left', [\n    animate(180, keyframes([\n      style({ transform: 'translateX(100%)', offset: 0.5 }),\n      style({ transform: 'translateX(-100%)', offset: 0.51 }),\n      style({ transform: 'translateX(0)', offset: 1 })\n    ]))\n  ]),\n  transition('* => right', [\n    animate(180, keyframes([\n      style({ transform: 'translateX(-100%)', offset: 0.5 }),\n      style({ transform: 'translateX(100%)', offset: 0.51 }),\n      style({ transform: 'translateX(0)', offset: 1 })\n    ]))\n  ])\n]);\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from '../core/keyboard/keycodes';\nimport { DateLocale } from './date-locale';\nimport { DateUtil } from './date-util';\nimport { slideCalendar } from './datepicker-animations';\nimport { MATERIAL_COMPATIBILITY_MODE } from '../core';\n\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  \n  selector: 'md2-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.scss'],\n  host: {\n    '[class.md2-calendar]': 'true',\n    'tabindex': '0',\n    '(keydown)': '_handleCalendarBodyKeydown($event)',\n  },\n  animations: [slideCalendar],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2Calendar implements AfterContentInit {\n\n  /** Whether the Week-number should be displayed */\n  @Input() displayWeek: boolean;\n\n  @Input() type: 'date' | 'time' | 'month' | 'datetime' = 'date';\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input() startAt: Date;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: 'clock' | 'month' | 'year' = 'month';\n\n  /** The currently selected date. */\n  @Input() selected: Date;\n\n  /** The minimum selectable date. */\n  @Input() minDate: Date;\n\n  /** The maximum selectable date. */\n  @Input() maxDate: Date;\n\n  @Input() timeInterval: number = 1;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: Date) => boolean;\n\n  /** Emits when the currently selected date changes. */\n  @Output() selectedChange = new EventEmitter<Date>();\n\n  /** Date filter for the month and year views. */\n  _dateFilterForViews = (date: Date) => {\n    return !!date &&\n      (!this.dateFilter || this.dateFilter(date)) &&\n      (!this.minDate || this._util.compareDate(date, this.minDate) >= 0) &&\n      (!this.maxDate || this._util.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get _activeDate(): Date { return this._clampedActiveDate; }\n  set _activeDate(value: Date) {\n    let oldActiveDate = this._clampedActiveDate;\n    this._clampedActiveDate = this._util.clampDate(value, this.minDate, this.maxDate);\n    if (oldActiveDate && this._clampedActiveDate && this._currentView === 'month' &&\n      !this._util.isSameMonthAndYear(oldActiveDate, this._clampedActiveDate)) {\n      if (this._util.isInNextMonth(oldActiveDate, this._clampedActiveDate)) {\n        this.calendarState('right');\n      } else {\n        this.calendarState('left');\n      }\n    }\n  }\n  private _clampedActiveDate: Date;\n\n  /** Whether the calendar is in month view. */\n  _currentView: 'clock' | 'month' | 'year' = 'month';\n  _clockView: 'hour' | 'minute' = 'hour';\n\n  /** The label for the current calendar view. */\n  get _yearLabel(): string {\n    return this._locale.getYearName(this._activeDate);\n  }\n\n  get _monthYearLabel(): string {\n    return this._currentView === 'month' ? this._locale.getMonthLabel(this._activeDate) :\n      this._locale.getYearName(this._activeDate);\n  }\n\n  get _dateLabel(): string {\n    return this._locale.getDateLabel(this._activeDate);\n  }\n\n  get _hoursLabel(): string {\n    return ('0' + this._locale.getHoursLabel(this._activeDate)).slice(-2);\n  }\n\n  get _minutesLabel(): string {\n    return ('0' + this._locale.getMinutesLabel(this._activeDate)).slice(-2);\n  }\n\n  _calendarState: string;\n\n  constructor(private _elementRef: ElementRef, private _ngZone: NgZone,\n    private _locale: DateLocale, private _util: DateUtil) {\n  }\n\n  ngAfterContentInit() {\n    this._activeDate = this.startAt || this._util.today();\n    this._elementRef.nativeElement.focus();\n    if (this.type === 'month') {\n      this._currentView = 'year';\n    } else if (this.type === 'time') {\n      this._currentView = 'clock';\n    } else {\n      this._currentView = this.startView || 'month';\n    }\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: Date): void {\n    if (this.type == 'date') {\n      if (!this._util.sameDate(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n    } else {\n      this._activeDate = date;\n      this._currentView = 'clock';\n    }\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelected(month: Date): void {\n    if (this.type == 'month') {\n      if (!this._util.isSameMonthAndYear(month, this.selected)) {\n        this.selectedChange.emit(this._util.getFirstDateOfMonth(month));\n      }\n    } else {\n      this._activeDate = month;\n      this._currentView = 'month';\n      this._clockView = 'hour';\n    }\n  }\n\n  _timeSelected(date: Date): void {\n    if (this._clockView !== 'minute') {\n      this._activeDate = date;\n      this._clockView = 'minute';\n    } else {\n      if (!this._util.sameDateAndTime(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n    }\n  }\n\n  _onActiveDateChange(date: Date) {\n    this._activeDate = date;\n  }\n\n  _yearClicked(): void {\n    this._currentView = 'year';\n  }\n  _dateClicked(): void {\n    this._currentView = 'month';\n  }\n\n  _hoursClicked(): void {\n    this._currentView = 'clock';\n    this._clockView = 'hour';\n  }\n  _minutesClicked(): void {\n    this._currentView = 'clock';\n    this._clockView = 'minute';\n  }\n\n  /** Handles user clicks on the previous button. */\n  _previousClicked(): void {\n    this._activeDate = this._currentView === 'month' ?\n      this._util.addCalendarMonths(this._activeDate, -1) :\n      this._util.addCalendarYears(this._activeDate, -1);\n  }\n\n  /** Handles user clicks on the next button. */\n  _nextClicked(): void {\n    this._activeDate = this._currentView === 'month' ?\n      this._util.addCalendarMonths(this._activeDate, 1) :\n      this._util.addCalendarYears(this._activeDate, 1);\n  }\n\n  /** Whether the previous period button is enabled. */\n  _previousEnabled(): boolean {\n    if (!this.minDate) {\n      return true;\n    }\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  _nextEnabled(): boolean {\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n  }\n\n  /** Handles keydown events on the calendar body. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    if (this._currentView === 'month') {\n      this._handleCalendarBodyKeydownInMonthView(event);\n    } else if (this._currentView === 'year') {\n      this._handleCalendarBodyKeydownInYearView(event);\n    } else {\n      this._handleCalendarBodyKeydownInClockView(event);\n    }\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: Date, date2: Date): boolean {\n    return this._currentView === 'month' ?\n      this._util.getYear(date1) == this._util.getYear(date2) &&\n      this._util.getMonth(date1) == this._util.getMonth(date2) :\n      this._util.getYear(date1) == this._util.getYear(date2);\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._util.addCalendarDays(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._util.addCalendarDays(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._util.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._util.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this._activeDate = this._util.addCalendarDays(this._activeDate,\n          1 - this._util.getDate(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._util.addCalendarDays(this._activeDate,\n          (this._util.getNumDaysInMonth(this._activeDate) -\n            this._util.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this._activeDate = event.altKey ?\n          this._util.addCalendarYears(this._activeDate, -1) :\n          this._util.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate = event.altKey ?\n          this._util.addCalendarYears(this._activeDate, 1) :\n          this._util.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n        if (this._dateFilterForViews(this._activeDate)) {\n          this._dateSelected(this._activeDate);\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._util.addCalendarMonths(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._util.addCalendarMonths(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\n        break;\n      case HOME:\n        this._activeDate = this._util.addCalendarMonths(this._activeDate,\n          -this._util.getMonth(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._util.addCalendarMonths(this._activeDate,\n          11 - this._util.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this._activeDate =\n          this._util.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate =\n          this._util.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n        this._monthSelected(this._activeDate);\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  private _handleCalendarBodyKeydownInClockView(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        this._activeDate = this._clockView == 'hour' ?\n          this._util.addCalendarHours(this._activeDate, 1) :\n          this._util.addCalendarMinutes(this._activeDate, 1);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._clockView == 'hour' ?\n          this._util.addCalendarHours(this._activeDate, -1) :\n          this._util.addCalendarMinutes(this._activeDate, -1);\n        break;\n      case ENTER:\n        this._timeSelected(this._activeDate);\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /**\n   * Determine the date for the month that comes before the given month in the same column in the\n   * calendar table.\n   */\n  private _prevMonthInSameCol(date: Date): Date {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    let increment = this._util.getMonth(date) <= 4 ? -5 :\n      (this._util.getMonth(date) >= 7 ? -7 : -12);\n    return this._util.addCalendarMonths(date, increment);\n  }\n\n  /**\n   * Determine the date for the month that comes after the given month in the same column in the\n   * calendar table.\n   */\n  private _nextMonthInSameCol(date: Date): Date {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    let increment = this._util.getMonth(date) <= 4 ? 7 :\n      (this._util.getMonth(date) >= 7 ? 5 : 12);\n    return this._util.addCalendarMonths(date, increment);\n  }\n\n  private calendarState(direction: string): void {\n    this._calendarState = direction;\n  }\n\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  NgZone,\n  Self,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\nimport { Overlay } from '../core/overlay/overlay';\nimport { OverlayRef } from '../core/overlay/overlay-ref';\nimport { ComponentPortal } from '../core/portal/portal';\nimport { OverlayState } from '../core/overlay/overlay-state';\nimport { Dir } from '../core/rtl/dir';\nimport { PositionStrategy } from '../core/overlay/position/position-strategy';\nimport { Subscription } from 'rxjs';\nimport { ESCAPE } from '../core/keyboard/keycodes';\nimport { Md2Calendar } from './calendar';\nimport { DateLocale } from './date-locale';\nimport { DateUtil } from './date-util';\nimport { first } from 'rxjs/operators';\n\n/** Change event object emitted by Md2Select. */\nexport class Md2DateChange {\n  constructor(public source: Md2Datepicker, public value: Date) { }\n}\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * Md2Calendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  \n  selector: 'md2-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.scss'],\n  host: {\n    'class': 'md2-datepicker-content',\n    '[class.md2-datepicker-content-touch]': 'datepicker?.touchUi',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2DatepickerContent {\n  datepicker: Md2Datepicker;\n\n  @ViewChild(Md2Calendar) _calendar: Md2Calendar;\n\n  /**\n   * Handles keydown event on datepicker content.\n   * @param event The event.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case ESCAPE:\n        this.datepicker.close();\n        break;\n      default:\n        /* Return so that we don't preventDefault on keys that are not explicitly handled. */\n        return;\n    }\n\n    event.preventDefault();\n  }\n}\n\n\nexport const MD2_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Md2Datepicker),\n  multi: true\n};\n\nexport const MD2_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => Md2Datepicker),\n  multi: true\n};\n\n/* Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  \n  selector: 'md2-datepicker',\n  templateUrl: 'datepicker.html',\n  styleUrls: ['datepicker.scss'],\n  providers: [MD2_DATEPICKER_VALUE_ACCESSOR, MD2_DATEPICKER_VALIDATORS],\n  host: {\n    'role': 'datepicker',\n    '[class.md2-datepicker-disabled]': 'disabled',\n    '[class.md2-datepicker-opened]': 'opened',\n    '[attr.aria-label]': 'placeholder',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Md2Datepicker implements OnDestroy, ControlValueAccessor {\n\n  _onChange: (value: any) => void = () => { };\n  _onTouched = () => { };\n  _validatorOnChange = () => { };\n\n  _inputFocused: boolean = false;\n\n  /** The date to open the calendar to initially. */\n  @Input() startAt: Date;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'clock' | 'month' | 'year' = 'month';\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input() touchUi = false;\n\n  /** Whether the Week-number should be displayed */\n  @Input() displayWeek: boolean;\n\n  @Input() tabindex: number = 0;\n  @Input() mode: 'auto' | 'portrait' | 'landscape' = 'auto';\n  @Input() placeholder: string;\n  @Input() timeInterval: number = 1;\n  @Input() id: string;\n\n  @Input()\n  get type() { return this._type; }\n  set type(value: 'date' | 'time' | 'month' | 'datetime') {\n    this._type = value || 'date';\n    this._inputValue = this._formatDate(this._value);\n  }\n  private _type: 'date' | 'time' | 'month' | 'datetime' = 'date';\n\n  @Input()\n  get format() {\n    return this._format || (this.type === 'month' ? 'MMMM y' : this.type === 'date' ?\n      'dd/MM/y' : this.type === 'time' ? 'HH:mm' : this.type === 'datetime' ?\n        'dd/MM/y HH:mm' : 'dd/MM/y');\n  }\n  set format(value: string) {\n    if (this._format !== value) {\n      this._format = value;\n      this._inputValue = this._formatDate(this._value);\n    }\n  }\n  private _format: string;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): Date { return this._minDate; }\n  set min(value: Date) {\n    this._minDate = value;\n    this._validatorOnChange();\n  }\n  _minDate: Date;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): Date { return this._maxDate; }\n  set max(value: Date) {\n    this._maxDate = value;\n    this._validatorOnChange();\n  }\n  _maxDate: Date;\n\n  @Input() set dateFilter(filter: (date: Date | null) => boolean) {\n    this._dateFilter = filter;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: Date | null) => boolean;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n  private _required: boolean = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  @Input()\n  get value() { return this._value; }\n  set value(value: Date) {\n    this._value = this.coerceDateProperty(value);\n    this._selected = this._value;\n    this.startAt = this._value;\n    setTimeout(() => {\n      this._inputValue = this._formatDate(this._value);\n    });\n  }\n  private _value: Date;\n\n  _inputValue: string = '';\n\n  @Input()\n  get openOnFocus(): boolean { return this._openOnFocus; }\n  set openOnFocus(value: boolean) { this._openOnFocus = coerceBooleanProperty(value); }\n  private _openOnFocus: boolean;\n\n  @Input()\n  set isOpen(value: boolean) {\n    if (value && !this.opened) { this.open(); }\n  }\n\n  /** Event emitted when the select has been opened. */\n  @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the select has been closed. */\n  @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the selected date has been changed by the user. */\n  @Output() change: EventEmitter<Md2DateChange> = new EventEmitter<Md2DateChange>();\n\n  /** Emits new selected date when selected date changes. */\n  @Output() selectedChanged = new EventEmitter<Date>();\n\n  /** Whether the calendar is open. */\n  opened = false;\n\n  /** The currently selected date. */\n  _selected: Date = null;\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef;\n\n  /** A reference to the overlay when the calendar is opened as a dialog. */\n  private _dialogRef: OverlayRef;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<Md2DatepickerContent>;\n\n  private _inputSubscription: Subscription;\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return (!this.min || !control.value ||\n      this._util.compareDate(this.min, control.value) <= 0) ?\n      null : { 'md2DatepickerMin': { 'min': this.min, 'actual': control.value } };\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return (!this.max || !control.value ||\n      this._util.compareDate(this.max, control.value) >= 0) ?\n      null : { 'md2DatepickerMax': { 'max': this.max, 'actual': control.value } };\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return !this._dateFilter || !control.value || this._dateFilter(control.value) ?\n      null : { 'md2DatepickerFilter': true };\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn =\n  Validators.compose([this._minValidator, this._maxValidator, this._filterValidator]);\n\n  constructor(private _element: ElementRef,\n    private _overlay: Overlay,\n    private _ngZone: NgZone,\n    private _viewContainerRef: ViewContainerRef,\n    private _locale: DateLocale,\n    private _util: DateUtil,\n    @Optional() private _dir: Dir) {\n    this.id = (this.id) ? this.id : `md2-datepicker-${datepickerUid++}`;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    if (this._popupRef) {\n      this._popupRef.dispose();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.dispose();\n    }\n    if (this._inputSubscription) {\n      this._inputSubscription.unsubscribe();\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _handleFocus() {\n    this._inputFocused = true;\n    if (!this.opened && this.openOnFocus) {\n      this.open();\n    }\n  }\n\n  _handleBlur(event: Event) {\n    this._inputFocused = false;\n    if (!this.opened) {\n      this._onTouched();\n    }\n    let el: any = event.target;\n    let date: Date = this._util.parseDate(el.value, this.format);\n    if (!date) {\n      date = this._util.parse(el.value);\n    }\n    if (date != null && date.getTime && !isNaN(date.getTime())) {\n\n      let d: Date = new Date(this.value);\n      if (this.type !== 'time') {\n        d.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      }\n      if (this.type !== 'date') {\n        d.setHours(date.getHours(), date.getMinutes());\n      }\n      if (!this._util.isSameMinute(this.value, d)) {\n        this.value = this._util.createDate(d.getFullYear(),\n          d.getMonth(),\n          d.getDate(),\n          d.getHours(),\n          d.getMinutes(),\n          d.getSeconds());\n        this._emitChangeEvent();\n      }\n    } else {\n      if (this.value) {\n        this.value = null;\n        this._emitChangeEvent();\n      }\n      el.value = null;\n    }\n  }\n\n  private coerceDateProperty(value: any): Date {\n    let v: Date = null;\n    if (value != null && value.getTime && !isNaN(value.getTime())) {\n      v = value;\n    } else {\n      if (value && this.type === 'time') {\n        let t = value + '';\n        v = new Date();\n        v.setHours(parseInt(t.substring(0, 2)));\n        v.setMinutes(parseInt(t.substring(3, 5)));\n      } else {\n        let timestamp = Date.parse(value);\n        v = isNaN(timestamp) ? null : new Date(timestamp);\n      }\n    }\n    let d: Date = v ? this._util.createDate(v.getFullYear(),\n      v.getMonth(),\n      v.getDate(),\n      v.getHours(),\n      v.getMinutes(),\n      v.getSeconds()) : null;\n    return d;\n  }\n\n  /**\n   * format date\n   * @param date Date Object\n   * @return string with formatted date\n   */\n  private _formatDate(date: Date): string {\n    if (!this.format || !date) { return ''; }\n\n    let format = this.format;\n\n    /* Years */\n    if (format.indexOf('yy') > -1) {\n      format = format.replace('yy', ('00' + this._util.getYear(date)).slice(-2));\n    } else if (format.indexOf('y') > -1) {\n      format = format.replace('y', '' + this._util.getYear(date));\n    }\n\n    /* Days */\n    if (format.indexOf('dd') > -1) {\n      format = format.replace('dd', ('0' + this._util.getDate(date)).slice(-2));\n    } else if (format.indexOf('d') > -1) {\n      format = format.replace('d', '' + this._util.getDate(date));\n    }\n\n    /* Hours */\n    if (/[aA]/.test(format)) {\n      /* 12-hour */\n      if (format.indexOf('HH') > -1) {\n        format = format.replace('HH',\n          ('0' + this._getHours12(this._util.getHours(date))).slice(-2));\n      } else if (format.indexOf('H') > -1) {\n        format = format.replace('H',\n          '' + this._getHours12(this._util.getHours(date)));\n      }\n      format = format.replace('A', ((this._util.getHours(date) < 12) ? 'AM' : 'PM'))\n        .replace('a', ((this._util.getHours(date) < 12) ? 'am' : 'pm'));\n    } else {\n      /* 24-hour */\n      if (format.indexOf('HH') > -1) {\n        format = format.replace('HH', ('0' + this._util.getHours(date)).slice(-2));\n      } else if (format.indexOf('H') > -1) {\n        format = format.replace('H', '' + this._util.getHours(date));\n      }\n    }\n\n    /* Minutes */\n    if (format.indexOf('mm') > -1) {\n      format = format.replace('mm', ('0' + this._util.getMinutes(date)).slice(-2));\n    } else if (format.indexOf('m') > -1) {\n      format = format.replace('m', '' + this._util.getMinutes(date));\n    }\n\n    /* Seconds */\n    if (format.indexOf('ss') > -1) {\n      format = format.replace('ss', ('0' + this._util.getSeconds(date)).slice(-2));\n    } else if (format.indexOf('s') > -1) {\n      format = format.replace('s', '' + this._util.getSeconds(date));\n    }\n\n    /* Months */\n    if (format.indexOf('MMMM') > -1) {\n      format = format.replace('MMMM',\n        this._locale.getMonthNames('long')[this._util.getMonth(date)]);\n    } else if (format.indexOf('MMM') > -1) {\n      format = format.replace('MMM',\n        this._locale.getMonthNames('short')[this._util.getMonth(date)]);\n    } else if (format.indexOf('MM') > -1) {\n      format = format.replace('MM', ('0' + (this._util.getMonth(date) + 1)).slice(-2));\n    } else if (format.indexOf('M') > -1) {\n      format = format.replace('M', '' + (this._util.getMonth(date) + 1));\n    }\n\n    return format;\n  }\n\n  /**\n   * Get an hour of the date in the 12-hour format\n   * @param date Date Object\n   * @return hour of the date in the 12-hour format\n   */\n  private _getHours12(hours: number): number {\n    if (hours == 0) {\n      hours = 12;\n    } else if (hours > 12) {\n      hours -= 12;\n    }\n    return hours;\n  }\n\n  /** Selects the given date and closes the currently open popup or dialog. */\n  _selectAndClose(date: Date): void {\n    let oldValue = this._selected;\n    this.value = date;\n    if (!this._util.sameDateAndTime(oldValue, this._selected)) {\n      this._emitChangeEvent();\n    }\n    this.close();\n  }\n\n  /** Emits an event when the user selects a date. */\n  _emitChangeEvent(): void {\n    this._onChange(this.value);\n    this.change.emit(new Md2DateChange(this, this.value));\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this.opened) { return; }\n\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal(Md2DatepickerContent, this._viewContainerRef);\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this.opened = true;\n    this.onOpen.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this.opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef && this._dialogRef.hasAttached()) {\n      this._dialogRef.detach();\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    this.opened = false;\n    this.onClose.emit();\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    if (!this._dialogRef) {\n      this._createDialog();\n    }\n\n    if (!this._dialogRef.hasAttached()) {\n      let componentRef: ComponentRef<Md2DatepickerContent> =\n        this._dialogRef.attach(this._calendarPortal);\n      componentRef.instance.datepicker = this;\n    }\n\n    this._dialogRef.backdropClick().subscribe(() => this.close());\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      let componentRef: ComponentRef<Md2DatepickerContent> =\n        this._popupRef.attach(this._calendarPortal);\n      componentRef.instance.datepicker = this;\n\n      /* Update the position once the calendar has rendered. */\n      this._ngZone.onStable.pipe(first()).subscribe(() => this._popupRef.updatePosition());\n    }\n\n    this._popupRef.backdropClick().subscribe(() => this.close());\n  }\n\n  /** Create the dialog. */\n  private _createDialog(): void {\n    const overlayState = new OverlayState();\n    overlayState.positionStrategy = this._overlay.position().global()\n      .centerHorizontally()\n      .centerVertically();\n    overlayState.hasBackdrop = true;\n    overlayState.backdropClass = 'cdk-overlay-dark-backdrop';\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n    this._dialogRef = this._overlay.create(overlayState);\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayState = new OverlayState();\n    overlayState.positionStrategy = this._createPopupPositionStrategy();\n    overlayState.hasBackdrop = true;\n    overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n    overlayState.scrollStrategy = this._overlay.scrollStrategies.reposition();\n\n    this._popupRef = this._overlay.create(overlayState);\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .connectedTo(this._element,\n      { originX: 'start', originY: 'bottom' },\n      { overlayX: 'start', overlayY: 'top' })\n      .withFallbackPosition(\n      { originX: 'start', originY: 'top' },\n      { overlayX: 'start', overlayY: 'bottom' })\n      .withFallbackPosition(\n      { originX: 'end', originY: 'bottom' },\n      { overlayX: 'end', overlayY: 'top' })\n      .withFallbackPosition(\n      { originX: 'end', originY: 'top' },\n      { overlayX: 'end', overlayY: 'bottom' });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Md2Datepicker } from './datepicker';\n\n\n@Component({\n  \n  selector: 'button[md2DatepickerToggle]',\n  template: '',\n  styleUrls: ['datepicker-toggle.scss'],\n  host: {\n    'type': 'button',\n    'class': 'md2-datepicker-toggle',\n    'aria-label': 'Open calendar',\n    '(click)': '_open($event)',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2DatepickerToggle<D> {\n  /** Datepicker instance that the button will toggle. */\n  @Input('md2DatepickerToggle') datepicker: Md2Datepicker;\n\n  _open(event: Event): void {\n    if (this.datepicker) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class Md2CalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public header?: string) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  \n  selector: '[md2-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.scss'],\n  host: {\n    'class': 'md2-calendar-body',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2CalendarBody {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: Md2CalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** Whether to allow selection of disabled cells. */\n  @Input() allowDisabledSelection = false;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /** Whether the Week-number should be displayed */\n  @Input() displayWeek: boolean;\n\n  /** Emits when a new value is selected. */\n  @Output() selectedValueChange = new EventEmitter<number>();\n\n  _cellClicked(cell: Md2CalendarCell): void {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  get _firstRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[0].length ?\n        this.numCols - this.rows[0].length : 0;\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { DateLocale } from './date-locale';\nimport { DateUtil } from './date-util';\nimport { Md2CalendarCell } from './calendar-body';\nimport { MD_DATE_FORMATS, MdDateFormats } from '../core/datetime/date-formats';\nimport { slideCalendar } from './datepicker-animations';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  \n  selector: 'md2-month-view',\n  templateUrl: 'month-view.html',\n  animations: [slideCalendar],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2MonthView implements AfterContentInit {\n  /** Whether the Week-number should be displayed */\n  @Input() displayWeek: boolean;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): Date { return this._activeDate; }\n  set activeDate(value: Date) {\n    let oldActiveDate = this._activeDate;\n    this._activeDate = value || this._util.today();\n    if (oldActiveDate && this._activeDate &&\n      !this._util.isSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n      if (this._util.isInNextMonth(oldActiveDate, this._activeDate)) {\n        this.calendarState('right');\n      } else {\n        this.calendarState('left');\n      }\n    }\n  }\n  private _activeDate: Date;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): Date { return this._selected; }\n  set selected(value: Date) {\n    this._selected = value;\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n  }\n  private _selected: Date;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: Date) => boolean;\n\n  /** Emits when a new date is selected. */\n  @Output() selectedChange = new EventEmitter<Date>();\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: Md2CalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number;\n\n  /** The names of the weekdays. */\n  _weekdays: { long: string, narrow: string }[];\n\n  _calendarState: string;\n\n  constructor(private _locale: DateLocale, public _util: DateUtil,\n    @Optional() @Inject(MD_DATE_FORMATS) private _dateFormats: MdDateFormats) {\n    if (!this._dateFormats) {\n      throw Error('MD_DATE_FORMATS');\n    }\n\n    const firstDayOfWeek = this._locale.getFirstDayOfWeek();\n    const narrowWeekdays = this._locale.getDayOfWeekNames('narrow');\n    const longWeekdays = this._locale.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return { long, narrow: narrowWeekdays[i] };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._util.today();\n  }\n\n  ngAfterContentInit(): void {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    this.selectedChange.emit(this._util.createDate(\n      this._util.getYear(this.activeDate), this._util.getMonth(this.activeDate),\n      date, this._util.getHours(this.activeDate),\n      this._util.getMinutes(this.activeDate),\n      this._util.getSeconds(this.activeDate)));\n  }\n\n  /** Initializes this month view. */\n  private _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._util.today());\n\n    let firstOfMonth = this._util.createDate(this._util.getYear(this.activeDate),\n      this._util.getMonth(this.activeDate), 1,\n      this._util.getHours(this.activeDate),\n      this._util.getMinutes(this.activeDate),\n      this._util.getSeconds(this.activeDate));\n    this._firstWeekOffset =\n      (DAYS_PER_WEEK + this._locale.getDayOfWeek(firstOfMonth) -\n        this._locale.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n  }\n\n  /** Creates MdCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    let daysInMonth = this._util.getNumDaysInMonth(this.activeDate);\n    let dateNames = this._locale.getDateNames();\n    let oldWeek;\n    this._weeks = [];\n\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++ , cell++) {\n      let date = this._util.createDate(\n        this._util.getYear(this.activeDate),\n        this._util.getMonth(this.activeDate), i + 1,\n        this._util.getHours(this.activeDate),\n        this._util.getMinutes(this.activeDate),\n        this._util.getSeconds(this.activeDate));\n      let enabled = !this.dateFilter ||\n        this.dateFilter(date);\n      let ariaLabel = this._locale.format(date, this._dateFormats.display.dateA11yLabel);\n      let newWeek = this._util.getWeekOfYear(date);\n      if (oldWeek !== newWeek) {\n        this._weeks.push([]);\n        oldWeek = newWeek;\n        cell = 0;\n      }\n      this._weeks[this._weeks.length - 1]\n        .push(new Md2CalendarCell(i + 1, dateNames[i], ariaLabel, enabled, newWeek.toString()));\n    }\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: Date): number {\n    return this._util.isSameMonthAndYear(date, this.activeDate) ?\n      this._util.getDate(date) : null;\n  }\n\n  private calendarState(direction: string): void {\n    this._calendarState = direction;\n  }\n\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { DateLocale } from './date-locale';\nimport { DateUtil } from './date-util';\nimport { Md2CalendarCell } from './calendar-body';\nimport { MD_DATE_FORMATS, MdDateFormats } from '../core/datetime/date-formats';\nimport { slideCalendar } from './datepicker-animations';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  \n  selector: 'md2-year-view',\n  templateUrl: 'year-view.html',\n  animations: [slideCalendar],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2YearView implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): Date { return this._activeDate; }\n  set activeDate(value: Date) {\n    let oldActiveDate = this._activeDate;\n    this._activeDate = value || this._util.today();\n    if (oldActiveDate && this._activeDate &&\n      !this._util.isSameYear(oldActiveDate, this._activeDate)) {\n      this._init();\n      // if (oldActiveDate < this._activeDate) {\n      //  this.calendarState('right');\n      // } else {\n      //  this.calendarState('left');\n      // }\n    }\n  }\n  private _activeDate: Date;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): Date { return this._selected; }\n  set selected(value: Date) {\n    this._selected = value;\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n  }\n  private _selected: Date;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: Date) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() selectedChange = new EventEmitter<Date>();\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: Md2CalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number;\n\n  _calendarState: string;\n\n  constructor(private _locale: DateLocale, public _util: DateUtil,\n    @Optional() @Inject(MD_DATE_FORMATS) private _dateFormats: MdDateFormats) {\n    if (!this._dateFormats) {\n      throw Error('MD_DATE_FORMATS');\n    }\n\n    this._activeDate = this._util.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    this.selectedChange.emit(this._util.createDate(\n      this._util.getYear(this.activeDate), month,\n      this._util.getDate(this.activeDate),\n      this._util.getHours(this.activeDate),\n      this._util.getMinutes(this.activeDate),\n      this._util.getSeconds(this.activeDate)));\n  }\n\n  /** Initializes this month view. */\n  private _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._util.today());\n    this._yearLabel = this._locale.getYearName(this.activeDate);\n\n    let monthNames = this._locale.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11]].map(row => row.map(\n      month => this._createCellForMonth(month, monthNames[month])));\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: Date) {\n    return this._util.isSameYear(date, this.activeDate) ?\n      this._util.getMonth(date) : null;\n  }\n\n  /** Creates an MdCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._locale.format(\n      this._util.createDate(this._util.getYear(this.activeDate), month, 1,\n        this._util.getHours(this.activeDate),\n        this._util.getMinutes(this.activeDate),\n        this._util.getSeconds(this.activeDate)),\n      this._dateFormats.display.monthYearA11yLabel);\n    return new Md2CalendarCell(\n      month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _isMonthEnabled(month: number) {\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    let firstOfMonth = this._util.createDate(\n      this._util.getYear(this.activeDate), month, 1,\n      this._util.getHours(this.activeDate),\n      this._util.getMinutes(this.activeDate),\n      this._util.getSeconds(this.activeDate));\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._util.getMonth(date) == month;\n      date = this._util.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private calendarState(direction: string): void {\n    this._calendarState = direction;\n  }\n\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n\n}\n","import {\n  AfterContentInit,\n  // ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  // ViewEncapsulation\n} from '@angular/core';\nimport { DateUtil } from './date-util';\nimport { DateLocale } from './date-locale';\n\nexport const CLOCK_RADIUS = 50;\nexport const CLOCK_INNER_RADIUS = 27.5;\nexport const CLOCK_OUTER_RADIUS = 41.25;\nexport const CLOCK_TICK_RADIUS = 7.0833;\n\nexport type ClockView = 'hour' | 'minute';\n\n/**\n * A clock that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  \n  selector: 'md2-clock',\n  templateUrl: 'clock.html',\n  styleUrls: ['clock.scss'],\n  host: {\n    'role': 'clock',\n    '(mousedown)': '_handleMousedown($event)',\n  },\n  // encapsulation: ViewEncapsulation.None,\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Md2Clock implements AfterContentInit {\n  /**\n   * The date to display in this clock view.\n   */\n  @Input()\n  get activeDate(): Date { return this._activeDate; }\n  set activeDate(value: Date) {\n    let oldActiveDate = this._activeDate;\n    this._activeDate = this._util.clampDate(value, this.min, this.max);\n    if (!this._util.isSameMinute(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: Date;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): Date { return this._selected; }\n  set selected(value: Date) {\n    this._selected = this._util.parse(value);\n    if (this._selected) { this.activeDate = this._selected; }\n  }\n  private _selected: Date;\n\n  /** The minimum selectable date. */\n  @Input()\n  get min(): Date { return this._min; }\n  set min(date: Date) { this._min = this._util.parse(date); }\n  private _min: Date;\n\n  /** The maximum selectable date. */\n  @Input()\n  get max(): Date { return this._max; }\n  set max(date: Date) { this._max = this._util.parse(date); }\n  private _max: Date;\n\n  /** Whether the clock should be started in hour or minute view. */\n  @Input()\n  set startView(value: ClockView) {\n    this._hourView = value != 'minute';\n  }\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: Date) => boolean;\n\n  @Input() interval: number = 1;\n\n  @Input() twelvehour: boolean = false;\n\n  /** Emits when the currently selected date changes. */\n  @Output() selectedChange = new EventEmitter<Date>();\n\n  @Output() activeDateChange = new EventEmitter<Date>();\n\n  /** Hours and Minutes representing the clock view. */\n  _hours: Array<Object> = [];\n  _minutes: Array<Object> = [];\n\n  /** Whether the clock is in hour view. */\n  _hourView: boolean = true;\n\n  _selectedHour: number;\n  _selectedMinute: number;\n\n  get _hand(): any {\n    this._selectedHour = this._util.getHours(this.activeDate);\n    this._selectedMinute = this._util.getMinutes(this.activeDate);\n    let deg = 0;\n    let radius = CLOCK_OUTER_RADIUS;\n    if (this._hourView) {\n      let outer = this.activeDate.getHours() > 0 && this.activeDate.getHours() < 13;\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\n      if (this.twelvehour) {\n        radius = CLOCK_OUTER_RADIUS;\n      }\n      deg = Math.round(this.activeDate.getHours() * (360 / (24 / 2)));\n    } else {\n      deg = Math.round(this.activeDate.getMinutes() * (360 / 60));\n    }\n    return {\n      'transform': `rotate(${deg}deg)`,\n      'height': `${radius}%`,\n      'margin-top': `${50 - radius}%`\n    };\n  }\n\n  private mouseMoveListener: any;\n  private mouseUpListener: any;\n\n  constructor(private _element: ElementRef,\n    private _locale: DateLocale, private _util: DateUtil) {\n    this.mouseMoveListener = (event: any) => { this._handleMousemove(event); };\n    this.mouseUpListener = () => { this._handleMouseup(); };\n  }\n\n  ngAfterContentInit() {\n    this.activeDate = this._activeDate || this._util.today();\n    this._init();\n  }\n\n  /** Handles mousedown events on the clock body. */\n  _handleMousedown(event: any) {\n    this.setTime(event);\n    document.addEventListener('mousemove', this.mouseMoveListener);\n    document.addEventListener('touchmove', this.mouseMoveListener);\n    document.addEventListener('mouseup', this.mouseUpListener);\n    document.addEventListener('touchend', this.mouseUpListener);\n  }\n\n  _handleMousemove(event: any) {\n    event.preventDefault();\n    this.setTime(event);\n  }\n\n  _handleMouseup() {\n    document.removeEventListener('mousemove', this.mouseMoveListener);\n    document.removeEventListener('touchmove', this.mouseMoveListener);\n    document.removeEventListener('mouseup', this.mouseUpListener);\n    document.removeEventListener('touchend', this.mouseUpListener);\n    this.selectedChange.emit(this.activeDate);\n  }\n\n  /** Initializes this clock view. */\n  private _init() {\n    this._hours.length = 0;\n    this._minutes.length = 0;\n\n    let hourNames = this._locale.getHourNames();\n    let minuteNames = this._locale.getMinuteNames();\n\n    if (this.twelvehour) {\n      for (let i = 1; i < (hourNames.length / 2) + 1; i++) {\n        let radian = i / 6 * Math.PI;\n        let radius = CLOCK_OUTER_RADIUS;\n        let date = new Date(this.activeDate.getTime());\n        date.setHours(i + 1, 0, 0, 0);\n        let enabled = this._util.isFullDateWithinRange(date, this.min, this.max);\n        this._hours.push({\n          value: i,\n          displayValue: i === 0 ? '00' : hourNames[i],\n          enabled: enabled,\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\n        });\n      }\n    } else {\n      for (let i = 0; i < hourNames.length; i++) {\n        let radian = i / 6 * Math.PI;\n        let outer = i > 0 && i < 13,\n          radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\n        let date = new Date(this.activeDate.getTime());\n        date.setHours(i + 1, 0, 0, 0);\n        let enabled = this._util.isFullDateWithinRange(date, this.min, this.max);\n        this._hours.push({\n          value: i,\n          displayValue: i === 0 ? '00' : hourNames[i],\n          enabled: enabled,\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\n          fontSize: i > 0 && i < 13 ? '' : '80%'\n        });\n      }\n    }\n\n    for (let i = 0; i < minuteNames.length; i += 5) {\n      let radian = i / 30 * Math.PI;\n      let date = new Date(this.activeDate.getTime());\n      date.setMinutes(i, 0, 0);\n      let enabled = this._util.isFullDateWithinRange(date, this.min, this.max);\n      this._minutes.push({\n        value: i,\n        displayValue: i === 0 ? '00' : minuteNames[i],\n        enabled: enabled,\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\n      });\n    }\n  }\n\n  /**\n   * Set Time\n   * @param event\n   */\n  private setTime(event: any) {\n    let trigger = this._element.nativeElement;\n    let triggerRect = trigger.getBoundingClientRect();\n    let width = trigger.offsetWidth;\n    let height = trigger.offsetHeight;\n    let pageX = event.pageX !== undefined ? event.pageX : event.touches[0].pageX;\n    let pageY = event.pageY !== undefined ? event.pageY : event.touches[0].pageY;\n    let x = (width / 2) - (pageX - triggerRect.left - window.pageXOffset);\n    let y = (height / 2) - (pageY - triggerRect.top - window.pageYOffset);\n    let radian = Math.atan2(-x, y);\n    let unit = Math.PI / (this._hourView ? 6 : (this.interval ? (30 / this.interval) : 30));\n    let z = Math.sqrt(x * x + y * y);\n    let outer = this._hourView && z > ((width * (CLOCK_OUTER_RADIUS / 100)) +\n      (width * (CLOCK_INNER_RADIUS / 100))) / 2;\n    let value = 0;\n\n    if (radian < 0) { radian = Math.PI * 2 + radian; }\n    value = Math.round(radian / unit);\n    radian = value * unit;\n\n    let date = new Date(this.activeDate.getTime());\n    if (this._hourView) {\n      if (this.twelvehour) {\n        value = value === 0 ? 12 : value;\n      } else {\n        if (value === 12) { value = 0; }\n        value = outer ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\n      }\n      date.setHours(value);\n    } else {\n      if (this.interval) { value *= this.interval; }\n      if (value === 60) { value = 0; }\n      date.setMinutes(value);\n    }\n    this.activeDate = this._util.clampDate(date, this.min, this.max);\n    this.activeDateChange.emit(this.activeDate);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StyleModule, OverlayModule, PortalModule, A11yModule } from '../core/index';\nimport { Md2Datepicker, Md2DatepickerContent } from './datepicker';\nimport { Md2DatepickerToggle } from './datepicker-toggle';\nimport { Md2Calendar } from './calendar';\nimport { Md2MonthView } from './month-view';\nimport { Md2YearView } from './year-view';\nimport { Md2CalendarBody } from './calendar-body';\nimport { Md2Clock } from './clock';\nimport { DateLocale } from './date-locale';\nimport { DateUtil } from './date-util';\n\n\nexport * from './datepicker';\nexport * from './month-view';\nexport * from './year-view';\nexport * from './calendar-body';\nexport * from './clock';\nexport * from './date-locale';\nexport * from './date-util';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    StyleModule,\n    A11yModule,\n  ],\n  exports: [\n    Md2Datepicker,\n    Md2DatepickerToggle,\n    Md2Calendar,\n    Md2CalendarBody,\n    Md2Calendar,\n    Md2MonthView,\n    Md2YearView,\n    Md2CalendarBody,\n    Md2Clock,\n  ],\n  declarations: [\n    Md2Datepicker,\n    Md2DatepickerContent,\n    Md2DatepickerToggle,\n    Md2Calendar,\n    Md2MonthView,\n    Md2YearView,\n    Md2CalendarBody,\n    Md2Clock,\n  ],\n  providers: [DateLocale, DateUtil],\n  entryComponents: [\n    Md2DatepickerContent\n  ]\n})\nexport class Md2DatepickerModule { }\n","import {\n  Component,\n  Output,\n  Input,\n  EventEmitter,\n  Optional,\n  SkipSelf,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n  Directive,\n  ViewContainerRef,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {\n  ESCAPE,\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  TemplatePortalDirective\n} from '../core/index';\nimport { extendObject } from '../core/util/object-extend';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nexport type DialogVisibility = 'initial' | 'visible' | 'hidden';\nexport type DialogRole = 'dialog' | 'alertdialog';\n\nexport class Md2DialogConfig {\n  role?: DialogRole = 'dialog';\n  disableClose?: boolean = false;\n}\n\n@Directive({ selector: '[md2DialogPortal]' })\nexport class Md2DialogPortal extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({ selector: 'md2-dialog-title' })\nexport class Md2DialogTitle { }\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({ selector: 'md2-dialog-content' })\nexport class Md2DialogContent { }\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({ selector: 'md2-dialog-footer, md2-dialog-actions' })\nexport class Md2DialogActions { }\n\n@Component({\n  \n  selector: 'md2-dialog',\n  templateUrl: 'dialog.html',\n  styleUrls: ['dialog.scss'],\n  host: {\n    'tabindex': '0',\n    '[attr.role]': 'config?.role',\n  },\n  animations: [\n    trigger('state', [\n      state('void', style({ transform: 'scale(0.3)' })),\n      state('initial', style({ transform: 'scale(0.3)' })),\n      state('visible', style({ transform: 'scale(1)' })),\n      state('hidden', style({ transform: 'scale(0.3)' })),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'md2Dialog'\n})\nexport class Md2Dialog implements OnDestroy {\n\n  private _openDialogsAtThisLevel: Array<any> = [];\n  private _boundKeydown = this._handleKeydown.bind(this);\n  private _panelOpen = false;\n  private _overlayRef: OverlayRef = null;\n  private _backdropSubscription: Subscription;\n  config: Md2DialogConfig;\n\n  /** Property watched by the animation framework to show or hide the dialog */\n  _visibility: DialogVisibility = 'initial';\n\n  constructor(private _overlay: Overlay,\n    @Optional() @SkipSelf() private _parentDialog: Md2Dialog) { }\n\n  @Output() onOpen: EventEmitter<Md2Dialog> = new EventEmitter<Md2Dialog>();\n  @Output() onClose: EventEmitter<Md2Dialog> = new EventEmitter<Md2Dialog>();\n\n  /** The portal to send the dialog content through */\n  @ViewChild(Md2DialogPortal) _portal: Md2DialogPortal;\n\n  @Input('title') dialogTitle: string;\n\n  ngOnDestroy() { this.destroyPanel(); }\n\n  get _openDialogs(): Array<any> {\n    return this._parentDialog ? this._parentDialog._openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Open the dialog */\n  open(config?: Md2DialogConfig): Promise<Md2Dialog> {\n    this.config = _applyConfigDefaults(config);\n    if (this._panelOpen) {\n      return Promise.resolve<Md2Dialog>(this);\n    }\n    this._createOverlay();\n    this._overlayRef.attach(this._portal);\n    this._subscribeToBackdrop();\n\n    if (!this._openDialogs.length && !this._parentDialog) {\n      document.addEventListener('keydown', this._boundKeydown);\n    }\n\n    this._openDialogs.push(this);\n    this._panelOpen = true;\n    this._visibility = 'visible';\n    return Promise.resolve<Md2Dialog>(this);\n  }\n\n  /** Close the dialog */\n  close(): Promise<Md2Dialog> {\n    this._visibility = 'hidden';\n    this._panelOpen = false;\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      if (this._backdropSubscription) {\n        this._backdropSubscription.unsubscribe();\n      }\n    }\n\n    let index = this._openDialogs.indexOf(this);\n\n    if (index > -1) {\n      this._openDialogs.splice(index, 1);\n\n      // no open dialogs are left, call next on afterAllClosed Subject\n      if (!this._openDialogs.length) {\n        document.removeEventListener('keydown', this._boundKeydown);\n      }\n    }\n    return Promise.resolve<Md2Dialog>(this);\n  }\n\n  /** Removes the panel from the DOM. */\n  destroyPanel(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n\n      this._cleanUpSubscriptions();\n    }\n  }\n\n  _onPanelDone(): void {\n    if (this._panelOpen) {\n      this.onOpen.emit(this);\n    } else {\n      this.onClose.emit(this);\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    let topDialog = this._openDialogs[this._openDialogs.length - 1];\n\n    if (event.keyCode === ESCAPE && topDialog &&\n      !topDialog.config.disableClose) {\n      topDialog.close();\n    }\n  }\n\n  private _subscribeToBackdrop(): void {\n    if (!this.config.disableClose) {\n      this._backdropSubscription = this._overlayRef.backdropClick().pipe(first()).subscribe(() =>\n        this.close());\n    }\n  }\n\n  private _createOverlay(): void {\n    if (!this._overlayRef) {\n      let config = new OverlayState();\n      config.positionStrategy = this._overlay.position()\n        .global()\n        .centerHorizontally()\n        .centerVertically();\n      config.hasBackdrop = true;\n\n      this._overlayRef = this._overlay.create(config);\n    }\n  }\n\n  private _cleanUpSubscriptions(): void {\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n  }\n\n}\n\n/**\n * Applies default options to the dialog config.\n * @param dialogConfig Config to be modified.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(dialogConfig: Md2DialogConfig): Md2DialogConfig {\n  return extendObject(new Md2DialogConfig(), dialogConfig);\n}\n","/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule, MdCommonModule } from '../core/index';\nimport { PlatformModule } from '../core/platform/index';\nimport {\n  Md2Dialog,\n  Md2DialogTitle,\n  Md2DialogContent,\n  Md2DialogActions,\n  Md2DialogPortal\n} from './dialog';\n\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, MdCommonModule, PlatformModule],\n  exports: [\n    Md2Dialog,\n    Md2DialogTitle,\n    Md2DialogContent,\n    Md2DialogActions,\n    Md2DialogPortal\n  ],\n  declarations: [\n    Md2Dialog,\n    Md2DialogTitle,\n    Md2DialogContent,\n    Md2DialogActions,\n    Md2DialogPortal\n  ]\n})\nexport class Md2DialogModule { }\n\n\nexport * from './dialog';\n","import {\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: '[md2-menu-content]',\n  host: { 'role': 'menu' },\n  template: '<ng-content></ng-content>',\n  styleUrls: ['menu.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Md2MenuContent { }\n","import {\n  Component,\n} from '@angular/core';\n\n@Component({\n  selector: '[md2-menu-item]',\n  host: {\n    'role': 'menuitem'\n  },\n  template: '<ng-content></ng-content>'\n})\nexport class Md2MenuItem { }\n","import {\n  Directive,\n  ElementRef,\n  Renderer,\n} from '@angular/core';\n\n@Directive({\n  selector: '[md2-menu-trigger]',\n  host: {\n    'aria-haspopup': 'true',\n    '(click)': '_toggleMenu()',\n  },\n  exportAs: 'md2MenuTrigger'\n})\nexport class Md2MenuTrigger {\n\n  private _handleClick: any;\n\n  constructor(private _element: ElementRef, private _renderer: Renderer) { }\n\n  ngAfterViewInit() {\n    this._handleClick = this._renderer.listenGlobal('document', 'click', (event: Event) => {\n      if (!this._hasChildMenu(event)) {\n        this._closeMenu();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._handleClick = null;\n  }\n\n  _toggleMenu() {\n    if (this._hasClass(this._getParentElement(), 'open')) {\n      this._closeMenu();\n    } else {\n      this._openMenu();\n    }\n  }\n\n  _openMenu() {\n    this._getParentElement().classList.add('open');\n    let siblingElements = this._getSiblingElements(this._getParentElement());\n    siblingElements.forEach((el: Element) => {\n      el.classList.remove('open');\n      this._closeChildrenMenu(el);\n    });\n  }\n\n  _closeMenu() {\n    this._getParentElement().classList.remove('open');\n    this._closeChildrenMenu(this._getParentElement());\n  }\n\n  _closeChildrenMenu(element: Element) {\n    [].forEach.call(element.querySelectorAll('.open'), (el: Element) => {\n      el.classList.remove('open');\n    });\n  }\n\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  _getParentElement(): HTMLElement {\n    return this._element.nativeElement.parentNode;\n  }\n\n  _getSiblingElements(element: Element) {\n    let siblingElements: Array<Node> = [];\n    let el = element.parentNode.firstChild;\n    for (; el; el = el.nextSibling) {\n      if (el.nodeType == 1 && el !== element) {\n        siblingElements.push(el);\n      }\n    }\n    return siblingElements;\n  }\n\n  _getClosestElement(element: Element, target: string): Element {\n    if (element.hasAttribute(target)) {\n      return element;\n    }\n\n    let parentEl: Element;\n    while (element) {\n      parentEl = element.parentElement;\n      if (parentEl && parentEl.hasAttribute(target)) {\n        return parentEl;\n      }\n      element = parentEl;\n    }\n    return null;\n  }\n\n  _hasClass(element: Element, className: string) {\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n  _hasChildMenu(event: any) {\n    let el = this._getClosestElement(event.target, 'md2-menu-trigger');\n    if (el && el === this._getHostElement()) {\n      return true;\n    } else if (this._getParentElement().contains(event.target)) {\n      el = this._getClosestElement(event.target, 'md2-menu-item');\n      if (el && el.querySelectorAll('[md2-menu-content]').length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  NgModule,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Md2MenuContent } from './menu-content';\nimport { Md2MenuItem } from './menu-item';\nimport { Md2MenuTrigger } from './menu-trigger';\nexport { Md2MenuContent } from './menu-content';\nexport { Md2MenuItem } from './menu-item';\nexport { Md2MenuTrigger } from './menu-trigger';\n\n\n@Component({\n  selector: '[md2-menu]',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['menu.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Md2Menu { }\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Md2Menu, Md2MenuContent, Md2MenuItem, Md2MenuTrigger],\n  declarations: [Md2Menu, Md2MenuContent, Md2MenuItem, Md2MenuTrigger],\n})\nexport class Md2MenuModule { }\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewContainerRef,\n  ViewEncapsulation,\n  NgModule,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/** Change event object that is emitted when the tab has changed. */\nexport class Md2TabChange {\n  constructor(public tab: Md2Tab, public index: number) { }\n}\n\n@Directive({ selector: '[md2Transclude]' })\nexport class Md2Transclude {\n\n  private _md2Transclude: TemplateRef<any>;\n\n  constructor(public viewRef: ViewContainerRef) { }\n\n  @Input()\n  get md2Transclude() { return this._md2Transclude; }\n  set md2Transclude(templateRef: TemplateRef<any>) {\n    this._md2Transclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n}\n\n@Component({\n  \n  selector: 'md2-tab',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class]': 'class',\n    '[class.active]': 'active'\n  }\n})\nexport class Md2Tab {\n\n  @Input() label: string;\n\n  @Input() active: boolean;\n\n  @Input() disabled: boolean;\n\n  @Input() class: string;\n\n  labelRef: TemplateRef<any>;\n\n}\n\n@Directive({ selector: '[md2-tab-label]' })\nexport class Md2TabLabel {\n  constructor(public templateRef: TemplateRef<any>, tab: Md2Tab) {\n    tab.labelRef = templateRef;\n  }\n}\n\n@Component({\n  \n  selector: 'md2-tabs',\n  templateUrl: 'tabs.html',\n  styleUrls: ['tabs.scss'],\n  host: {\n    '[class]': 'class',\n    '(window:resize)': 'onWindowResize()'\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Tabs implements AfterContentInit {\n\n  @ContentChildren(Md2Tab) tabs: QueryList<Md2Tab>;\n\n  private _isInitialized: boolean = false;\n  private _focusIndex: number = 0;\n  private _selectedIndex: number = 0;\n  _shouldPaginate: boolean = false;\n  _offsetLeft: number = 0;\n  _inkBarLeft: string = '0';\n  _inkBarWidth: string = '0';\n\n  @Input() class: string;\n\n  @Input()\n  get selectedIndex() { return this._selectedIndex; }\n  set selectedIndex(value: any) {\n    if (typeof value === 'string') { value = parseInt(value); }\n    if (value !== this._selectedIndex) {\n      this._selectedIndex = value;\n      this.adjustOffset(value);\n      this._updateInkBar();\n      if (this.tabs) {\n        const tabs = this.tabs.toArray();\n        if (!tabs[value].disabled) {\n          tabs.forEach(tab => tab.active = false);\n          tabs[value].active = true;\n        }\n      }\n      if (this._isInitialized) {\n        this._emitChangeEvent();\n        this.selectedIndexChange.emit(value);\n      }\n    }\n  }\n\n  get focusIndex(): number { return this._focusIndex; }\n  set focusIndex(value: number) {\n    this._focusIndex = value;\n    this.adjustOffset(value);\n  }\n\n  get element() {\n    const elements: any = {\n      root: this.elementRef.nativeElement,\n      wrapper: null,\n      canvas: null,\n      paging: null,\n      tabs: null\n    };\n    elements.wrapper = elements.root.querySelector('.md2-tabs-header-wrapper');\n    elements.canvas = elements.wrapper.querySelector('.md2-tabs-canvas');\n    elements.paging = elements.canvas.querySelector('.md2-tabs-header');\n    elements.tabs = elements.paging.querySelectorAll('.md2-tab-label');\n    return elements;\n  }\n\n  @Output() change: EventEmitter<Md2TabChange> = new EventEmitter<Md2TabChange>();\n  @Output() selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(private elementRef: ElementRef) { }\n\n  /**\n   * After Content Init\n   */\n  ngAfterContentInit() {\n    setTimeout(() => {\n      this.updatePagination();\n    }, 0);\n    setTimeout(() => {\n      const tabs = this.tabs.toArray();\n      if (this.selectedIndex) {\n        if (this.selectedIndex >= tabs.length) {\n          this.selectedIndex = 0;\n        }\n        tabs.forEach(tab => tab.active = false);\n        tabs[this.selectedIndex].active = true;\n        this.adjustOffset(this.selectedIndex);\n      } else {\n        let index = tabs.findIndex((t: any) => t.active);\n        if (index < 0) {\n          tabs[0].active = true;\n        } else {\n          this.selectedIndex = index;\n        }\n      }\n      this._updateInkBar();\n    }, 0);\n    this._isInitialized = true;\n  }\n\n  /**\n   * Calculates the styles from the selected tab for the ink-bar.\n   */\n  private _updateInkBar(): void {\n    let elements = this.element;\n    if (!elements.tabs[this.selectedIndex]) { return; }\n    let tab = elements.tabs[this.selectedIndex];\n    this._inkBarLeft = tab.offsetLeft + 'px';\n    this._inkBarWidth = tab.offsetWidth + 'px';\n  }\n\n  /** Emits an event when the user selects an option. */\n  _emitChangeEvent(): void {\n    let index = this._selectedIndex;\n    this.change.emit(new Md2TabChange(this.tabs.toArray()[index], index));\n  }\n\n  /**\n   * Focus next Tab\n   */\n  focusNextTab() { this.incrementIndex(1); }\n\n  /**\n   * Focus previous Tab\n   */\n  focusPreviousTab() { this.incrementIndex(-1); }\n\n  /**\n   * Mouse Wheel scroll\n   * @param event\n   */\n  scroll(event: any) {\n    if (!this._shouldPaginate) { return; }\n    event.preventDefault();\n    this._offsetLeft = this.fixOffset(this._offsetLeft - event.wheelDelta);\n  }\n\n  /**\n   * Next Page\n   */\n  nextPage() {\n    let elements = this.element;\n    let viewportWidth = elements.canvas.clientWidth,\n      totalWidth = viewportWidth + this._offsetLeft,\n      i: number, tab: any;\n    for (i = 0; i < elements.tabs.length; i++) {\n      tab = elements.tabs[i];\n      if (tab.offsetLeft + tab.offsetWidth > totalWidth) { break; }\n    }\n    this._offsetLeft = this.fixOffset(tab.offsetLeft);\n  }\n\n  /**\n   * Previous Page\n   */\n  previousPage() {\n    let i: number, tab: any, elements = this.element;\n\n    for (i = 0; i < elements.tabs.length; i++) {\n      tab = elements.tabs[i];\n      if (tab.offsetLeft + tab.offsetWidth >= this._offsetLeft) { break; }\n    }\n    this._offsetLeft = this.fixOffset(tab.offsetLeft +\n      tab.offsetWidth - elements.canvas.clientWidth);\n  }\n\n  /**\n   * On Window Resize\n   * @param event\n   */\n  onWindowResize() {\n    this._offsetLeft = this.fixOffset(this._offsetLeft);\n    this.updatePagination();\n  }\n\n  /**\n   * Can page Back\n   */\n  canPageBack() { return this._offsetLeft > 0; }\n\n  /**\n   * Can page Previous\n   */\n  canPageForward() {\n    let elements = this.element;\n    let lastTab = elements.tabs[elements.tabs.length - 1];\n    return lastTab && lastTab.offsetLeft + lastTab.offsetWidth > elements.canvas.clientWidth +\n      this._offsetLeft;\n  }\n\n  /**\n   * Update Pagination\n   */\n  updatePagination() {\n    let canvasWidth = this.element.root.clientWidth;\n    let tabs: any[] = this.element.tabs ? this.element.tabs : [];\n    for (let i = 0; i < tabs.length; i++) {\n      canvasWidth -= tabs[i].offsetWidth;\n    }\n    this._shouldPaginate = canvasWidth < 0;\n  }\n\n  /**\n   * Increment Focus Tab\n   * @param inc\n   */\n  incrementIndex(inc: any) {\n    let newIndex: number,\n      index = this.focusIndex;\n    for (newIndex = index + inc;\n      this.tabs.toArray()[newIndex] && this.tabs.toArray()[newIndex].disabled;\n      newIndex += inc) { }\n    if (this.tabs.toArray()[newIndex]) {\n      this.focusIndex = newIndex;\n    }\n  }\n\n  /**\n   * Adjust Offset of Tab\n   * @param index\n   */\n  adjustOffset(index: number) {\n    let elements = this.element;\n    if (!elements.tabs[index]) { return; }\n    let tab = elements.tabs[index],\n      left = tab.offsetLeft,\n      right = tab.offsetWidth + left;\n    this._offsetLeft = Math.max(this._offsetLeft,\n      this.fixOffset(right - elements.canvas.clientWidth + 32 * 2));\n    this._offsetLeft = Math.min(this._offsetLeft, this.fixOffset(left));\n  }\n\n  /**\n   * Fix Offset of Tab\n   * @param value\n   * @return value\n   */\n  fixOffset(value: any) {\n    let elements = this.element;\n    if (!elements.tabs.length || !this._shouldPaginate) { return 0; }\n    let lastTab = elements.tabs[elements.tabs.length - 1],\n      totalWidth = lastTab.offsetLeft + lastTab.offsetWidth;\n    value = Math.min(totalWidth - elements.canvas.clientWidth, value);\n    value = Math.max(0, value);\n    return value;\n  }\n\n}\n\nexport const MD2_TABS_DIRECTIVES: any[] = [Md2TabLabel, Md2Tabs, Md2Tab];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: MD2_TABS_DIRECTIVES,\n  declarations: [Md2Transclude, Md2TabLabel, Md2Tabs, Md2Tab],\n})\nexport class Md2TabsModule { }\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport {\n  coerceBooleanProperty,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  BACKSPACE,\n  DELETE,\n  TAB,\n  ESCAPE\n} from '../core/core';\n\nconst noop = () => { };\n\nlet nextId = 0;\n\nexport class Tag {\n  text: string;\n  value: string;\n\n  constructor(source: any, textKey: string, valueKey: string) {\n    if (typeof source === 'string') {\n      this.text = this.value = source;\n    }\n    if (typeof source === 'object') {\n      this.text = source[textKey];\n      this.value = valueKey ? source[valueKey] : source;\n    }\n  }\n}\n\nexport const MD2_TAGS_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Md2Tags),\n  multi: true\n};\n\n@Component({\n  \n  selector: 'md2-tags',\n  templateUrl: 'tags.html',\n  styleUrls: ['tags.scss'],\n  host: {\n    'role': 'tags',\n    '[id]': 'id',\n    '[class.focus]': '_inputFocused || _selectedTag >= 0',\n    '[class.md2-tags-disabled]': 'disabled',\n    '[tabindex]': 'disabled ? -1 : tabindex',\n    '[attr.aria-disabled]': 'disabled'\n  },\n  providers: [MD2_TAGS_CONTROL_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'md2Tags'\n})\n\nexport class Md2Tags implements AfterContentInit, ControlValueAccessor {\n\n  constructor(private _element: ElementRef) { }\n\n  ngAfterContentInit() { this._isInitialized = true; }\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n\n  private _value: any = '';\n  private _disabled: boolean = false;\n  private _isInitialized: boolean = false;\n  private _onTouchedCallback: () => void = noop;\n  private _onChangeCallback: (_: any) => void = noop;\n\n  private _tags: Array<any> = [];\n  _list: Array<Tag> = [];\n  _items: Array<Tag> = [];\n\n  _focusedTag: number = 0;\n  _selectedTag: number = -1;\n  _inputValue: string = '';\n  _inputFocused: boolean = false;\n  private noBlur: boolean = true;\n\n  @Input() id: string = 'md2-tags-' + (++nextId);\n  @Input() tabindex: number = 0;\n  @Input() placeholder: string = '';\n  @Input('md2-tag-text') textKey: string = 'text';\n  @Input('md2-tag-value') valueKey: string = null;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n\n  @Input('md2-tags')\n  set tags(value: Array<any>) { this._tags = value; }\n\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) { this.setValue(value); }\n\n  /**\n   * setup value\n   * @param value\n   */\n  private setValue(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this._items = [];\n      if (value && value.length && typeof value === 'object' && Array.isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n          let selItm = this._tags.find((t: any) => this.equals(this.valueKey ?\n            t[this.valueKey] : t, value[i]));\n          if (selItm) { this._items.push(new Tag(selItm, this.textKey, this.valueKey)); }\n        }\n      }\n      if (this._isInitialized) {\n        this._onChangeCallback(value);\n        this.change.emit(this._value);\n      }\n    }\n  }\n\n  /**\n   * Compare two vars or objects\n   * @param o1 compare first object\n   * @param o2 compare second object\n   * @return boolean comparation result\n   */\n  private equals(o1: any, o2: any) {\n    if (o1 === o2) { return true; }\n    if (o1 === null || o2 === null) { return false; }\n    if (o1 !== o1 && o2 !== o2) { return true; }\n    let t1 = typeof o1, t2 = typeof o2, key: any, keySet: any;\n    if (t1 === t2 && t1 === 'object') {\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (!this.equals(o1[key], o2[key])) { return false; }\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) && key.charAt(0) !== '$' && o2[key]) { return false; }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  get isMenuVisible(): boolean {\n    return ((this._inputFocused || this.noBlur) && this._inputValue &&\n      this._list && this._list.length) ? true : false;\n  }\n\n  /**\n   * update scroll of tags suggestion menu\n   */\n  private updateScroll() {\n    if (this._focusedTag < 0) { return; }\n    let menuContainer = this._element.nativeElement.querySelector('.md2-tags-menu');\n    if (!menuContainer) { return; }\n\n    let choices = menuContainer.querySelectorAll('.md2-option');\n    if (choices.length < 1) { return; }\n\n    let highlighted: any = choices[this._focusedTag];\n    if (!highlighted) { return; }\n\n    let top: number = highlighted.offsetTop + highlighted.clientHeight - menuContainer.scrollTop;\n    let height: number = menuContainer.offsetHeight;\n\n    if (top > height) {\n      menuContainer.scrollTop += top - height;\n    } else if (top < highlighted.clientHeight) {\n      menuContainer.scrollTop -= highlighted.clientHeight - top;\n    }\n  }\n\n  /**\n   * input key listener\n   * @param event\n   */\n  _handleInputKeydown(event: KeyboardEvent) {\n    // Backspace\n    if (event.keyCode === 8 && !this._inputValue) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (this._items.length && this._selectedTag < 0) {\n        this.selectAndFocusTagSafe(this._items.length - 1);\n      }\n      if (this._items.length && this._selectedTag > -1) {\n        this.removeAndSelectAdjacentTag(this._selectedTag);\n      }\n      return;\n    }\n    // Del Key\n    if (event.keyCode === 46 && !this._inputValue) { return; }\n    // Left / Right Arrow\n    if ((event.keyCode === 37 || event.keyCode === 39) && !this._inputValue) { return; }\n    // Down Arrow\n    if (event.keyCode === 40) {\n      if (!this.isMenuVisible) { return; }\n      event.stopPropagation();\n      event.preventDefault();\n      this._focusedTag = (this._focusedTag === this._list.length - 1) ?\n        0 : Math.min(this._focusedTag + 1, this._list.length - 1);\n      this.updateScroll();\n      return;\n    }\n    // Up Arrow\n    if (event.keyCode === 38) {\n      if (!this.isMenuVisible) { return; }\n      event.stopPropagation();\n      event.preventDefault();\n      this._focusedTag = (this._focusedTag === 0) ?\n        this._list.length - 1 : Math.max(0, this._focusedTag - 1);\n      this.updateScroll();\n      return;\n    }\n    // Tab Key\n    if (event.keyCode === 9) { return; }\n    // Enter / Space\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      if (!this._inputValue || !this.isMenuVisible) { event.preventDefault(); return; }\n      event.preventDefault();\n      this._addTag(event, this._focusedTag);\n      return;\n    }\n    // Escape Key\n    if (event.keyCode === 27) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (this._inputValue) { this._inputValue = ''; }\n      if (this._selectedTag >= 0) { this._handleFocus(); }\n      return;\n    }\n    // reset selected tag\n    if (this._selectedTag >= 0) { this.resetselectedTag(); }\n    // filter\n    setTimeout(() => {\n      this.filterMatches();\n    }, 10);\n  }\n\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent) {\n    if (this.disabled || this._inputValue) { return; }\n    switch (event.keyCode) {\n      case BACKSPACE:\n      case DELETE:\n        if (this._selectedTag < 0) { return; }\n        event.preventDefault();\n        this.removeAndSelectAdjacentTag(this._selectedTag);\n        break;\n\n      case TAB:\n      case ESCAPE:\n        if (this._selectedTag < 0) { return; }\n        event.preventDefault();\n        this._handleFocus();\n        break;\n\n      case LEFT_ARROW:\n        event.preventDefault();\n        if (this._selectedTag < 0) { this._selectedTag = this._items.length; }\n        if (this._items.length) { this.selectAndFocusTagSafe(this._selectedTag - 1); }\n        break;\n      case RIGHT_ARROW:\n        event.preventDefault();\n        if (this._selectedTag >= this._items.length) { this._selectedTag = -1; }\n        this.selectAndFocusTagSafe(this._selectedTag + 1);\n        break;\n    }\n  }\n\n  private removeAndSelectAdjacentTag(index: number) {\n    let selIndex = this.getAdjacentTagIndex(index);\n    this.removeTag(index);\n    this.selectAndFocusTagSafe(selIndex);\n  }\n\n  private resetselectedTag() {\n    this._selectedTag = -1;\n  }\n\n  private getAdjacentTagIndex(index: number) {\n    let len = this._items.length - 1;\n    return (len === 0) ? -1 :\n      (index === len) ? index - 1 : index;\n  }\n\n  /**\n   * add tag\n   * @param event\n   * @param index index of the specific tag\n   */\n  _addTag(event: Event, index: number) {\n    event.preventDefault();\n    event.stopPropagation();\n    this._items.push(this._list[index]);\n    this._inputValue = '';\n    this.updateValue();\n  }\n\n  _removeTagAndFocusInput(index: number) {\n    this.removeTag(index);\n    this._handleFocus();\n  }\n\n  /**\n   * remove tag\n   * @param index\n   */\n  private removeTag(index: number) {\n    this._items.splice(index, 1);\n    this.updateValue();\n  }\n\n  /**\n   * update value\n   */\n  private updateValue() {\n    this._value = new Array<any>();\n    for (let i = 0; i < this._items.length; i++) {\n      this._value.push(this._items[i].value);\n    }\n    this._onChangeCallback(this._value);\n    this.change.emit(this._value);\n  }\n\n  private selectAndFocusTagSafe = function (index: number) {\n    if (!this._items.length) {\n      this._selectTag(-1);\n      this._handleFocus();\n      return;\n    }\n    if (index === this._items.length) { return this._handleFocus(); }\n    index = Math.max(index, 0);\n    index = Math.min(index, this._items.length - 1);\n    this._selectTag(index);\n  };\n\n  /**\n   * select tag\n   * @param index of select tag\n   */\n  _selectTag(index: number) {\n    if (index >= -1 && index <= this._items.length) {\n      this._selectedTag = index;\n    }\n  }\n\n  @HostListener('focus')\n  _handleFocus() {\n    this._element.nativeElement.querySelector('input').focus();\n    this.resetselectedTag();\n  }\n\n  _onInputFocus() {\n    this._inputFocused = true;\n    this.resetselectedTag();\n  }\n\n  _onInputBlur() {\n    this._inputFocused = false;\n  }\n\n  _listEnter() { this.noBlur = true; }\n\n  _listLeave() { this.noBlur = false; }\n\n  /**\n   * update suggestion menu with filter\n   * @param query\n   */\n  private filterMatches() {\n    let tempList = this._tags.map((tag: any) => new Tag(tag, this.textKey, this.valueKey));\n    this._list = tempList.filter((t: Tag) =>\n      (new RegExp(this._inputValue, 'ig').test(t.text) &&\n        !this._items.find((i: Tag) => t.text === i.text)));\n    if (this._list.length > 0) {\n      this._focusedTag = 0;\n    }\n  }\n\n  writeValue(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this._items = [];\n      if (value && value.length && typeof value === 'object' && Array.isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n          let selItm = this._tags.find((t: any) => this.equals(this.valueKey ?\n            t[this.valueKey] : t, value[i]));\n          if (selItm) { this._items.push(new Tag(selItm, this.textKey, this.valueKey)); }\n        }\n      }\n    }\n  }\n\n  registerOnChange(fn: any) { this._onChangeCallback = fn; }\n\n  registerOnTouched(fn: any) { this._onTouchedCallback = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Md2AutocompleteModule } from '../autocomplete/index';\nimport { Md2Tags } from './tags';\n\nexport * from './tags';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, Md2AutocompleteModule],\n  exports: [Md2Tags],\n  declarations: [Md2Tags],\n})\nexport class Md2TagsModule { }\n","import {\n  Component,\n  Injectable,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  ComponentPortal,\n} from '../core/index';\n\nexport class Toast {\n  id: number;\n  isVisible: boolean;\n  constructor(public message: string) { }\n}\n\nexport class Md2ToastConfig {\n  duration: number = 3000;\n  viewContainerRef?: ViewContainerRef = null;\n}\n\n@Injectable()\nexport class Md2Toast {\n  private index: number = 0;\n\n  _overlayRef: OverlayRef;\n  _toastInstance: Md2ToastComponent;\n\n  constructor(private _overlay: Overlay, private _config: Md2ToastConfig) { }\n\n  /**\n   * toast message\n   * @param toast string or object with message and other properties of toast\n   */\n  toast(message: string, duration?: number) {\n    this.show(message, duration);\n  }\n\n  /**\n   * show toast\n   * @param toastObj string or object with message and other properties of toast\n   */\n  show(message: string, duration?: number) {\n    if (!message || !message.trim()) { return; }\n\n    if (duration) { this._config.duration = duration; }\n\n    let toast: Toast;\n    toast = new Toast(message);\n\n    if (toast) {\n      if (!this._toastInstance) {\n        this._createToast();\n      }\n\n      this._setToastMessage(toast);\n    }\n  }\n\n  /** Create the toast to display */\n  private _createToast(): void {\n    this._createOverlay();\n    let portal = new ComponentPortal(Md2ToastComponent, this._config.viewContainerRef);\n    this._toastInstance = this._overlayRef.attach(portal).instance;\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): void {\n    if (!this._overlayRef) {\n      let config = new OverlayState();\n      config.positionStrategy = this._overlay.position()\n        .global()\n        .top('0').right('0');\n\n      this._overlayRef = this._overlay.create(config);\n    }\n  }\n\n  /** Disposes the current toast and the overlay it is attached to */\n  private _disposeToast(): void {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._toastInstance = null;\n  }\n\n  /** Updates the toast message and repositions the overlay according to the new message length */\n  private _setToastMessage(toast: Toast) {\n    toast.id = ++this.index;\n    this._toastInstance.addToast(toast);\n    setTimeout(() => {\n      this.clearToast(toast.id);\n    }, this._config.duration);\n  }\n\n  /**\n   * clear specific toast\n   * @param toastId\n   */\n  private clearToast(toastId: number) {\n    if (this._toastInstance) {\n      this._toastInstance.removeToast(toastId);\n      setTimeout(() => {\n        if (!this._toastInstance.hasToast()) { this._disposeToast(); }\n      }, 250);\n\n    }\n  }\n\n  /**\n   * clear all toasts\n   */\n  clearAllToasts() {\n    if (this._toastInstance) {\n      this._toastInstance.removeAllToasts();\n      setTimeout(() => {\n        if (!this._toastInstance.hasToast()) { this._disposeToast(); }\n      }, 250);\n\n    }\n  }\n\n}\n\n@Component({\n  selector: 'md2-toast',\n  templateUrl: 'toast.html',\n  styleUrls: ['toast.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Md2ToastComponent {\n  toasts: Toast[] = [];\n  maxShown = 5;\n\n  /**\n   * add toast\n   * @param toast toast object with all parameters\n   */\n  addToast(toast: Toast) {\n    setTimeout(() => {\n      toast.isVisible = true;\n    }, 1);\n    this.toasts.push(toast);\n    if (this.toasts.length > this.maxShown) {\n      this.toasts[0].isVisible = false;\n      setTimeout(() => {\n        this.toasts.splice(0, (this.toasts.length - this.maxShown));\n      }, 250);\n    }\n  }\n\n  /**\n   * remove toast\n   * @param toastId number of toast id\n   */\n  removeToast(toastId: number) {\n    this.toasts.forEach((t: any) => { if (t.id === toastId) { t.isVisible = false; } });\n    setTimeout(() => {\n      this.toasts = this.toasts.filter((toast) => { return toast.id !== toastId; });\n    }, 250);\n  }\n\n  /**\n   * remove all toasts\n   * @param toastId number of toast id\n   */\n  removeAllToasts() {\n    this.toasts.forEach((t: any) => { t.isVisible = false; });\n    setTimeout(() => {\n      this.toasts = [];\n    }, 250);\n  }\n\n  /**\n   * check has any toast\n   * @return boolean\n   */\n  hasToast(): boolean { return this.toasts.length > 0; }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule, MdCommonModule } from '../core/index';\nimport { PlatformModule } from '../core/platform/index';\nimport { Md2Toast, Md2ToastConfig, Md2ToastComponent } from './toast';\n\nexport * from './toast';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdCommonModule,\n    PlatformModule\n  ],\n  exports: [Md2ToastComponent, MdCommonModule],\n  declarations: [Md2ToastComponent],\n  entryComponents: [Md2ToastComponent],\n  providers: [Md2Toast, Md2ToastConfig],\n})\nexport class Md2ToastModule { }\n","import {\n  Component,\n  Directive,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  NgZone,\n  Optional,\n  OnDestroy,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n  AnimationEvent,\n} from '@angular/animations';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  ComponentPortal,\n  OverlayConnectionPosition,\n  OriginConnectionPosition,\n} from '../core/index';\nimport { Observable, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Dir } from '../core/rtl/dir';\nimport { Platform } from '../core/platform/index';\nimport { ScrollDispatcher } from '../core/overlay/scroll/scroll-dispatcher';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** Throws an error if the user supplied an invalid tooltip position. */\nexport function throwMd2TooltipInvalidPositionError(position: string) {\n  throw new Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[tooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n  },\n  exportAs: 'md2Tooltip',\n})\nexport class Md2Tooltip implements OnDestroy {\n  _overlayRef: OverlayRef;\n  _tooltipInstance: Md2TooltipComponent;\n\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('tooltip-position')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('tooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('tooltip-delay') showDelay = 0;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('tooltip-hide-delay') hideDelay = 0;\n\n  private _message: string;\n\n  /** The message to be displayed in the tooltip */\n  @Input('tooltip') get message() { return this._message; }\n  set message(value: string) {\n    this._message = value;\n    if (this._tooltipInstance) {\n      this._setTooltipMessage(this._message);\n    }\n  }\n\n  constructor(private _overlay: Overlay,\n    private _elementRef: ElementRef,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _renderer: Renderer2,\n    private _platform: Platform,\n    @Optional() private _dir: Dir) {\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      _renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\n      _renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\n    }\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this._message || !this._message.trim()) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipMessage(this._message);\n    this._tooltipInstance.show(this._position, delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Create the tooltip to display */\n  private _createTooltip(): void {\n    this._createOverlay();\n    let portal = new ComponentPortal(Md2TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance.afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): void {\n    let origin = this._getOrigin();\n    let position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    let strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe((change: any) => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n        this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n\n    let config = new OverlayState();\n\n    config.direction = this._dir ? this._dir.value : 'ltr';\n    config.positionStrategy = strategy;\n    config.scrollStrategy = this._overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n\n    this._overlayRef = this._overlay.create(config);\n  }\n\n  /** Disposes the current tooltip and the overlay it is attached to */\n  private _disposeTooltip(): void {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._tooltipInstance = null;\n  }\n\n  /** Returns the origin position based on the user's position preference */\n  _getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };\n    }\n\n    const isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n      this.position == 'before' && isDirectionLtr ||\n      this.position == 'after' && !isDirectionLtr) {\n      return { originX: 'start', originY: 'center' };\n    }\n\n    if (this.position == 'right' ||\n      this.position == 'after' && isDirectionLtr ||\n      this.position == 'before' && !isDirectionLtr) {\n      return { originX: 'end', originY: 'center' };\n    }\n\n    throwMd2TooltipInvalidPositionError(this.position);\n  }\n\n  /** Returns the overlay position based on the user's preference */\n  _getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return { overlayX: 'center', overlayY: 'bottom' };\n    }\n\n    if (this.position == 'below') {\n      return { overlayX: 'center', overlayY: 'top' };\n    }\n\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n      this.position == 'before' && isLtr ||\n      this.position == 'after' && !isLtr) {\n      return { overlayX: 'end', overlayY: 'center' };\n    }\n\n    if (this.position == 'right' ||\n      this.position == 'after' && isLtr ||\n      this.position == 'before' && !isLtr) {\n      return { overlayX: 'start', overlayY: 'center' };\n    }\n\n    throwMd2TooltipInvalidPositionError(this.position);\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    this._tooltipInstance.message = message;\n    this._tooltipInstance._markForCheck();\n\n    this._ngZone.onMicrotaskEmpty.pipe(first()).subscribe(() => {\n      if (this._tooltipInstance) {\n        this._overlayRef.updatePosition();\n      }\n    });\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  \n  selector: 'md2-tooltip',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.scss'],\n  animations: [\n    trigger('state', [\n      state('void', style({ transform: 'scale(0)' })),\n      state('initial', style({ transform: 'scale(0)' })),\n      state('visible', style({ transform: 'scale(1)' })),\n      state('hidden', style({ transform: 'scale(0)' })),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()'\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: string = 'bottom';\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private _onHide: Subject<any> = new Subject();\n\n  constructor( @Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param position Position of the tooltip.\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // If this was set to true immediately, then a body click that triggers show() would\n      // trigger interaction and close the tooltip right after it was displayed.\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n      setTimeout(() => this._closeOnInteraction = true, 0);\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Returns an observable that notifies when the tooltip has been hidden from view\n   */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /**\n   * Whether the tooltip is being displayed\n   */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the tooltip position */\n  _setTransformOrigin(value: TooltipPosition) {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after': this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left': this._transformOrigin = 'right'; break;\n      case 'right': this._transformOrigin = 'left'; break;\n      case 'above': this._transformOrigin = 'bottom'; break;\n      case 'below': this._transformOrigin = 'top'; break;\n      default: throwMd2TooltipInvalidPositionError(value);\n    }\n  }\n\n  _afterVisibilityAnimation(e: AnimationEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {OverlayModule, MdCommonModule, PlatformModule} from '../core/index';\nimport {Md2Tooltip, Md2TooltipComponent} from './tooltip';\n\n\n@NgModule({\n  imports: [OverlayModule, MdCommonModule, PlatformModule],\n  exports: [Md2Tooltip, Md2TooltipComponent, MdCommonModule],\n  declarations: [Md2Tooltip, Md2TooltipComponent],\n  entryComponents: [Md2TooltipComponent],\n})\nexport class Md2TooltipModule {}\n\n\nexport * from './tooltip';\n","import { NgModule } from '@angular/core';\n\nimport {\n  MdRippleModule,\n  RtlModule,\n  PortalModule,\n  OverlayModule,\n  A11yModule,\n  CompatibilityModule,\n  MdNativeDateModule,\n} from './core/index';\n\nimport { Md2AccordionModule } from './accordion/index';\nimport { Md2AutocompleteModule } from './autocomplete/index';\nimport { Md2ChipsModule } from './chips/chips';\nimport { Md2CollapseModule } from './collapse/index';\nimport { Md2ColorpickerModule } from './colorpicker/index';\nimport { Md2DataTableModule } from './data-table/data-table';\nimport { Md2DatepickerModule } from './datepicker/index';\nimport { Md2DialogModule } from './dialog/index';\nimport { Md2MenuModule } from './menu/menu';\nimport { Md2SelectModule } from './select/index';\nimport { Md2TabsModule } from './tabs/tabs';\nimport { Md2TagsModule } from './tags/index';\nimport { Md2ToastModule } from './toast/index';\nimport { Md2TooltipModule } from './tooltip/index';\n\nimport { PlatformModule } from './core/platform/index';\nimport { StyleModule } from './core/style/index';\n\nconst MD2_MODULES = [\n  Md2AccordionModule,\n  Md2AutocompleteModule,\n  Md2ChipsModule,\n  Md2CollapseModule,\n  Md2ColorpickerModule,\n  Md2DataTableModule,\n  Md2DatepickerModule,\n  Md2DialogModule,\n  Md2MenuModule,\n  MdRippleModule,\n  Md2SelectModule,\n  Md2TabsModule,\n  Md2TagsModule,\n  Md2ToastModule,\n  Md2TooltipModule,\n  OverlayModule,\n  PortalModule,\n  RtlModule,\n  StyleModule,\n  A11yModule,\n  PlatformModule,\n  CompatibilityModule,\n  MdNativeDateModule,\n];\n\n@NgModule({\n  imports: MD2_MODULES,\n  exports: MD2_MODULES,\n})\nexport class Md2Module { }\n","\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","/** Coerces a data-bound value (typically a string) to a number. */\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return isNaN(parseFloat(value as any)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n","/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param element\n * @param transformValue\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\n  // It's important to trim the result, because the browser will ignore the set operation\n  // if the string contains only whitespace.\n  let value = transformValue.trim();\n\n  element.style.transform = value;\n  element.style.webkitTransform = value;\n}\n"]}